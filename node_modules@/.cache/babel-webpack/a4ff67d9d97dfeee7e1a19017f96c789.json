{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./driver-payments-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./driver-payments-list.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\nimport Constants from \"src/app/pages/fleet/constants\";\nimport { AccountService, ApiService, DashboardUtilityService } from \"src/app/services\";\nlet DriverPaymentsListComponent = class DriverPaymentsListComponent {\n  constructor(toaster, accountService, apiService, dashboardUtilityService) {\n    this.toaster = toaster;\n    this.accountService = accountService;\n    this.apiService = apiService;\n    this.dashboardUtilityService = dashboardUtilityService;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.payments = [];\n    this.settlementIds = [];\n    this.filter = {\n      startDate: null,\n      endDate: null,\n      type: null,\n      searchValue: null\n    };\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.lastItemSK = \"\";\n    this.loaded = false;\n    this.disableSearch = false;\n    this.driversObject = {};\n    this.carriersObject = {};\n    this.ownerOpObjects = {};\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.fetchDriverPayments();\n\n      _this.driversObject = yield _this.dashboardUtilityService.getDrivers();\n      _this.carriersObject = yield _this.dashboardUtilityService.getContactsCarriers();\n      _this.ownerOpObjects = yield _this.dashboardUtilityService.getOwnerOperators();\n    })();\n  }\n\n  unitTypeChange() {\n    this.filter.searchValue = null;\n  }\n\n  fetchDriverPayments(refresh) {\n    let searchParam = null;\n\n    if (refresh === true) {\n      this.lastItemSK = \"\";\n      this.payments = [];\n    }\n\n    if (this.lastItemSK !== \"end\") {\n      if (this.filter.searchValue !== null && this.filter.searchValue !== \"\") {\n        searchParam = this.filter.type === 'paymentNo' ? encodeURIComponent(`\"${this.filter.searchValue}\"`) : `${this.filter.searchValue}`;\n      } else {\n        searchParam = null;\n      }\n\n      this.accountService.getData(`driver-payments/paging?type=${this.filter.type}&searchValue=${searchParam}&startDate=${this.filter.startDate}&endDate=${this.filter.endDate}&lastKey=${this.lastItemSK}`).subscribe(result => {\n        if (result.length === 0) {\n          this.dataMessage = Constants.NO_RECORDS_FOUND;\n          this.disableSearch = false;\n        }\n\n        if (result.length > 0) {\n          this.disableSearch = false;\n\n          if (result[result.length - 1].sk !== undefined) {\n            this.lastItemSK = encodeURIComponent(result[result.length - 1].sk);\n          } else {\n            this.lastItemSK = \"end\";\n          }\n\n          result.map(v => {\n            v.currency = v.currency ? v.currency : \"CAD\";\n            v.url = `/accounts/payments/driver-payments/detail/${v.paymentID}`;\n\n            if (v.payMode) {\n              v.payMode = v.payMode.replace(\"_\", \" \");\n            } else {\n              v.payMode = \"-\";\n            }\n\n            v.paymentTo = v.paymentTo.replace(\"_\", \" \");\n            v.settlData.map(k => {\n              k.status = k.status.replace(\"_\", \" \");\n            });\n            this.payments.push(v);\n          });\n          this.loaded = true;\n        }\n      });\n    }\n  }\n\n  searchFilter() {\n    if (this.filter.type !== null || this.filter.searchValue !== \"\" || this.filter.endDate !== null || this.filter.startDate !== null) {\n      this.disableSearch = true;\n\n      if (this.filter.startDate != \"\" && this.filter.endDate == \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filter.startDate == \"\" && this.filter.endDate != \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filter.startDate > this.filter.endDate) {\n        this.toaster.error(\"Start date should be less then end date\");\n        return false;\n      } else {\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.payments = [];\n        this.lastItemSK = \"\";\n        this.fetchDriverPayments();\n      }\n    }\n  }\n\n  resetFilter() {\n    this.disableSearch = true;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.payments = [];\n    this.filter = {\n      startDate: null,\n      endDate: null,\n      type: null,\n      searchValue: null\n    };\n    this.lastItemSK = \"\";\n    this.fetchDriverPayments();\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.fetchDriverPayments();\n    }\n\n    this.loaded = false;\n  }\n\n  refreshData() {\n    this.disableSearch = true;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.payments = [];\n    this.filter = {\n      startDate: null,\n      endDate: null,\n      type: null,\n      searchValue: null\n    };\n    this.lastItemSK = \"\";\n    this.fetchDriverPayments();\n  }\n\n};\n\nDriverPaymentsListComponent.ctorParameters = () => [{\n  type: ToastrService\n}, {\n  type: AccountService\n}, {\n  type: ApiService\n}, {\n  type: DashboardUtilityService\n}];\n\nDriverPaymentsListComponent = __decorate([Component({\n  selector: \"app-driver-payments-list\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], DriverPaymentsListComponent);\nexport { DriverPaymentsListComponent };","map":null,"metadata":{},"sourceType":"module"}