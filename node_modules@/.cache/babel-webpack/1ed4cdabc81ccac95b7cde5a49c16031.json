{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./customer-collection.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./customer-collection.component.css\";\nimport { Component, ViewChild, ElementRef } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { SelectionType, ColumnMode } from \"@swimlane/ngx-datatable\";\nimport Constant from \"src/app/pages/fleet/constants\";\nimport { ToastrService } from 'ngx-toastr';\nimport * as html2pdf from \"html2pdf.js\";\nimport * as moment from 'moment';\nimport * as _ from \"lodash\";\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nlet CustomerCollectionComponent = class CustomerCollectionComponent {\n  //  previewReportModal: TemplateRef<any>;\n  constructor(apiService, el, toastr, modalService) {\n    this.apiService = apiService;\n    this.el = el;\n    this.toastr = toastr;\n    this.modalService = modalService;\n    this.customerCollection = [];\n    this.SelectionType = SelectionType;\n    this.ColumnMode = ColumnMode;\n    this.dataMessage = \"\";\n    this.loaded = false;\n    this.exportLoading = false;\n    this.allData = [];\n    this.rowHeight = 70;\n    this.headerHeight = 70;\n    this.expanded = {};\n    this.orders = [];\n    this.lastSK = \"\";\n    this.isLoading = false;\n    this.pageLimit = 10;\n    this.customer = \"\";\n    this.customerFiltr = {\n      startDate: '',\n      endDate: ''\n    };\n    this.suggestedCustomers = [];\n    this.printData = {};\n    this.date = new Date();\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.getSuggestions = _.debounce( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (value) {\n        value = value.toLowerCase();\n\n        if (value != '') {\n          const result = yield this.apiService.getData(`contacts/reports/suggestions/${value}`).toPromise();\n          this.suggestedCustomers = result;\n        } else {\n          this.suggestedCustomers = [];\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 500);\n  }\n\n  ngOnInit() {\n    this.fetchCustomerCollection();\n  }\n\n  onScroll(offsetY) {\n    const viewHeight = this.el.nativeElement.getBoundingClientRect().height - this.headerHeight;\n\n    if (!this.isLoading && offsetY + viewHeight + this.customerCollection.length * this.rowHeight) {\n      let limit = this.pageLimit;\n\n      if (this.customerCollection.length === 0) {\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\n        limit = Math.max(pageSize, this.pageLimit);\n      }\n\n      if (this.loaded) {\n        this.fetchCustomerCollection();\n      }\n\n      this.loaded = false;\n    }\n  }\n\n  setCustomer(cName) {\n    if (cName != '') {\n      this.customer = cName;\n      this.suggestedCustomers = [];\n    }\n  }\n\n  fetchCustomerCollection(refresh) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.dataMessage = Constant.FETCHING_DATA;\n      _this.isLoading = true;\n\n      if (refresh === true) {\n        _this.lastSK = \"\";\n        _this.customerCollection = [];\n      }\n\n      if (_this.lastSK != 'end') {\n        const result = yield _this.apiService.getData(`contacts/get/customer/collection?lastKey=${_this.lastSK}&customer=${_this.customer}&start=${_this.customerFiltr.startDate}&end=${_this.customerFiltr.endDate}`).toPromise(); // console.log(result)\n\n        _this.dataMessage = Constant.FETCHING_DATA;\n\n        if (result.Items.length == 0) {\n          _this.dataMessage = Constant.NO_RECORDS_FOUND;\n        }\n\n        if (result.Items.length > 0) {\n          _this.isLoading = false; // console.log(result)\n\n          if (result.LastEvaluatedKey.contactSK !== undefined) {\n            _this.lastSK = encodeURIComponent(result.LastEvaluatedKey.contactSK);\n            _this.loaded = true;\n          } else {\n            _this.lastSK = \"end\";\n          } // console.log(this.lastSK)\n\n\n          _this.customerCollection = _this.customerCollection.concat(result.Items);\n        }\n      }\n    })();\n  }\n\n  onDetailToggle(event) {\n    return _asyncToGenerator(function* () {})();\n  }\n\n  toggleExpandRow(row, expanded) {\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  search() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this2.customer && !_this2.customerFiltr.startDate && !_this2.customerFiltr.endDate) {\n        _this2.toastr.error(\"At least one field required\");\n      } else if (_this2.customerFiltr.startDate && !_this2.customerFiltr.endDate) {\n        _this2.toastr.error(\"End Date is required\");\n      } else if (_this2.customerFiltr.endDate && !_this2.customerFiltr.startDate) {\n        _this2.toastr.error(\"Start Date is required\");\n      } else if (_this2.customerFiltr.startDate > _this2.customerFiltr.endDate) {\n        _this2.toastr.error(\"Start date can not exceeds End Date\");\n      } else {\n        _this2.loaded = false;\n        _this2.customerCollection = [];\n        _this2.lastSK = '';\n\n        _this2.fetchCustomerCollection();\n      }\n    })();\n  }\n\n  reset() {\n    this.lastSK = '';\n    this.customer = '';\n    this.customerFiltr.startDate = '';\n    this.customerFiltr.endDate = '';\n    this.customerCollection = [];\n    this.fetchCustomerCollection();\n  }\n\n  showReport(event, data) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      event.target.disabled = true;\n      _this3.printData = data;\n      const result = yield _this3.apiService.getData(`contacts/get/customer/collection/all?customer=${_this3.printData.cName}&start=${_this3.customerFiltr.startDate}&end=${_this3.customerFiltr.endDate}`).toPromise();\n      _this3.printData.orders = result.Items[0].orders;\n      let ngbModalOptions = {\n        keyboard: true,\n        windowClass: \"preview--report\"\n      };\n      _this3.previewRef = _this3.modalService.open(_this3.previewReportModal, ngbModalOptions);\n      event.target.disabled = false;\n    })();\n  }\n\n  allCustomerPDF() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.exportLoading = true;\n      const result = yield _this4.apiService.getData(`contacts/get/customer/collection/all?customer=${_this4.customer}&start=${_this4.customerFiltr.startDate}&end=${_this4.customerFiltr.endDate}`).toPromise();\n      _this4.allData = result.Items;\n      let ngbModalOptions = {\n        keyboard: true,\n        windowClass: \"preview\"\n      };\n      _this4.preview = _this4.modalService.open(_this4.previewAllModal, ngbModalOptions);\n      let data = document.getElementById(\"print_all_wrap\");\n      html2pdf(data, {\n        margin: 0,\n        pagebreak: {\n          mode: \"avoid-all\"\n        },\n        filename: \"allCustomerReport.pdf\",\n        image: {\n          type: \"jpeg\",\n          quality: 0.98\n        },\n        html2Canvas: {\n          dpi: 300,\n          letterRendering: true\n        },\n        jsPDF: {\n          unit: \"in\",\n          format: \"a4\",\n          orientation: \"landscape\"\n        }\n      });\n      _this4.exportLoading = false;\n    })();\n  }\n\n  generatePDF() {\n    return _asyncToGenerator(function* () {\n      let data = document.getElementById(\"print_wrap\");\n      html2pdf(data, {\n        margin: 0,\n        //pagebreak: { mode: \"avoid-all\" },\n        filename: \"customerReport.pdf\",\n        image: {\n          type: \"jpeg\",\n          quality: 0.98\n        },\n        html2Canvas: {\n          dpi: 200,\n          letterRendering: true\n        },\n        jsPDF: {\n          unit: \"in\",\n          format: \"a4\",\n          orientation: \"landscape\"\n        }\n      });\n      $(\"#previewReportModal\").modal(\"hide\");\n    })();\n  }\n\n  generateCSV() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.exportLoading = true;\n      let dataObject = [];\n      let ordersData = [];\n      let csvArray = [];\n      const result = yield _this5.apiService.getData(`contacts/get/customer/collection/all?customer=${_this5.customer}&start=${_this5.customerFiltr.startDate}&end=${_this5.customerFiltr.endDate}`).toPromise(); //console.log(result)\n\n      for (const element of result.Items) {\n        let obj = {};\n        obj[\"Customer\"] = element.cName;\n        obj[\"Email\"] = element.workEmail;\n        obj[\"Phone\"] = element.workPhone;\n        obj[\"Total Orders\"] = element.totalOrders;\n        obj[\"Delivered Orders\"] = element.deliveredOrders;\n        obj[\"Invoice Generated\"] = element.invoiceGenerated;\n        obj[\"Total Amount CAD\"] = `CAD ${element.totalAmount.cad}`;\n        obj[\"Total Amount USD\"] = `USD${element.totalAmount.usd}`;\n        obj[\"Amount Received CAD\"] = `CAD ${element.amountReceived.cad}`;\n        obj[\"Amount Received USD\"] = `USD${element.amountReceived.usd}`;\n        obj[\"Balance CAD\"] = `CAD ${element.balance.cad}`;\n        obj[\"Balance USD\"] = `USD${element.balance.usd}`;\n        obj[\"30-45 CAD\"] = `CAD ${element.balanceAge30.cad}`;\n        obj[\"30-45 USD\"] = `USD${element.balanceAge30.usd}`;\n        obj[\"45-60 CAD\"] = `CAD ${element.balanceAge45.cad}`;\n        obj[\"45-60 USD\"] = `USD${element.balanceAge45.usd}`;\n        obj[\"60-90 CAD\"] = `CAD ${element.balanceAge60.cad}`;\n        obj[\"60-90 USD\"] = `USD${element.balanceAge60.usd}`;\n        dataObject.push(obj);\n        obj[\"orders\"] = element.orders;\n        ordersData.push(obj);\n      }\n\n      let headers = Object.keys(dataObject[0]).join(',');\n      headers += '\\n';\n      csvArray.push(headers);\n\n      for (const element of ordersData) {\n        let orders = element.orders;\n        let orderHeaders = '';\n        let oArray = [];\n\n        if (orders.length > 0) {\n          delete orders[0].orderSK;\n          delete orders[0].isDeleted;\n          orderHeaders = \",\" + Object.keys(orders[0]).join(',');\n          orderHeaders += '\\n';\n\n          for (const i of orders) {\n            i.milesInfo = i.milesInfo.totalMiles;\n            i.charges = i.charges.freightFee.currency;\n            delete i.orderSK;\n            delete i.isDeleted;\n            let o = \",\" + Object.values(i).join(',');\n            o += '\\n';\n            oArray.push(o);\n          }\n        } else {\n          oArray = [''];\n        }\n\n        delete element.orders;\n        let obj = Object.values(element).join(',');\n        obj += '\\n';\n        obj += orderHeaders;\n        obj += oArray.join('');\n        csvArray.push(obj);\n      }\n\n      const blob = new Blob(csvArray, {\n        type: 'text/csv;charset=utf-8'\n      });\n      const link = document.createElement('a');\n\n      if (link.download !== undefined) {\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', `${moment().format(\"YYYY-MM-DD:HH:m\")}Collection-Report.csv`);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        _this5.exportLoading = false;\n      }\n    })();\n  }\n\n};\n\nCustomerCollectionComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ElementRef\n}, {\n  type: ToastrService\n}, {\n  type: NgbModal\n}];\n\nCustomerCollectionComponent.propDecorators = {\n  table: [{\n    type: ViewChild,\n    args: ['myTable']\n  }],\n  previewAllModal: [{\n    type: ViewChild,\n    args: [\"previewAllModal\", {\n      static: true\n    }]\n  }],\n  previewReportModal: [{\n    type: ViewChild,\n    args: [\"previewReportModal\", {\n      static: true\n    }]\n  }]\n};\nCustomerCollectionComponent = __decorate([Component({\n  selector: 'app-customer-collection',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], CustomerCollectionComponent);\nexport { CustomerCollectionComponent };","map":null,"metadata":{},"sourceType":"module"}