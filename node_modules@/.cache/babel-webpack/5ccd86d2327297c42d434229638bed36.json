{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./header.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./header.component.css\";\nimport { Component, EventEmitter, Output } from \"@angular/core\";\nimport { SharedServiceService } from \"../../services/shared-service.service\";\nimport { Auth } from \"aws-amplify\";\nimport { Router } from \"@angular/router\";\nimport { ApiService, ListService } from \"src/app/services\";\nimport { InvokeHeaderFnService } from \"src/app/services/invoke-header-fn.service\";\nimport { environment } from \"../../../environments/environment\";\nimport { DashboardUtilityService } from \"src/app/services/dashboard-utility.service\";\nlet HeaderComponent = class HeaderComponent {\n  constructor(sharedService, apiService, listService, router, headerFnService, dashboardService) {\n    var _this = this;\n\n    this.sharedService = sharedService;\n    this.apiService = apiService;\n    this.listService = listService;\n    this.router = router;\n    this.headerFnService = headerFnService;\n    this.dashboardService = dashboardService;\n    this.environment = environment.isFeatureEnabled;\n    this.showNotificationDetail = false;\n    this.isFleetEnabled = environment.isFleetEnabled;\n    this.isDispatchEnabled = environment.isDispatchEnabled;\n    this.isComplianceEnabled = environment.isComplianceEnabled;\n    this.isManageEnabled = environment.isManageEnabled;\n    this.isSafetyEnabled = environment.isSafetyEnabled;\n    this.isAccountsEnabled = environment.isAccountsEnabled;\n    this.isReportsEnabled = environment.isReportsEnabled;\n    this.isAddressBook = environment.isAddressBook;\n    this.Asseturl = this.apiService.AssetUrl;\n    this.navClicked = new EventEmitter();\n    this.navSelected = \"\";\n    this.currentUser = \"\";\n    this.currentCarrierID = \"\";\n    this.userRole = \"\";\n    this.carriers = [];\n    this.currentUserName = \"\";\n    this.disabled = false;\n    this.nickName = \"\";\n    this.logoSrc = \"assets/img/logo.png\";\n    this.unitData = {\n      cName: \"\",\n      dba: \"\",\n      workPhone: \"\",\n      workEmail: \"\",\n      eTypes: [],\n      adrs: [{\n        aType: null,\n        cName: \"\",\n        sName: \"\",\n        ctyName: null,\n        zip: \"\",\n        add1: \"\",\n        add2: \"\",\n        geoCords: {\n          lat: \"\",\n          lng: \"\"\n        },\n        userLoc: \"\",\n        manual: false,\n        cCode: null,\n        sCode: null,\n        houseNo: \"\",\n        street: \"\",\n        states: [],\n        cities: []\n      }],\n      addlCnt: [{\n        flName: \"\",\n        fName: \"\",\n        lName: \"\",\n        phone: \"\",\n        des: \"\",\n        email: \"\",\n        fax: \"\"\n      }],\n      data: []\n    };\n    this.updateButton = false;\n    this.showSwitch = false;\n    this.showNotifications = false;\n    this.notifications = [];\n    this.announcements = [];\n    this.unReadCounter = 0;\n    this.getCurrentuser = /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.currentUser = (yield Auth.currentSession()).getIdToken().payload;\n      const selectedCarrier = localStorage.getItem('xfhCarrierId');\n\n      if (selectedCarrier && _this.currentUser.userRoles === \"orgAdmin\") {\n        const res = yield _this.apiService.getData(`carriers/get/detail/${selectedCarrier}`).toPromise();\n        _this.userRole = 'Super Admin';\n        _this.currentUser = `${res.Items[0].firstName} ${res.Items[0].lastName}`;\n      } else {\n        _this.currentUser = (yield Auth.currentSession()).getIdToken().payload;\n        _this.userRole = _this.currentUser.userType;\n        _this.currentUser = `${_this.currentUser.firstName} ${_this.currentUser.lastName}`;\n      }\n\n      const outputName = _this.currentUser.match(/\\b(\\w)/g);\n\n      _this.smallName = outputName.join(\"\");\n      localStorage.setItem(\"currentUserName\", _this.currentUser);\n      localStorage.setItem(\"nickName\", _this.smallName);\n      _this.currentUserName = localStorage.getItem(\"currentUserName\");\n      _this.nickName = localStorage.getItem(\"nickName\");\n    });\n    this.sharedService.activeParentNav.subscribe(val => {\n      let activeTab = localStorage.getItem(\"active-header\");\n\n      if (activeTab != undefined && activeTab != \"\") {\n        val = activeTab;\n      }\n\n      this.navSelected = val;\n    });\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.init();\n\n      _this2.getCurrentuser();\n\n      _this2.showSwitch = localStorage.getItem(\"subCompany\") == 'yes' ? true : false;\n\n      _this2.fetchCarrier();\n\n      if (_this2.headerFnService.subsVar === undefined) {\n        _this2.headerFnService.subsVar = _this2.headerFnService.invokeHeaderComponentFunction.subscribe(name => {\n          _this2.upateCurrentUser();\n        });\n      }\n\n      yield _this2.getAllNotificationAnnouncement();\n      setInterval( /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this2.getAllNotificationAnnouncement();\n      }), 1000 * 60 * 5);\n    })();\n  }\n\n  init() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.apiService.checkAccess();\n      _this3.isFleetEnabled = environment.isFleetEnabled;\n      _this3.isDispatchEnabled = localStorage.getItem(\"isDispatchEnabled\") ? JSON.parse(localStorage.getItem(\"isDispatchEnabled\")) : environment.isDispatchEnabled;\n      _this3.isComplianceEnabled = localStorage.getItem(\"isComplianceEnabled\") ? JSON.parse(localStorage.getItem(\"isComplianceEnabled\")) : environment.isComplianceEnabled;\n      _this3.isManageEnabled = localStorage.getItem(\"isManageEnabled\") ? JSON.parse(localStorage.getItem(\"isManageEnabled\")) : environment.isManageEnabled;\n      _this3.isSafetyEnabled = localStorage.getItem(\"isSafetyEnabled\") ? JSON.parse(localStorage.getItem(\"isSafetyEnabled\")) : environment.isSafetyEnabled;\n      _this3.isAccountsEnabled = localStorage.getItem(\"isAccountsEnabled\") ? JSON.parse(localStorage.getItem(\"isAccountsEnabled\")) : environment.isAccountsEnabled;\n      environment.isAccountsEnabled;\n      _this3.isAddressBook = localStorage.getItem(\"isAddressBook\") ? JSON.parse(localStorage.getItem(\"isAddressBook\")) : environment.isAddressBook;\n      _this3.isReportsEnabled = environment.isReportsEnabled;\n    })();\n  }\n\n  onNavSelected(nav) {\n    localStorage.setItem(\"active-header\", nav);\n    const rootHtml = document.getElementsByTagName(\"html\")[0];\n    rootHtml.classList.add(\"fixed\");\n    rootHtml.classList.add(\"sidebar-light\");\n    rootHtml.classList.add(\"sidebar-left-collapsed\");\n    this.navClicked.emit(nav);\n    this.sharedService.activeParentNav.next(nav);\n  }\n\n  fetchCarrier() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this4.dashboardService.getCarriers();\n\n      if (result.Items.length > 0) {\n        _this4.carriers = result.Items[0]; // this.currentCarrierID = this.carriers.carrierID;\n\n        _this4.currentCarrierID = localStorage.getItem('xfhCarrierId');\n        _this4.logoSrc = \"assets/img/logo.png\"; // if (this.carriers.uploadedLogo !== '') {\n        //   this.logoSrc = `${this.Asseturl}/${this.carriers.carrierID}/${this.carriers.uploadedLogo}`;\n        // } else {\n        //   this.logoSrc = 'assets/img/logo.png';\n        // }\n      }\n    })();\n  }\n\n  Logout() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        yield Auth.signOut();\n\n        _this5.listService.triggerModal(\"\");\n\n        _this5.listService.openDocTypeMOdal(\"\");\n\n        localStorage.removeItem(\"LoggedIn\");\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"active-header\");\n        localStorage.removeItem(\"carrierID\");\n        localStorage.removeItem(\"loggin-carrier\");\n        localStorage.removeItem(\"issueVehicleID\");\n        localStorage.removeItem(\"carrierID\");\n        localStorage.removeItem(\"active-header\");\n        localStorage.removeItem(\"currentUserName\");\n        localStorage.removeItem(\"nickName\");\n        localStorage.removeItem(\"isDispatchEnabled\");\n        localStorage.removeItem(\"isComplianceEnabled\");\n        localStorage.removeItem(\"isSafetyEnabled\");\n        localStorage.removeItem(\"isAccountsEnabled\");\n        localStorage.removeItem(\"isManageEnabled\");\n        localStorage.setItem(\"signOut\", \"true\"); //trigger flag\n\n        localStorage.removeItem(\"accessToken\"); //Remove token from local\n\n        localStorage.removeItem('xfhCarrierId');\n        localStorage.removeItem('currentUserName');\n        localStorage.removeItem('subCompany'); // localStorage.removeItem('jwt');\n\n        _this5.router.navigate([\"/Login\"]);\n      } catch (error) {\n        console.log(\"error signing out: \", error);\n      }\n    })();\n  }\n\n  upateCurrentUser() {\n    this.currentUserName = localStorage.getItem(\"currentUserName\");\n    this.nickName = localStorage.getItem(\"nickName\");\n  }\n\n  openModal(unit) {\n    this.listService.triggerModal(unit);\n    this.updateButton = false;\n    this.unitData = {\n      cName: \"\",\n      dba: \"\",\n      workPhone: \"\",\n      workEmail: \"\",\n      eTypes: [],\n      adrs: [{\n        aType: null,\n        cName: \"\",\n        sName: \"\",\n        ctyName: null,\n        zip: \"\",\n        add1: \"\",\n        add2: \"\",\n        geoCords: {\n          lat: \"\",\n          lng: \"\"\n        },\n        userLoc: \"\",\n        manual: false,\n        cCode: null,\n        sCode: null,\n        houseNo: \"\",\n        street: \"\",\n        states: [],\n        cities: []\n      }],\n      addlCnt: [{\n        flName: \"\",\n        fName: \"\",\n        lName: \"\",\n        phone: \"\",\n        des: \"\",\n        email: \"\",\n        fax: \"\"\n      }],\n      data: []\n    };\n  }\n\n  showDetail(notification, isNotification = true) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      _this6.showNotifications = false;\n      _this6.detailMessage = notification.message;\n      _this6.showNotificationDetail = true;\n\n      if (isNotification && notification.read === 0) {\n        yield _this6.apiService.putData(`notification/read/${notification.id}`, {}).toPromise();\n      }\n    })();\n  }\n\n  getAllNotificationAnnouncement() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.unReadCounter = 0;\n      const result = yield _this7.apiService.getData('notification/getAll', true).toPromise();\n\n      if (result.notifications) {\n        _this7.notifications = result.notifications;\n\n        _this7.notifications.forEach(element => {\n          if (element.read === 0) {\n            _this7.unReadCounter += 1;\n          }\n\n          const length = 50;\n          element['shortMessage'] = element.message.length > length ? element.message.substring(0, length - 3) + \"...\" : element.message;\n        });\n      }\n\n      if (result.announcements) {\n        _this7.announcements = result.announcements;\n\n        _this7.announcements.forEach(element => {\n          const length = 50;\n          element['shortMessage'] = element.message.length > length ? element.message.substring(0, length - 3) + \"...\" : element.message;\n        });\n      }\n    })();\n  }\n\n};\n\nHeaderComponent.ctorParameters = () => [{\n  type: SharedServiceService\n}, {\n  type: ApiService\n}, {\n  type: ListService\n}, {\n  type: Router\n}, {\n  type: InvokeHeaderFnService\n}, {\n  type: DashboardUtilityService\n}];\n\nHeaderComponent.propDecorators = {\n  navClicked: [{\n    type: Output\n  }]\n};\nHeaderComponent = __decorate([Component({\n  selector: \"app-header\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HeaderComponent);\nexport { HeaderComponent };","map":null,"metadata":{},"sourceType":"module"}