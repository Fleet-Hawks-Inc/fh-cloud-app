{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./deleted-assets.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./deleted-assets.component.css\";\nimport { Component } from '@angular/core';\nimport { environment } from '../../../../../../environments/environment';\nimport Constants from '../../../constants';\nimport { ApiService } from '../../../../../services';\nimport * as _ from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nlet DeletedAssetsComponent = class DeletedAssetsComponent {\n  constructor(apiService, toastr) {\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.suggestedAssets = [];\n    this.assetID = '';\n    this.assetType = null;\n    this.assetIdentification = '';\n    this.lastEvaluatedKey = '';\n    this.loaded = false;\n    this.allData = [];\n    this.contactsObjects = [];\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value !== '') {\n        this.apiService.getData(`assets/deleted/suggestion/${value}`).subscribe(result => {\n          this.suggestedAssets = result;\n        });\n      } else {\n        this.suggestedAssets = [];\n      }\n    }, 800);\n  }\n\n  ngOnInit() {\n    this.initDataTable();\n    this.fetchContacts();\n  }\n\n  fetchContacts() {\n    this.apiService.getData('contacts/get/list/ownerOperator').subscribe(result => {\n      this.contactsObjects = result;\n    });\n  }\n\n  initDataTable() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.lastEvaluatedKey !== 'end') {\n        const result = yield _this.apiService.getData('assets/fetch/deleted/records?asset=' + _this.assetIdentification + '&assetType=' + _this.assetType + '&lastKey=' + _this.lastEvaluatedKey).toPromise();\n\n        if (result.Items.length === 0) {\n          _this.dataMessage = Constants.NO_RECORDS_FOUND;\n        }\n\n        _this.suggestedAssets = [];\n\n        if (result.Items.length > 0) {\n          if (result.LastEvaluatedKey !== undefined) {\n            _this.lastEvaluatedKey = encodeURIComponent(result.Items[result.Items.length - 1].assetSK);\n          } else {\n            _this.lastEvaluatedKey = 'end';\n          }\n\n          _this.allData = _this.allData.concat(result.Items);\n          _this.loaded = true;\n        }\n      }\n    })();\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.initDataTable();\n    }\n\n    this.loaded = false;\n  }\n\n  setAsset(assetID, assetIdentification) {\n    this.assetIdentification = assetIdentification;\n    this.assetID = assetIdentification;\n    this.suggestedAssets = [];\n  }\n\n  restoreAsset(eventData) {\n    if (confirm('Are you sure you want to restore?') === true) {\n      this.apiService.deleteData(`assets/restore/${eventData.assetID}/${eventData.assetIdentification}`).subscribe(result => {\n        this.allData = [];\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.lastEvaluatedKey = '';\n        this.initDataTable();\n        this.toastr.success('Asset Restored Successfully!');\n      });\n    }\n  }\n\n  searchFilter() {\n    if (this.assetIdentification !== '' || this.assetType !== null) {\n      this.assetIdentification = this.assetIdentification.toLowerCase();\n\n      if (this.assetID === '') {\n        this.assetID = this.assetIdentification;\n      }\n\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.allData = [];\n      this.lastEvaluatedKey = '';\n      this.suggestedAssets = [];\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  resetFilter() {\n    if (this.assetIdentification !== '' || this.assetType !== null) {\n      this.assetID = '';\n      this.assetIdentification = '';\n      this.assetType = null;\n      this.suggestedAssets = [];\n      this.allData = [];\n      this.lastEvaluatedKey = '';\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n};\n\nDeletedAssetsComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ToastrService\n}];\n\nDeletedAssetsComponent = __decorate([Component({\n  selector: 'app-deleted-assets',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], DeletedAssetsComponent);\nexport { DeletedAssetsComponent };","map":null,"metadata":{},"sourceType":"module"}