{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./detailreport.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./detailreport.component.css\";\nimport { Component } from '@angular/core';\nimport { ApiService } from 'src/app/services';\nimport Constant from 'src/app/pages/fleet/constants';\nimport { CurrencyPipe } from '@angular/common';\nimport * as moment from 'moment';\nimport { ToastrService } from \"ngx-toastr\";\nlet DetailreportComponent = class DetailreportComponent {\n  constructor(apiService, currencyPipe, toastr) {\n    this.apiService = apiService;\n    this.currencyPipe = currencyPipe;\n    this.toastr = toastr;\n    this.totalOrdersCount = 0;\n    this.dispatchedCount = 0;\n    this.delieverdCount = 0;\n    this.deletedCount = 0;\n    this.canceledCount = 0;\n    this.tonuCount = 0;\n    this.records = [];\n    this.dataMessage = '';\n    this.customers = {};\n    this.lastItemSK = '';\n    this.loaded = false;\n    this.months = [];\n    this.years = [];\n    this.selectedMonth = '';\n    this.selectedYear = '';\n    this.vehicles = {};\n    this.assets = {};\n    this.drivers = {};\n  }\n\n  ngOnInit() {\n    this.months = moment.months();\n    this.years.push(moment().year());\n    this.years.push(moment().subtract(1, 'year').year());\n    this.fetchCustomers();\n    this.fetchVehicles();\n    this.fetchAssets();\n    this.fetchDrivers();\n    this.fetchDetailReport();\n    this.fetchOrderReport();\n  }\n\n  fetchVehicles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this.apiService.getData('vehicles/get/list').toPromise();\n      _this.vehicles = result;\n    })();\n  }\n\n  fetchAssets() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this2.apiService.getData('assets/get/list').toPromise();\n      _this2.assets = result;\n    })();\n  }\n\n  fetchDrivers() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this3.apiService.getData('drivers/get/list').toPromise();\n      _this3.drivers = result;\n    })();\n  }\n\n  search() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.totalOrdersCount = 0;\n      _this4.deletedCount = 0;\n      _this4.delieverdCount = 0;\n      _this4.dispatchedCount = 0;\n      _this4.canceledCount = 0;\n      _this4.tonuCount = 0;\n\n      if (_this4.selectedYear && _this4.selectedMonth) {\n        _this4.lastItemSK = 'end';\n        _this4.records = [];\n        _this4.dataMessage = Constant.FETCHING_DATA;\n        const result = yield _this4.apiService.getData(`orders/report/search?month=${_this4.selectedMonth}&year=${_this4.selectedYear}`).toPromise();\n\n        if (result.Items.length > 0) {\n          _this4.totalOrdersCount = result.Count;\n          result.Items.forEach(element => {\n            if (element.isDeleted == 1) _this4.deletedCount++;\n            if (element.orderStatus == \"delivered\") _this4.delieverdCount++;\n            if (element.orderStatus == \"dispatched\") _this4.dispatchedCount++;\n            if (element.orderStatus == \"canceled\") _this4.canceledCount++;\n            if (element.orderStatus == \"tonu\") _this4.tonuCount++;\n          });\n          _this4.records = result.Items;\n        } else {\n          _this4.dataMessage = Constant.NO_RECORDS_FOUND;\n        }\n      } else {\n        _this4.toastr.error(\"Year and Month required\");\n      }\n    })();\n  }\n\n  reset() {\n    this.selectedMonth = '';\n    this.selectedYear = '';\n    this.lastItemSK = '';\n    this.records = [];\n    this.fetchDetailReport();\n    this.fetchOrderReport();\n  }\n\n  fetchOrderReport(refresh) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      if (refresh === true) {\n        _this5.lastItemSK = '', _this5.records = [];\n      }\n\n      if (_this5.lastItemSK !== 'end') {\n        const result = yield _this5.apiService.getData(`orders/report/paging?lastKey=${_this5.lastItemSK}`).toPromise();\n        _this5.dataMessage = Constant.FETCHING_DATA;\n\n        if (result.Items.length === 0) {\n          _this5.dataMessage = Constant.NO_RECORDS_FOUND;\n        }\n\n        if (result.Items.length > 0) {\n          if (result.LastEvaluatedKey !== undefined) {\n            _this5.lastItemSK = encodeURIComponent(result.Items[result.Items.length - 1].orderSK);\n          } else {\n            _this5.lastItemSK = 'end';\n          }\n\n          _this5.records = _this5.records.concat(result.Items);\n          _this5.loaded = true;\n        }\n      }\n    })();\n  }\n\n  fetchCustomers() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const customers = yield _this6.apiService.getData(`contacts/fetch/order/customers`).toPromise();\n      customers.forEach(element => {\n        _this6.customers[element.contactID] = element.companyName;\n      });\n    })();\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.fetchOrderReport();\n    }\n\n    this.loaded = false;\n  }\n\n  fetchDetailReport() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.totalOrdersCount = 0;\n      _this7.delieverdCount = 0;\n      _this7.dispatchedCount = 0;\n      _this7.canceledCount = 0;\n      _this7.tonuCount = 0;\n      const result = yield _this7.apiService.getData('orders/report/detail').toPromise();\n      _this7.totalOrdersCount = result.Count;\n      if (_this7.totalOrdersCount == 0) _this7.dataMessage = Constant.NO_RECORDS_FOUND;\n      result.Items.forEach(element => {\n        if (element.isDeleted == 1) _this7.deletedCount++;\n        if (element.orderStatus == \"delivered\") _this7.delieverdCount++;\n        if (element.orderStatus == \"dispatched\") _this7.dispatchedCount++;\n        if (element.orderStatus == \"canceled\") _this7.canceledCount++;\n        if (element.orderStatus == \"tonu\") _this7.tonuCount++;\n      }); // this.records = result.Items\n      // console.log(this.records)\n    })();\n  }\n\n  generateCSV() {\n    if (this.records.length > 0) {\n      let dataObject = [];\n      let csvArray = [];\n      this.records.forEach(element => {\n        let obj = {};\n        obj[\"Order#\"] = element.orderNumber;\n        obj[\"Trip#\"] = element.tripData && element.tripData.tripNo ? element.tripData.tripNo : '';\n        obj[\"Type\"] = element.orderMode;\n        obj[\"DateTime\"] = element.createdDate + \" \" + element.createdTime;\n        obj[\"Cutomer\"] = this.customers[element.customerID];\n        obj[\"Confirmation#\"] = element.cusConfirmation.split(',').join('/');\n        obj[\"Customer PO#\"] = element.cusPOs && element.cusPOs.length > 0 ? element.cusPOs.join('/') : ' ';\n        obj[\"Drivers\"] = '';\n        obj[\"Vehicles\"] = '';\n        obj[\"Assets\"] = '';\n\n        if (element.tripData && element.tripData.driverIDs && element.tripData.driverIDs.length > 0) {\n          element.tripData.driverIDs.forEach(element => {\n            obj[\"Drivers\"] += this.drivers[element] + \";\";\n          });\n        }\n\n        if (element.tripData && element.tripData.vehicleIDs && element.tripData.vehicleIDs.length > 0) {\n          element.tripData.vehicleIDs.forEach(element => {\n            obj[\"Vehicles\"] += this.vehicles[element] + \";\";\n          });\n        }\n\n        if (element.tripData && element.tripData.assetIDs && element.tripData.assetIDs.length > 0) {\n          element.tripData.assetIDs.forEach(element => {\n            obj[\"Assets\"] += this.assets[element] + \";\";\n          });\n        }\n\n        element.shippersReceiversInfo.forEach(item => {\n          item.shippers.forEach(shipper => {\n            obj[\"Pickup\"] = this.customers[shipper.shipperID];\n\n            if (shipper.pickupPoint.length > 0) {\n              shipper.pickupPoint.forEach(pickup => {\n                pickup.address.address = pickup.address.address.split(',').join(' ');\n                obj[\"Pickup\"] += \" \" + pickup.address.address + \" \" + pickup.address.cityName + \" \" + pickup.address.stateName + \" \" + pickup.address.countryCode + \" \" + pickup.address.zipCode + \" \";\n\n                if (pickup.commodity.length > 0) {\n                  pickup.commodity.forEach(element => {\n                    obj[\"Pickup\"] += \"PU# \" + element.pu;\n                  });\n                }\n              });\n            }\n          });\n          item.receivers.forEach(receiver => {\n            obj[\"DropOff\"] = this.customers[receiver.receiverID];\n\n            if (receiver.dropPoint.length > 0) {\n              receiver.dropPoint.forEach(drop => {\n                drop.address.address = drop.address.address.split(',').join(' ');\n                obj[\"DropOff\"] += \" \" + drop.address.address + \" \" + drop.address.cityName + \" \" + drop.address.stateName + \" \" + drop.address.countryCode + \" \" + drop.address.zipCode + \" \";\n\n                if (drop.commodity.length > 0) {\n                  drop.commodity.forEach(element => {\n                    obj[\"DropOff\"] += \"DEL# \" + element.del;\n                  });\n                }\n              });\n            }\n          });\n        });\n        obj[\"Miles\"] = element.milesInfo.totalMiles;\n        obj[\"Amount\"] = element.charges.freightFee.currency + ' ' + element.totalAmount;\n        obj[\"Status\"] = element.orderStatus;\n        dataObject.push(obj);\n      });\n      let headers = Object.keys(dataObject[0]).join(',');\n      headers += ' \\n';\n      csvArray.push(headers);\n      dataObject.forEach(element => {\n        let obj = Object.values(element).join(',');\n        obj += ' \\n';\n        csvArray.push(obj);\n      });\n      const blob = new Blob(csvArray, {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const link = document.createElement('a');\n\n      if (link.download !== undefined) {\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', `${moment().format(\"YYYY-MM-DD:HH:m\")}Order-Report.csv`);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    } else {\n      this.toastr.error(\"No Records found\");\n    }\n  }\n\n};\n\nDetailreportComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: CurrencyPipe\n}, {\n  type: ToastrService\n}];\n\nDetailreportComponent = __decorate([Component({\n  selector: 'app-detailreport',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], DetailreportComponent);\nexport { DetailreportComponent };","map":null,"metadata":{},"sourceType":"module"}