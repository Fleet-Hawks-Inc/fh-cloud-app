{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./balance-sheet.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./balance-sheet.component.css\";\nimport { Component } from '@angular/core';\nimport Constants from 'src/app/pages/fleet/constants';\nimport { AccountService } from 'src/app/services/account.service';\nimport * as _ from 'lodash';\nimport { ToastrService } from \"ngx-toastr\";\nimport * as moment from 'moment';\nlet BalanceSheetComponent = class BalanceSheetComponent {\n  constructor(accountService, toaster) {\n    this.accountService = accountService;\n    this.toaster = toaster;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.mainArray = [];\n    this.allTotal = [];\n    this.assetArr = [];\n    this.liabilityArr = [];\n    this.equityArr = [];\n    this.revenueArr = [];\n    this.accArray = [];\n    this.expenseArr = [];\n    this.lastItemSK = \"\";\n    this.actName = null;\n    this.actType = null;\n    this.accounts = [];\n    this.exportData = [];\n    this.filter = {\n      actType: null,\n      actName: null,\n      startDate: null,\n      endDate: null\n    };\n    this.datee = '';\n    this.disableSearch = false;\n    this.exportLoading = false;\n    this.loaded = false;\n    this.start = null;\n    this.end = null;\n    this.currTab = \"CAD\";\n    this.isLoadText = \"Load More...\";\n    this.isLoad = false;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    }; //deactivatePredefined = true;\n\n    this.CAD = [];\n    this.USD = [];\n    this.actID = \"\";\n    this.acClasses = [];\n    this.totalUSD = 0;\n    this.totalCUSD = 0;\n    this.totalDCAD = 0;\n    this.totalCCAD = 0;\n    this.allExportData = [];\n    this.lastExportSk = \"\";\n    this.data1 = [];\n    this.cadDebitTotal = 0;\n    this.cadCreditTotal = 0;\n    this.usdDebitTotal = 0;\n    this.usdCreditTotal = 0;\n    this.accountsClassObjects = {};\n    this.coaData = {};\n    this.tempResults = [];\n    this.currency = 'CAD';\n    this.transactionLogCAD = [];\n    this.creditTotal = 0;\n    this.sortInventoryAssets = [];\n    this.sortOtherCurrentAssets = [];\n    this.sortCapitalAsset = [];\n    this.sortONCAsset = [];\n    this.currLiability = [];\n    this.scEquity = [];\n    this.retainedEarnings = [];\n    this.ltLiability = []; //Current Assets Total CAD USD\n\n    this.currentAssetTotalCAD = 0;\n    this.currentAssetCreditTotalCAD = 0;\n    this.currentAssetTotalUSD = 0;\n    this.currentAssetCreditTotalUSD = 0; //Inventory Assets Total CAD USD\n\n    this.inventoryAssetTotalCAD = 0;\n    this.inventoryAssetTotalUSD = 0; //Capital Assets Total CAD USD\n\n    this.capitalAssetTotalCAD = 0;\n    this.capitalAssetTotalUSD = 0; //Other Non Current Assets Total CAD USD\n\n    this.ONCAssetTotalCAD = 0;\n    this.ONCAssetTotalUSD = 0; //Total of All Assets CAD USD\n\n    this.totalAssetsCAD = 0;\n    this.totalAssetsUSD = 0; //Current Liability Total CAD USD\n\n    this.totalCurrentLiabilityCAD = 0;\n    this.totalCurrentLiabilityUSD = 0; //Long Term Liabilities Total CAD USD\n\n    this.totalLongTermLiabilityCAD = 0;\n    this.totalLongTermLiabilityUSD = 0; //Total of all liability\n\n    this.totalLiabilityCAD = 0;\n    this.totalLiabilityUSD = 0; //Share Capital Total CAD USD\n\n    this.totalShareCapitalCAD = 0;\n    this.totalShareCapitalUSD = 0; //Retained Earnings Total CAD USD\n\n    this.totalRetainedEarningsCAD = 0;\n    this.totalRetainedEarningsUSD = 0; //Total of All Equities\n\n    this.totalEquityCAD = 0;\n    this.totalEquityUSD = 0; //Total of All Equities and Liabilities\n\n    this.totalLiabilityEquityCAD = 0;\n    this.totalLiabilityEquityUSD = 0;\n  }\n\n  ngOnInit() {\n    this.filter.endDate = moment().format(\"YYYY-MM-DD\");\n    this.filter.startDate = moment().subtract(15, 'day').format('YYYY-MM-DD');\n    this.fetchBalance();\n  }\n\n  fetchBalance(refresh) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.accountService.getData(`chartAc/get/balance/report/${_this.currency}/?start=${_this.filter.startDate}&end=${_this.filter.endDate}&date=${_this.datee}`).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (result) {\n          if (result.data.length > 0) {\n            result.data.map(v => {\n              _this.accounts.push(v);\n\n              _this.accounts = _.sortBy(_this.accounts, ['accountNo']);\n            }); //Sorting other Assets,Liabilities and Equities.\n\n            var sortClass = _.chain(_this.accounts).groupBy('subAcClass').map((value, key) => ({\n              subAcClass: key,\n              account: value\n            })).value();\n\n            for (let i = 0; i < sortClass.length; i++) {\n              if (sortClass[i].subAcClass == 'inventory') {\n                _this.sortInventoryAssets = sortClass[i].account;\n              }\n\n              if (sortClass[i].subAcClass == 'capital asset') {\n                _this.sortCapitalAsset = sortClass[i].account;\n              }\n\n              if (sortClass[i].subAcClass == 'other non-current asset') {\n                _this.sortONCAsset = sortClass[i].account;\n              }\n\n              if (sortClass[i].subAcClass == 'share capital') {\n                _this.scEquity = sortClass[i].account;\n              }\n\n              if (sortClass[i].subAcClass == 'retained earnings') {\n                _this.retainedEarnings = sortClass[i].account;\n              }\n\n              if (sortClass[i].subAcClass == 'long term debt') {\n                _this.ltLiability = sortClass[i].account;\n              }\n            }\n\n            if (_this.scEquity.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            if (_this.sortInventoryAssets.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            if (_this.sortCapitalAsset.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            if (_this.retainedEarnings.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            if (_this.ltLiability.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            } //Sorting Current Assets\n\n\n            var sortAssets = _.chain(_this.accounts).groupBy('accountClass').map((value, key) => ({\n              accountClass: key,\n              account: value\n            })).value();\n\n            for (let i = 0; i < sortAssets.length; i++) {\n              if (sortAssets[i].accountClass == 'ASSET') {\n                _this.sortOtherCurrentAssets = sortAssets[i].account;\n                _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                  return o.subAcClass != 'inventory';\n                });\n                _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                  return o.subAcClass != 'capital asset';\n                });\n                _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                  return o.subAcClass != 'other non-current asset';\n                });\n                _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                  return o.subAcClass != 'other current asset';\n                });\n              }\n            }\n\n            if (_this.sortOtherCurrentAssets.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            } //Sorting Current Liabilities.\n\n\n            var sortLiability = _.chain(_this.accounts).groupBy('accountClass').map((value, key) => ({\n              accountClass: key,\n              account: value\n            })).value();\n\n            for (let i = 0; i < sortAssets.length; i++) {\n              if (sortAssets[i].accountClass == 'LIABILITY') {\n                _this.currLiability = sortAssets[i].account;\n                _this.accounts = _.filter(_this.accounts, function (o) {\n                  return o.subAcClass != 'long term debt';\n                });\n              }\n            }\n\n            if (_this.currLiability.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            } //Calculation Current Assets \n\n\n            for (let i = 0; i < _this.sortOtherCurrentAssets.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.sortOtherCurrentAssets[i].closingBalAmtCAD != null) {\n                  _this.currentAssetTotalCAD += parseFloat(_this.sortOtherCurrentAssets[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n\n                if (_this.sortOtherCurrentAssets[i].closingBalAmtUSD != null) {\n                  _this.currentAssetTotalUSD += parseFloat(_this.sortOtherCurrentAssets[i].closingBalAmtUSD);\n                }\n              }\n            } //Calculation Inventory Assets \n\n\n            for (let i = 0; i < _this.sortInventoryAssets.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.sortInventoryAssets[i].closingBalAmtCAD != null) {\n                  _this.inventoryAssetTotalCAD += parseFloat(_this.sortInventoryAssets[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n\n                if (_this.sortInventoryAssets[i].closingBalAmtUSD != null) {\n                  _this.inventoryAssetTotalUSD += parseFloat(_this.sortInventoryAssets[i].closingBalAmtUSD);\n                }\n              }\n            } //Calculation Capital Assets \n\n\n            for (let i = 0; i < _this.sortCapitalAsset.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.sortCapitalAsset[i].closingBalAmtCAD != null) {\n                  _this.capitalAssetTotalCAD += parseFloat(_this.sortCapitalAsset[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n\n                if (_this.sortCapitalAsset[i].closingBalAmtUSD != null) {\n                  _this.capitalAssetTotalUSD += parseFloat(_this.sortCapitalAsset[i].closingBalAmtUSD);\n                }\n              }\n            } //Calculation Other Non-Current Assets \n\n\n            for (let i = 0; i < _this.sortONCAsset.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.sortONCAsset[i].closingBalAmtCAD != null) {\n                  _this.ONCAssetTotalCAD += parseFloat(_this.sortONCAsset[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n\n                if (_this.sortONCAsset[i].closingBalAmtUSD != null) {\n                  _this.ONCAssetTotalUSD += parseFloat(_this.sortONCAsset[i].closingBalAmtUSD);\n                }\n              }\n            } //Total of All Assets CAD USD\n\n\n            if (_this.currTab === 'CAD') {\n              _this.currency = 'CAD';\n              _this.totalAssetsCAD = _this.currentAssetTotalCAD + _this.inventoryAssetTotalCAD + _this.capitalAssetTotalCAD + _this.ONCAssetTotalCAD;\n            }\n\n            if (_this.currTab === 'USD') {\n              _this.currency = 'USD';\n              _this.totalAssetsUSD = _this.currentAssetTotalUSD + _this.inventoryAssetTotalUSD + _this.capitalAssetTotalUSD + _this.ONCAssetTotalUSD;\n            } //Calculation current Liabilities\n\n\n            for (let i = 0; i < _this.currLiability.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.currLiability[i].closingBalAmtCAD != null) {\n                  _this.totalCurrentLiabilityCAD += parseFloat(_this.currLiability[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n\n                if (_this.currLiability[i].closingBalAmtUSD != null) {\n                  _this.totalCurrentLiabilityUSD += parseFloat(_this.currLiability[i].closingBalAmtUSD);\n                }\n              }\n            } //Calculation Long Term Liabilities\n\n\n            for (let i = 0; i < _this.ltLiability.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.ltLiability[i].closingBalAmtCAD != null) {\n                  _this.totalLongTermLiabilityCAD += parseFloat(_this.ltLiability[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n\n                if (_this.ltLiability[i].closingBalAmtUSD != null) {\n                  _this.totalLongTermLiabilityUSD += parseFloat(_this.ltLiability[i].closingBalAmtUSD);\n                }\n              }\n            } //Total of All Liabilities CAD USD\n\n\n            if (_this.currTab === 'CAD') {\n              _this.currency = 'CAD';\n              _this.totalLiabilityCAD = _this.totalCurrentLiabilityCAD + _this.totalLongTermLiabilityCAD;\n            }\n\n            if (_this.currTab === 'USD') {\n              _this.currency = 'USD';\n              _this.totalLiabilityUSD = _this.totalCurrentLiabilityUSD + _this.totalLongTermLiabilityUSD;\n            } //Calculation Share Capital Equity\n\n\n            for (let i = 0; i < _this.scEquity.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.scEquity[i].closingBalAmtCAD != null) {\n                  _this.totalShareCapitalCAD += parseFloat(_this.scEquity[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n\n                if (_this.scEquity[i].closingBalAmtUSD != null) {\n                  _this.totalShareCapitalUSD += parseFloat(_this.scEquity[i].closingBalAmtUSD);\n                }\n              }\n            } //Calculation Retained Earnings Equity\n\n\n            for (let i = 0; i < _this.retainedEarnings.length; i++) {\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.retainedEarnings[i].closingBalAmtCAD != null) {\n                  _this.totalRetainedEarningsCAD += parseFloat(_this.retainedEarnings[i].closingBalAmtCAD);\n                }\n              }\n\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n\n                if (_this.retainedEarnings[i].closingBalAmtUSD != null) {\n                  _this.totalRetainedEarningsUSD += parseFloat(_this.retainedEarnings[i].closingBalAmtUSD);\n                }\n              }\n            } //Total of All Equities CAD USD\n\n\n            if (_this.currTab === 'CAD') {\n              _this.currency = 'CAD';\n              _this.totalEquityCAD = _this.totalShareCapitalCAD + _this.totalRetainedEarningsCAD;\n            }\n\n            if (_this.currTab === 'USD') {\n              _this.currency = 'USD';\n              _this.totalEquityUSD = _this.totalShareCapitalUSD + _this.totalRetainedEarningsUSD;\n            } //Total of Equities and Liability CAD USD\n\n\n            if (_this.currTab === 'CAD') {\n              _this.currency = 'CAD';\n              _this.totalLiabilityEquityCAD = _this.totalEquityCAD + _this.totalLiabilityCAD;\n            }\n\n            if (_this.currTab === 'USD') {\n              _this.currency = 'USD';\n              _this.totalLiabilityEquityUSD = _this.totalLiabilityUSD + _this.totalEquityUSD;\n            }\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  changeTab(type) {\n    this.currTab = type;\n    this.accounts = [];\n\n    if (this.currTab === 'CAD') {\n      this.currency = 'CAD';\n      this.currentAssetTotalCAD = 0;\n      this.currentAssetCreditTotalCAD = 0;\n      this.totalCurrentLiabilityCAD = 0;\n      this.inventoryAssetTotalCAD = 0;\n      this.capitalAssetTotalCAD = 0;\n      this.ONCAssetTotalCAD = 0;\n      this.totalLongTermLiabilityCAD = 0;\n      this.totalShareCapitalCAD = 0;\n      this.totalRetainedEarningsCAD = 0; // this.lastItemSK = '';\n\n      this.fetchBalance();\n    } else if (this.currTab === 'USD') {\n      this.currency = 'USD';\n      this.currentAssetTotalUSD = 0;\n      this.inventoryAssetTotalUSD = 0;\n      this.totalCurrentLiabilityUSD = 0;\n      this.capitalAssetTotalUSD = 0;\n      this.ONCAssetTotalUSD = 0;\n      this.totalLongTermLiabilityUSD = 0;\n      this.totalShareCapitalUSD = 0;\n      this.totalRetainedEarningsUSD = 0; // this.lastItemSK = '';\n\n      this.fetchBalance();\n    }\n  } //export\n\n\n  generateCSV() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.exportLoading = true;\n      let dataObject = [];\n      let csvArray = [];\n      let provArray = [];\n\n      try {\n        if (_this2.sortOtherCurrentAssets.length > 0) {\n          for (const element of _this2.sortOtherCurrentAssets) {\n            let obj = {};\n            obj['Account Number'] = element.accountNo;\n            obj['Account Name'] = element.accountName;\n            obj['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj);\n          }\n\n          let totObj = {\n            ['Credit']: 'Total Current Assets',\n            ['Dummyy']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj['Total'] = _this2.currentAssetTotalCAD;\n            dataObject.push(totObj, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj['Total'] = _this2.currentAssetTotalUSD;\n            dataObject.push(totObj, '\\n');\n          }\n        } //Inventory Assets\n\n\n        if (_this2.sortInventoryAssets.length > 0) {\n          for (const element of _this2.sortInventoryAssets) {\n            let obj2 = {};\n            obj2['Account Number'] = element.accountNo;\n            obj2['Account Name'] = element.accountName;\n            obj2['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj2['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj2['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj2);\n          }\n\n          let totObj2 = {\n            ['Credit']: 'Total Inventory Assets',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj2['Total'] = _this2.inventoryAssetTotalCAD;\n            dataObject.push(totObj2, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj2['Total'] = _this2.inventoryAssetTotalUSD;\n            dataObject.push(totObj2, '\\n');\n          }\n        } // capital assets\n\n\n        if (_this2.sortCapitalAsset.length > 0) {\n          for (const element of _this2.sortCapitalAsset) {\n            let obj3 = {};\n            obj3['Account Number'] = element.accountNo;\n            obj3['Account Name'] = element.accountName;\n            obj3['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj3['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj3['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj3);\n          }\n\n          let totObj3 = {\n            ['Credit']: 'Total Capital Assets',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj3['Total'] = _this2.capitalAssetTotalCAD;\n            dataObject.push(totObj3, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj3['Total'] = _this2.capitalAssetTotalUSD;\n            dataObject.push(totObj3, '\\n');\n          }\n        } // Other Non-Current Assets\n\n\n        if (_this2.sortONCAsset.length > 0) {\n          for (const element of _this2.sortONCAsset) {\n            let obj4 = {};\n            obj4['Account Number'] = element.accountNo;\n            obj4['Account Name'] = element.accountName;\n            obj4['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj4['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj4['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj4);\n          }\n\n          let totObj4 = {\n            ['Credit']: 'Total Non-Current Assets',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj4['Total'] = _this2.ONCAssetTotalCAD;\n            dataObject.push(totObj4, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj4['Total'] = _this2.ONCAssetTotalUSD;\n            dataObject.push(totObj4, '\\n');\n          }\n        } //Total of all assets \n\n\n        let totObj5 = {\n          ['Credit']: 'Total  Assets',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObj5['Total'] = _this2.totalAssetsCAD;\n          dataObject.push(totObj5, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObj5['Total'] = _this2.totalAssetsUSD;\n          dataObject.push(totObj5, '\\n');\n        } // Current Liability\n\n\n        if (_this2.currLiability.length > 0) {\n          for (const element of _this2.currLiability) {\n            let obj5 = {};\n            obj5['Account Number'] = element.accountNo;\n            obj5['Account Name'] = element.accountName;\n            obj5['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj5['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj5['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj5);\n          }\n\n          let totObj5 = {\n            ['Credit']: ' Total Current Liability',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj5['Total'] = _this2.totalCurrentLiabilityCAD;\n            dataObject.push(totObj5, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj5['Total'] = _this2.totalCurrentLiabilityUSD;\n            dataObject.push(totObj5, '\\n');\n          }\n        } // Long Term Liability\n\n\n        if (_this2.ltLiability.length > 0) {\n          for (const element of _this2.ltLiability) {\n            let obj6 = {};\n            obj6['Account Number'] = element.accountNo;\n            obj6['Account Name'] = element.accountName;\n            obj6['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj6['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj6['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj6);\n          }\n\n          let totObj6 = {\n            ['Credit']: 'Total Long Term Liability',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj6['Total'] = _this2.totalLongTermLiabilityCAD;\n            dataObject.push(totObj6, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj6['Total'] = _this2.totalLongTermLiabilityUSD;\n            dataObject.push(totObj6, '\\n');\n          }\n        } //Total of all liability\n\n\n        let totObjLiabilityTOT = {\n          ['Credit']: 'Total  Liability',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObjLiabilityTOT['Total'] = _this2.totalLiabilityCAD;\n          dataObject.push(totObjLiabilityTOT, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObjLiabilityTOT['Total'] = _this2.totalLiabilityUSD;\n          dataObject.push(totObjLiabilityTOT, '\\n');\n        } // Share Capital\n\n\n        if (_this2.scEquity.length > 0) {\n          for (const element of _this2.scEquity) {\n            let obj7 = {};\n            obj7['Account Number'] = element.accountNo;\n            obj7['Account Name'] = element.accountName;\n            obj7['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj7['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj7['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj7);\n          }\n\n          let totObj7 = {\n            ['Credit']: 'Total Share Capital',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj7['Total'] = _this2.totalShareCapitalCAD;\n            dataObject.push(totObj7, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj7['Total'] = _this2.totalShareCapitalUSD;\n            dataObject.push(totObj7, '\\n');\n          }\n        } // Retained Earnings\n\n\n        if (_this2.retainedEarnings.length > 0) {\n          for (const element of _this2.retainedEarnings) {\n            let obj8 = {};\n            obj8['Account Number'] = element.accountNo;\n            obj8['Account Name'] = element.accountName;\n            obj8['Account Class'] = element.subAcClass;\n\n            if (_this2.currTab === 'CAD') {\n              obj8['Closing Balance'] = element.closingBalAmtCAD;\n            } else {\n              obj8['Closing Balance'] = element.closingBalAmtUSD;\n            }\n\n            dataObject.push(obj8);\n          }\n\n          let totObj8 = {\n            ['Credit']: 'Total Retained Earnings',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj8['Total'] = _this2.totalRetainedEarningsCAD;\n            dataObject.push(totObj8, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj8['Total'] = _this2.totalRetainedEarningsUSD;\n            dataObject.push(totObj8, '\\n');\n          }\n        } //Total Equities\n\n\n        let totObjEquityTOT = {\n          ['Credit']: 'Total  Equity',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObjEquityTOT['Total'] = _this2.totalEquityCAD;\n          dataObject.push(totObjEquityTOT, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObjEquityTOT['Total'] = _this2.totalEquityUSD;\n          dataObject.push(totObjEquityTOT, '\\n');\n        } //Total Liability & Equity\n\n\n        let totObjLiabilityEquityTOT = {\n          ['Credit']: 'Total Liability & Equity',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObjLiabilityEquityTOT['Total'] = _this2.totalLiabilityEquityCAD;\n          dataObject.push(totObjLiabilityEquityTOT, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObjLiabilityEquityTOT['Total'] = _this2.totalLiabilityEquityUSD;\n          dataObject.push(totObjLiabilityEquityTOT, '\\n');\n        }\n\n        let headers = Object.keys(dataObject[0]).join(',');\n        headers += '\\n';\n        csvArray.push(headers);\n\n        for (const element of dataObject) {\n          let value = Object.values(element).join(',');\n          value += '\\n';\n          csvArray.push(value);\n        }\n\n        const blob = new Blob(csvArray, {\n          type: 'text/csv;charset=utf-8'\n        });\n        const link = document.createElement('a');\n\n        if (link.download !== undefined) {\n          const url = URL.createObjectURL(blob);\n          link.setAttribute('href', url);\n          link.setAttribute('download', `${moment().format(\"YYYY-MM-DD:HH:m\")}-balenceSheet.csv`);\n          link.style.visibility = 'hidden';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n\n        _this2.exportLoading = false;\n      } catch (error) {\n        _this2.exportLoading = false;\n      }\n    })();\n  }\n\n};\n\nBalanceSheetComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ToastrService\n}];\n\nBalanceSheetComponent = __decorate([Component({\n  selector: 'app-balance-sheet',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], BalanceSheetComponent);\nexport { BalanceSheetComponent };","map":null,"metadata":{},"sourceType":"module"}