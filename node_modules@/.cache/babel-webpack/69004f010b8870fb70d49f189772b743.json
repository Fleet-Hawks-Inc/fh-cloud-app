{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./service-program-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./service-program-list.component.css\";\nimport { Component, ViewChild, Input } from '@angular/core';\nimport { ApiService } from '../../../../../services';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Constants from '../../../constants';\nimport { environment } from '../../../../../../environments/environment';\nimport * as _ from 'lodash';\nlet ServiceProgramListComponent = class ServiceProgramListComponent {\n  constructor(apiService, spinner, toastr) {\n    var _this = this;\n\n    this.apiService = apiService;\n    this.spinner = spinner;\n    this.toastr = toastr;\n    this.get = _.get;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.title = 'Service Program List'; // dtOptions: any = {};\n\n    this.programs = [];\n    this.programeName = '';\n    this.totalRecords = 20;\n    this.pageLength = 10;\n    this.lastItemSK = '';\n    this.disableSearch = false;\n    this.serviceProgramNext = false;\n    this.serviceProgramPrev = true;\n    this.serviceProgramDraw = 0;\n    this.serviceProgramPrevEvauatedKeys = [''];\n    this.serviceProgramStartPoint = 1;\n    this.serviceProgramEndPoint = this.pageLength;\n    this.suggestions = [];\n    this.data = [];\n    this.loaded = false;\n    this.demoData = []; // columns of data table\n\n    this.dataColumns = [{\n      width: '20%',\n      field: 'programName',\n      header: 'Service Program Name',\n      type: 'text'\n    }, {\n      width: '75%',\n      field: 'description',\n      header: 'Description',\n      type: 'text'\n    }];\n\n    this.onScroll = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        if (_this.loaded) {\n          _this.initDataTable();\n        }\n\n        _this.loaded = false;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.getSuggestions = _.debounce(function (searchvalue) {\n      this.suggestions = [];\n\n      if (searchvalue !== '') {\n        searchvalue = searchvalue.toLowerCase();\n        this.apiService.getData('servicePrograms/get/suggestions/' + searchvalue).subscribe({\n          complete: () => {},\n          error: () => {},\n          next: result => {\n            this.suggestions = result;\n          }\n        });\n      }\n    }, 800);\n  }\n\n  ngOnInit() {\n    this.initDataTable();\n    this.setToggleOptions();\n  }\n\n  initDataTable() {\n    if (this.lastItemSK !== 'end') {\n      this.apiService.getData('servicePrograms/fetch/records?programName=' + this.programeName + '&lastKey=' + this.lastItemSK).subscribe(result => {\n        if (result.Items.length === 0) {\n          this.disableSearch = false;\n          this.loaded = true;\n          this.dataMessage = Constants.NO_RECORDS_FOUND;\n        }\n\n        this.suggestions = [];\n\n        if (result.Items.length > 0) {\n          this.disableSearch = false;\n\n          if (result.LastEvaluatedKey !== undefined) {\n            this.lastItemSK = encodeURIComponent(result.LastEvaluatedKey.sk);\n          } else {\n            this.lastItemSK = 'end';\n          }\n\n          this.programs = this.programs.concat(result.Items);\n          this.loaded = true;\n        }\n      });\n    }\n  }\n\n  setToggleOptions() {\n    this.selectedColumns = this.dataColumns;\n  }\n\n  get selectedColumns() {\n    return this._selectedColumns;\n  }\n\n  set selectedColumns(val) {\n    //restore original order\n    this._selectedColumns = this.dataColumns.filter(col => val.includes(col));\n  }\n\n  searchFilter() {\n    if (this.programeName !== '') {\n      this.programeName = this.programeName.toLowerCase();\n      this.disableSearch = true;\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.lastItemSK = '';\n      this.programs = [];\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  resetFilter() {\n    if (this.programeName !== '') {\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.disableSearch = true;\n      this.programeName = '';\n      this.lastItemSK = '';\n      this.programs = [];\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  deleteProgram(entryID, programName) {\n    if (confirm('Are you sure you want to delete?') === true) {\n      this.apiService.deleteData(`servicePrograms/isDeleted/${entryID}/${programName}/` + 1).subscribe(result => {\n        this.lastItemSK = '';\n        this.programs = [];\n        this.serviceProgramDraw = 0;\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.initDataTable();\n        this.toastr.success('Service Program Deleted Successfully!');\n      });\n    }\n  }\n\n  setData(value) {\n    this.programeName = value.trim();\n    this.suggestions = [];\n  }\n\n  clearInput() {\n    this.suggestions = null;\n  }\n\n  clearSuggestions() {\n    this.programeName = null;\n  }\n\n  refreshData() {\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.programeName = '';\n    this.disableSearch = true;\n    this.lastItemSK = '';\n    this.programs = [];\n    this.initDataTable();\n  }\n  /**\r\n  * Clears the table filters\r\n  * @param table Table\r\n  */\n\n\n  clear(table) {\n    table.clear();\n  }\n\n};\n\nServiceProgramListComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: ToastrService\n}];\n\nServiceProgramListComponent.propDecorators = {\n  table: [{\n    type: ViewChild,\n    args: ['dt']\n  }],\n  selectedColumns: [{\n    type: Input\n  }]\n};\nServiceProgramListComponent = __decorate([Component({\n  selector: 'app-service-program-list',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ServiceProgramListComponent);\nexport { ServiceProgramListComponent };","map":null,"metadata":{},"sourceType":"module"}