{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./receipt-detail.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./receipt-detail.component.css\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport Constants from \"../../../fleet/constants\";\nimport { AccountService, AccountUtilityService } from \"./../../../../services\";\nimport * as html2pdf from \"html2pdf.js\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\nlet ReceiptDetailComponent = class ReceiptDetailComponent {\n  constructor(accountService, route, accountUtility, modalService) {\n    this.accountService = accountService;\n    this.route = route;\n    this.accountUtility = accountUtility;\n    this.modalService = modalService;\n    this.dataMessage = Constants.NO_RECORDS_FOUND;\n    this.accountsObjects = {};\n    this.accountsIntObjects = {};\n    this.receiptData = {\n      customerID: null,\n      txnDate: null,\n      recNo: null,\n      recAmount: 0,\n      recAmountCur: null,\n      accountID: null,\n      paymentMode: null,\n      paymentModeNo: null,\n      paymentModeDate: null,\n      paidInvoices: [],\n      fetchedInvoices: [],\n      transactionLog: [],\n      custData: [],\n      charges: {\n        addition: [],\n        deduction: [],\n        addTotal: 0,\n        dedTotal: 0,\n        addAccountID: null,\n        dedAccountID: null\n      },\n      isFeatEnabled: false\n    };\n    this.customerName = \"\";\n    this.isLoaded = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.recID = _this.route.snapshot.params[`recID`];\n\n      if (_this.recID) {\n        _this.fetchReceipt();\n      }\n    })();\n  }\n\n  fetchReceipt() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.accountService.getData(`receipts/detail/${_this2.recID}`).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (res) {\n          _this2.receiptData = res[0];\n\n          if (!_this2.receiptData.isFeatEnabled) {\n            _this2.accountsIntObjects = yield _this2.accountUtility.getPreDefinedAccounts();\n          }\n\n          _this2.isLoaded = true;\n\n          if (_this2.receiptData.custData) {\n            for (let i = 0; i < _this2.receiptData.custData.length; i++) {\n              const element = _this2.receiptData.custData[i];\n              _this2.customerName += element.cName;\n\n              if (i < _this2.receiptData.custData.length - 1) {\n                _this2.customerName += \", \";\n              }\n            }\n          }\n\n          for (let i = 0; i < _this2.receiptData.paidInvoices.length; i++) {\n            const element = _this2.receiptData.paidInvoices[i];\n\n            _this2.receiptData.fetchedInvoices.map(v => {\n              if (v.invID === element.invID) {\n                element.invNo = v.invNo;\n                element.finalAmount = v.finalAmount;\n              }\n            });\n          }\n\n          for (let j = 0; j < _this2.receiptData.transactionLog.length; j++) {\n            const element = _this2.receiptData.transactionLog[j];\n            element.accName = \"\";\n            element.type = element.type.replace(\"_\", \" \");\n\n            if (element.actIDType === \"actID\" && !_this2.receiptData.isFeatEnabled) {\n              _this2.receiptData.fetchedInvoices.map(v => {\n                if (v._type === \"Accounts\" && v.actID === element.accountID) {\n                  element.accName = v.actName;\n                }\n              });\n            }\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  generateReceiptPDF() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const data = document.getElementById(\"recpt_pdf\");\n      html2pdf(data, {\n        margin: [0.5, 0, 0.5, 0],\n        pagebreak: {\n          mode: \"avoid-all\",\n          before: \"recpt_pdf\"\n        },\n        filename: `REC-${_this3.receiptData.recNo}.pdf`,\n        image: {\n          type: \"jpeg\",\n          quality: 0.98\n        },\n        html2canvas: {\n          scale: 2,\n          logging: true,\n          dpi: 192,\n          letterRendering: true\n        },\n        jsPDF: {\n          unit: \"in\",\n          format: \"a4\",\n          orientation: \"portrait\"\n        }\n      });\n      localStorage.setItem(\"downloadDisabled\", \"false\");\n    })();\n  }\n\n  showPreview() {\n    let ngbModalOptions = {\n      backdrop: \"static\",\n      keyboard: false,\n      windowClass: \"paymentPdfSection-prog__main\"\n    };\n    this.modalService.open(this.modalContent, ngbModalOptions).result.then(result => {}, reason => {});\n  }\n\n};\n\nReceiptDetailComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ActivatedRoute\n}, {\n  type: AccountUtilityService\n}, {\n  type: NgbModal\n}];\n\nReceiptDetailComponent.propDecorators = {\n  modalContent: [{\n    type: ViewChild,\n    args: [\"recptDetail\", {\n      static: true\n    }]\n  }]\n};\nReceiptDetailComponent = __decorate([Component({\n  selector: \"app-receipt-detail\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ReceiptDetailComponent);\nexport { ReceiptDetailComponent };","map":null,"metadata":{},"sourceType":"module"}