{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./expense-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./expense-list.component.css\";\nimport { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HereMapService } from 'src/app/services/here-map.service';\nimport * as _ from 'lodash';\nimport { environment } from '../../../../../../environments/environment';\nimport { ApiService } from '../../../../../services';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport Constants from 'src/app/pages/fleet/constants';\nlet ExpenseListComponent = class ExpenseListComponent {\n  constructor(apiService, httpClient, router, _sanitizer, toastr, spinner, hereMap) {\n    var _this = this;\n\n    this.apiService = apiService;\n    this.httpClient = httpClient;\n    this.router = router;\n    this._sanitizer = _sanitizer;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.hereMap = hereMap;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.title = 'Vehicle List';\n    this.vehicles = [];\n    this.suggestedVehicles = [];\n    this.vehicleID = '';\n    this.currentStatus = null;\n    this.vehicleIdentification = '';\n    this.allOptions = {};\n    this.groupsList = {};\n    this.vehicleModelList = {};\n    this.vehicleManufacturersList = {};\n    this.serviceProgramsList = {};\n    this.driversList = {};\n    this.vendorsList = {};\n    this.currentView = 'list';\n    this.totalRecords = 20;\n    this.lastEvaluatedKey = '';\n    this.disableSearch = false;\n    this.vehicleTypeObects = {};\n    this.lastItemSK = '';\n    this.loaded = false;\n    this.isSearch = false;\n    this.listView = true;\n    this.visible = true;\n    this.get = _.get;\n    this.dataColumns = [{\n      field: 'vehicleIdentification',\n      header: 'Vehicle Name/Number',\n      type: \"text\"\n    }, {\n      width: '6%',\n      field: 'VIN',\n      header: 'VIN',\n      type: \"text\"\n    }, {\n      width: '5%',\n      field: 'startDate',\n      header: 'Start Date',\n      type: \"text\"\n    }, {\n      width: '5%',\n      field: 'manufacturerID',\n      header: 'Make',\n      type: \"text\"\n    }, {\n      width: '5%',\n      field: 'modelID',\n      header: 'Model',\n      type: \"text\"\n    }, {\n      width: '5%',\n      field: 'year',\n      header: 'Year',\n      type: \"text\"\n    }, {\n      width: '9%',\n      field: 'annualSafetyDate',\n      header: 'Annual Safety Date',\n      type: \"text\"\n    }, {\n      width: '7%',\n      field: 'ownership',\n      header: 'Ownership',\n      type: \"text\"\n    }, {\n      width: '8%',\n      field: 'driverList.driverID',\n      header: 'Driver Assigned',\n      type: 'text'\n    }, {\n      width: '10%',\n      field: 'driverList.teamDriverID',\n      header: 'Team Driver Assigned',\n      type: 'text'\n    }, {\n      width: '7%',\n      field: 'plateNumber',\n      header: 'Plate Number',\n      type: \"text\"\n    }, {\n      width: '3%',\n      field: 'currentStatus',\n      header: 'Status',\n      type: 'text'\n    }];\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value != '') {\n        this.apiService.getData(`vehicles/suggestion/${value}`).subscribe(result => {\n          this.suggestedVehicles = result;\n        });\n      } else {\n        this.suggestedVehicles = [];\n      }\n    }, 800);\n\n    this.onScroll = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        if (_this.loaded) {\n          _this.initDataTable();\n        }\n\n        _this.loaded = false;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.fetchGroups();\n\n      _this2.fetchDriversList();\n\n      _this2.fetchVendorList();\n\n      _this2.initDataTable();\n\n      _this2.setToggleOptions();\n    })();\n  }\n\n  fetchGroups() {\n    this.apiService.getData('groups/get/list').subscribe(result => {\n      this.groupsList = result;\n    });\n  }\n\n  setToggleOptions() {\n    this.selectedColumns = this.dataColumns;\n  }\n\n  get selectedColumns() {\n    return this._selectedColumns;\n  }\n\n  set selectedColumns(val) {\n    //restore original order\n    this._selectedColumns = this.dataColumns.filter(col => val.includes(col));\n  }\n\n  fetchVehicleModelList() {\n    this.apiService.getData('vehicleModels/get/list').subscribe(result => {\n      this.vehicleModelList = result;\n    });\n  }\n\n  fetchDriversList() {\n    this.apiService.getData('drivers/get/list').subscribe(result => {\n      this.driversList = result;\n    });\n  }\n\n  fetchVendorList() {\n    this.apiService.getData('contacts/get/list/vendor').subscribe(result => {\n      this.vendorsList = result;\n    });\n  }\n\n  setVehicle(vehicleID, vehicleIdentification) {\n    this.vehicleIdentification = vehicleIdentification;\n    this.vehicleID = vehicleIdentification;\n    this.suggestedVehicles = [];\n  }\n\n  initDataTable() {\n    var _this3 = this;\n\n    if (this.lastEvaluatedKey !== 'end') {\n      this.apiService.getData('vehicles/fetch/records?vehicle=' + this.vehicleID + '&status=' + this.currentStatus + '&lastKey=' + this.lastEvaluatedKey).subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (result) {\n          _this3.dataMessage = Constants.FETCHING_DATA;\n\n          if (result.data.length === 0) {\n            _this3.disableSearch = false;\n            _this3.dataMessage = Constants.NO_RECORDS_FOUND;\n          }\n\n          result[`data`].map(v => {\n            v.url = `/reports/fleet/vehicles/expense/${v.vehicleID}`;\n          });\n\n          if (result.data.length > 0) {\n            _this3.disableSearch = false;\n\n            if (result.nextPage !== undefined) {\n              _this3.lastEvaluatedKey = encodeURIComponent(result.nextPage);\n            } else {\n              _this3.lastEvaluatedKey = 'end';\n            }\n\n            _this3.vehicles = _this3.vehicles.concat(result.data);\n            _this3.loaded = true;\n          }\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }\n\n  searchFilter() {\n    if (this.vehicleIdentification !== '' || this.currentStatus !== null) {\n      this.vehicleIdentification = this.vehicleIdentification.toLowerCase();\n\n      if (this.vehicleID == '') {\n        this.vehicleID = this.vehicleIdentification;\n      }\n\n      this.disableSearch = true;\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.vehicles = [];\n      this.lastEvaluatedKey = '';\n      this.suggestedVehicles = [];\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  refreshData() {\n    this.vehicleID = '';\n    this.suggestedVehicles = [];\n    this.vehicleIdentification = '';\n    this.currentStatus = null;\n    this.vehicles = [];\n    this.lastEvaluatedKey = '';\n    this.loaded = false;\n    this.initDataTable();\n    this.dataMessage = Constants.FETCHING_DATA;\n  }\n\n  resetFilter() {\n    if (this.vehicleIdentification !== '' || this.currentStatus !== null) {\n      this.disableSearch = true;\n      this.vehicleID = '';\n      this.suggestedVehicles = [];\n      this.vehicleIdentification = '';\n      this.currentStatus = null;\n      this.lastEvaluatedKey = '';\n      this.vehicles = [];\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  clear(table) {\n    table.clear();\n  }\n\n};\n\nExpenseListComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: HttpClient\n}, {\n  type: Router\n}, {\n  type: DomSanitizer\n}, {\n  type: ToastrService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: HereMapService\n}];\n\nExpenseListComponent.propDecorators = {\n  table: [{\n    type: ViewChild,\n    args: ['dt']\n  }],\n  ngSelectComponent: [{\n    type: ViewChild,\n    args: [NgSelectComponent]\n  }],\n  selectedColumns: [{\n    type: Input\n  }]\n};\nExpenseListComponent = __decorate([Component({\n  selector: 'app-expense-list',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ExpenseListComponent);\nexport { ExpenseListComponent };","map":null,"metadata":{},"sourceType":"module"}