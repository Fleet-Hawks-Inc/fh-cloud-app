{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i1 from 'primeng/menu';\nimport { MenuModule } from 'primeng/menu';\nconst _c0 = [\"container\"];\nconst _c1 = [\"defaultbtn\"];\nconst _c2 = [\"menu\"];\n\nclass SplitButton {\n  constructor() {\n    this.iconPos = 'left';\n    this.onClick = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n  }\n\n  onDefaultButtonClick(event) {\n    this.onClick.emit(event);\n  }\n\n  onDropdownButtonClick(event) {\n    this.onDropdownClick.emit(event);\n    this.menu.toggle({\n      currentTarget: this.containerViewChild.nativeElement,\n      relativeAlign: this.appendTo == null\n    });\n  }\n\n}\n\nSplitButton.ɵfac = function SplitButton_Factory(t) {\n  return new (t || SplitButton)();\n};\n\nSplitButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SplitButton,\n  selectors: [[\"p-splitButton\"]],\n  viewQuery: function SplitButton_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    model: \"model\",\n    icon: \"icon\",\n    iconPos: \"iconPos\",\n    label: \"label\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    menuStyle: \"menuStyle\",\n    menuStyleClass: \"menuStyleClass\",\n    disabled: \"disabled\",\n    tabindex: \"tabindex\",\n    appendTo: \"appendTo\",\n    dir: \"dir\",\n    expandAriaLabel: \"expandAriaLabel\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    onDropdownClick: \"onDropdownClick\"\n  },\n  decls: 7,\n  vars: 19,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"type\", \"button\", \"pButton\", \"\", 1, \"p-splitbutton-defaultbutton\", 3, \"icon\", \"iconPos\", \"label\", \"disabled\", \"click\"], [\"defaultbtn\", \"\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-chevron-down\", 1, \"p-splitbutton-menubutton\", 3, \"disabled\", \"click\"], [3, \"popup\", \"model\", \"styleClass\", \"appendTo\", \"showTransitionOptions\", \"hideTransitionOptions\"], [\"menu\", \"\"]],\n  template: function SplitButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelementStart(2, \"button\", 2, 3);\n      i0.ɵɵlistener(\"click\", function SplitButton_Template_button_click_2_listener($event) {\n        return ctx.onDefaultButtonClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function SplitButton_Template_button_click_4_listener($event) {\n        return ctx.onDropdownButtonClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"p-menu\", 5, 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-splitbutton p-component\")(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"icon\", ctx.icon)(\"iconPos\", ctx.iconPos)(\"label\", ctx.label)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"tabindex\", ctx.tabindex);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"aria-label\", ctx.expandAriaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMap(ctx.menuStyle);\n      i0.ɵɵproperty(\"popup\", true)(\"model\", ctx.model)(\"styleClass\", ctx.menuStyleClass)(\"appendTo\", ctx.appendTo)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n    }\n  },\n  directives: [i2.NgClass, i2.NgStyle, i3.ButtonDirective, i1.Menu],\n  styles: [\".p-splitbutton{display:inline-flex;position:relative}.p-splitbutton .p-splitbutton-defaultbutton{flex:1 1 auto;border-top-right-radius:0;border-bottom-right-radius:0;border-right:0 none}.p-splitbutton-menubutton{display:flex;align-items:center;justify-content:center;border-top-left-radius:0;border-bottom-left-radius:0}.p-splitbutton .p-menu{min-width:100%}.p-fluid .p-splitbutton{display:flex}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitButton',\n      template: `\n        <div #container [ngClass]=\"'p-splitbutton p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <button #defaultbtn class=\"p-splitbutton-defaultbutton\" type=\"button\" pButton [icon]=\"icon\" [iconPos]=\"iconPos\" [label]=\"label\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"></button>\n            <button type=\"button\" pButton class=\"p-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" (click)=\"onDropdownButtonClick($event)\" [disabled]=\"disabled\" [attr.aria-label]=\"expandAriaLabel\"></button>\n            <p-menu #menu [popup]=\"true\" [model]=\"model\" [style]=\"menuStyle\" [styleClass]=\"menuStyleClass\" [appendTo]=\"appendTo\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-menu>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      },\n      styles: [\".p-splitbutton{display:inline-flex;position:relative}.p-splitbutton .p-splitbutton-defaultbutton{flex:1 1 auto;border-top-right-radius:0;border-bottom-right-radius:0;border-right:0 none}.p-splitbutton-menubutton{display:flex;align-items:center;justify-content:center;border-top-left-radius:0;border-bottom-left-radius:0}.p-splitbutton .p-menu{min-width:100%}.p-fluid .p-splitbutton{display:flex}\\n\"]\n    }]\n  }], null, {\n    model: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    menuStyle: [{\n      type: Input\n    }],\n    menuStyleClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }],\n    expandAriaLabel: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    buttonViewChild: [{\n      type: ViewChild,\n      args: ['defaultbtn']\n    }],\n    menu: [{\n      type: ViewChild,\n      args: ['menu']\n    }]\n  });\n})();\n\nclass SplitButtonModule {}\n\nSplitButtonModule.ɵfac = function SplitButtonModule_Factory(t) {\n  return new (t || SplitButtonModule)();\n};\n\nSplitButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitButtonModule\n});\nSplitButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ButtonModule, MenuModule], ButtonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonModule, MenuModule],\n      exports: [SplitButton, ButtonModule],\n      declarations: [SplitButton]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SplitButton, SplitButtonModule }; //# sourceMappingURL=primeng-splitbutton.mjs.map","map":null,"metadata":{},"sourceType":"module"}