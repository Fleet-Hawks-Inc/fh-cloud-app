{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./summary.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./summary.component.css\";\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services';\nimport Constants from 'src/app/pages/fleet/constants';\nimport { ToastrService } from 'ngx-toastr';\nimport * as moment from 'moment';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport * as _ from 'lodash';\nlet SummaryComponent = class SummaryComponent {\n  constructor(apiService, router, toastr, spinner) {\n    this.apiService = apiService;\n    this.router = router;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.vehicles = [];\n    this.vehicleIdentification = '';\n    this.suggestedVehicles = [];\n    this.vehicleManufacturersList = {};\n    this.vehicleModelList = {};\n    this.modelID = {};\n    this.exportList = [];\n    this.manufacturerID = {};\n    this.createdTime = {};\n    this.vehicleType = {};\n    this.inActiveVehiclesCount = 0;\n    this.activeVehiclesCount = 0;\n    this.soldVehiclesCount = 0;\n    this.currentStatus = null;\n    this.totalVehicleCount = 0;\n    this.lastItemSK = '';\n    this.loaded = false;\n    this.vehiclesCount = {\n      total: '',\n      active: '',\n      inactive: '',\n      sold: ''\n    };\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value != '') {\n        this.apiService.getData(`vehicles/suggestion/${value}`).subscribe(result => {\n          this.suggestedVehicles = result;\n        });\n      } else {\n        this.suggestedVehicles = [];\n      }\n    }, 800);\n  }\n\n  ngOnInit() {\n    this.getVehiclePage();\n    this.fetchVehiclesCount();\n  }\n\n  getVehiclePage(refresh) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (refresh === true) {\n        _this.lastItemSK = '';\n        _this.vehicles = [];\n      }\n\n      if (_this.lastItemSK !== 'end') {\n        const result = yield _this.apiService.getData(`vehicles/fetch/summary/list?name=${_this.vehicleIdentification}&currentStatus=${_this.currentStatus}&lastKey=${_this.lastItemSK}`).toPromise();\n\n        if (result.Items.length === 0) {\n          _this.dataMessage = Constants.NO_RECORDS_FOUND;\n        }\n\n        _this.suggestedVehicles = [];\n\n        if (result.Items.length > 0) {\n          if (result.LastEvaluatedKey !== undefined) {\n            _this.lastItemSK = encodeURIComponent(result.Items[result.Items.length - 1].vehicleSK);\n          } else {\n            _this.lastItemSK = 'end';\n          }\n\n          _this.vehicles = _this.vehicles.concat(result.Items);\n          _this.loaded = true;\n        }\n      }\n    })();\n  }\n\n  fetchVehiclesCount() {\n    this.apiService.getData('vehicles/fetch/vehicleCount').subscribe(result => {\n      this.vehiclesCount = result;\n    });\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.getVehiclePage();\n    }\n\n    this.loaded = false;\n  }\n\n  setVehicle(vehicleID, vehicleIdentification) {\n    this.vehicleIdentification = vehicleIdentification;\n    this.vehicleID = vehicleIdentification;\n    this.suggestedVehicles = [];\n  }\n\n  searchVehicle() {\n    if (this.vehicleIdentification !== '' || this.currentStatus !== null) {\n      this.vehicleIdentification = this.vehicleIdentification.toLowerCase();\n      this.currentStatus = this.currentStatus;\n      this.vehicles = [];\n      this.lastItemSK = '';\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.suggestedVehicles = [];\n      this.getVehiclePage();\n    } else {\n      return false;\n    }\n  }\n\n  resetVehicle() {\n    if (this.vehicleIdentification !== '' || this.currentStatus !== null || this.lastItemSK) {\n      this.vehicleIdentification = '';\n      this.currentStatus = null;\n      this.vehicles = [];\n      this.lastItemSK = '';\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.suggestedVehicles = [];\n      this.getVehiclePage();\n    } else {\n      return false;\n    }\n  }\n\n  generateVehicleCSV() {\n    if (this.exportList.length > 0) {\n      let dataObject = [];\n      let csvArray = [];\n      this.exportList.forEach(element => {\n        let obj = {};\n        obj[\"Vehicle Name\"] = element.vehicleIdentification;\n        obj[\"VIN#\"] = element.VIN;\n        obj[\"Year\"] = element.year;\n        obj[\"Make\"] = element.manufacturerID;\n        obj[\"Model\"] = element.modelID ? element.modelID : '-';\n        obj[\"Type\"] = element.vehicleType;\n        obj[\"Plate#\"] = element.plateNumber;\n        obj[\"Ownership\"] = element.ownership ? element.ownership : '-';\n        obj[\"Status\"] = element.currentStatus;\n        dataObject.push(obj);\n      });\n      let headers = Object.keys(dataObject[0]).join(',');\n      headers += '\\n';\n      csvArray.push(headers);\n      dataObject.forEach(element => {\n        let obj = Object.values(element).join(',');\n        obj += '\\n';\n        csvArray.push(obj);\n      });\n      const blob = new Blob(csvArray, {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const link = document.createElement('a');\n\n      if (link.download !== undefined) {\n        const url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', `${moment().format(\"YYYY-MM-DD:HH:m\")}Vehicle-Report.csv`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    } else {\n      this.toastr.error(\"No Records found\");\n    }\n  }\n\n  vehicleExport() {\n    this.apiService.getData(`vehicles/fetch/export`).subscribe(result => {\n      this.exportList = result.Items;\n      this.generateVehicleCSV();\n    });\n  }\n\n  csvExport() {\n    if (this.vehicleIdentification !== '' || this.currentStatus !== null) {\n      this.exportList = this.vehicles;\n      this.generateVehicleCSV();\n    } else {\n      this.vehicleExport();\n    }\n  }\n\n};\n\nSummaryComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: Router\n}, {\n  type: ToastrService\n}, {\n  type: NgxSpinnerService\n}];\n\nSummaryComponent = __decorate([Component({\n  selector: 'app-summary',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], SummaryComponent);\nexport { SummaryComponent };","map":null,"metadata":{},"sourceType":"module"}