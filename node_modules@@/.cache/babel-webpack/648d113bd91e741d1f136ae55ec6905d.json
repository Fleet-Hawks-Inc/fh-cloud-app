{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./edit-profile.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./edit-profile.component.css\";\nimport { Component, ViewChild } from '@angular/core';\nimport { ApiService } from '../../../../services';\nimport { ActivatedRoute } from '@angular/router';\nimport { HereMapService } from '../../../../services';\nimport { Location } from '@angular/common';\nimport { from, Subject, throwError } from 'rxjs';\nimport { map, debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { InvokeHeaderFnService } from 'src/app/services/invoke-header-fn.service';\nimport { CountryStateCityService } from 'src/app/services/country-state-city.service';\nlet EditProfileComponent = class EditProfileComponent {\n  constructor(apiService, toaster, headerFnService, route, location, HereMap, countryStateCity) {\n    this.apiService = apiService;\n    this.toaster = toaster;\n    this.headerFnService = headerFnService;\n    this.route = route;\n    this.location = location;\n    this.HereMap = HereMap;\n    this.countryStateCity = countryStateCity;\n    this.companyID = '';\n    this.carrierID = '';\n    this.bankID = '';\n    this.carriers = [];\n    this.Asseturl = this.apiService.AssetUrl;\n    this.logoSrc = '';\n    this.CCC = '';\n    this.DBAName = '';\n    this.DOT = '';\n    this.EIN = '';\n    this.MC = '';\n    this.SCAC = '';\n    this.CSA = false;\n    this.CTPAT = false;\n    this.PIP = false;\n    this.cargoInsurance = '';\n    this.email = '';\n    this.userName = '';\n    this.carrierName = '';\n    this.bizCountry = null; // carrierBusinessName = '';\n\n    this.findingWay = '';\n    this.firstName = '';\n    this.lastName = '';\n    this.liabilityInsurance = '';\n    this.password = '';\n    this.confirmPassword = '';\n    this.phone = '';\n    this.fax = '';\n    this.uploadedLogo = '';\n    this.referral = {\n      name: '',\n      company: '',\n      phone: '',\n      email: ''\n    };\n    this.fleets = {\n      curtainSide: 0,\n      dryVans: 0,\n      flatbed: 0,\n      reefers: 0,\n      totalFleets: 1,\n      trailers: 0,\n      trucks: 0\n    };\n    this.addressDetails = [{\n      addressType: 'yard',\n      defaultYard: false,\n      countryName: '',\n      countryCode: '',\n      stateCode: '',\n      stateName: '',\n      cityName: '',\n      zipCode: '',\n      address: '',\n      geoCords: {\n        lat: '',\n        lng: ''\n      },\n      manual: false,\n      states: [],\n      cities: []\n    }];\n    this.banks = [{\n      branchName: '',\n      accountNumber: '',\n      transitNumber: '',\n      routingNumber: '',\n      institutionNumber: '',\n      addressDetails: [{\n        addressType: '',\n        countryName: '',\n        countryCode: '',\n        stateCode: '',\n        stateName: '',\n        cityName: '',\n        zipCode: '',\n        address: '',\n        geoCords: {\n          lat: '',\n          lng: ''\n        },\n        manual: false,\n        bankStates: [],\n        bankCities: []\n      }]\n    }];\n    this.yardDefault = false;\n    this.searchTerm = new Subject();\n    this.statesObject = {};\n    this.countriesObject = {};\n    this.citiesObject = {};\n    this.newAddress = [];\n    this.addressCountries = [];\n    this.deletedAddress = [];\n    this.uploadedPhotos = [];\n    this.showAddress = false;\n    this.countries = [];\n    this.states = [];\n    this.cities = [];\n    this.errors = {};\n    this.response = '';\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.Error = '';\n    this.Success = '';\n    this.existingPhotos = [];\n    this.submitDisabled = false;\n    this.uploadedPicture = '';\n    this.subCompIDs = [];\n    this.subCompInfo = [];\n    this.selectedFileNames = new Map();\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.searchLocation(); // search location on keyup\n\n\n      _this.companyID = _this.route.snapshot.params[`carrierID`];\n\n      if (_this.companyID) {\n        yield _this.fetchCarrier();\n      } // $(document).ready(() => {\n      //   this.companyForm = $('#companyForm').validate();\n      // });\n\n    })();\n  }\n\n  headerComponentFunction() {\n    this.headerFnService.callHeaderFn();\n  }\n\n  fetchCarrier() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.apiService.getData(`carriers/${_this2.companyID}`).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (result) {\n          _this2.carriers = result.Items[0];\n          _this2.carrierID = _this2.carriers.carrierID;\n          _this2.CCC = _this2.carriers.CCC;\n          _this2.subCompIDs = _this2.carriers.subCompIDs ? _this2.carriers.subCompIDs : [];\n          _this2.subCompInfo = _this2.carriers.subCompInfo ? _this2.carriers.subCompInfo : [];\n          _this2.DBAName = _this2.carriers.DBAName;\n          _this2.DOT = _this2.carriers.DOT;\n          _this2.EIN = _this2.carriers.EIN;\n          _this2.MC = _this2.carriers.MC;\n          _this2.SCAC = _this2.carriers.SCAC;\n          _this2.CSA = _this2.carriers.CSA;\n          _this2.CTPAT = _this2.carriers.CTPAT;\n          _this2.PIP = _this2.carriers.PIP;\n          _this2.cargoInsurance = _this2.carriers.cargoInsurance;\n          _this2.email = _this2.carriers.email;\n          _this2.userName = _this2.carriers.userName;\n          _this2.carrierName = _this2.carriers.carrierName;\n          _this2.password = _this2.carriers.password, // carrierBusinessName = '';\n          _this2.findingWay = _this2.carriers.findingWay;\n          _this2.firstName = _this2.carriers.firstName;\n          _this2.lastName = _this2.carriers.lastName;\n          _this2.liabilityInsurance = _this2.carriers.liabilityInsurance;\n          _this2.phone = _this2.carriers.phone;\n          _this2.fax = _this2.carriers.fax;\n          _this2.bizCountry = _this2.carriers.bizCountry; // uploadedLogo = '';\n\n          _this2.fleets = {\n            curtainSide: _this2.carriers.fleets.curtainSide,\n            dryVans: _this2.carriers.fleets.dryVans,\n            flatbed: _this2.carriers.fleets.flatbed,\n            reefers: _this2.carriers.fleets.reefers,\n            totalFleets: _this2.carriers.fleets.totalFleets,\n            trailers: _this2.carriers.fleets.trailers,\n            trucks: _this2.carriers.fleets.trucks\n          };\n          _this2.addressDetails = _this2.carriers.addressDetails;\n\n          if (_this2.carriers.referral) {\n            _this2.referral.name = _this2.carriers.referral.name;\n            _this2.referral.email = _this2.carriers.referral.email;\n            _this2.referral.phone = _this2.carriers.referral.phone;\n            _this2.referral.company = _this2.carriers.referral.company;\n          }\n\n          if (_this2.carriers.addressDetails !== undefined) {\n            for (let a = 0; a < _this2.carriers.addressDetails.length; a++) {\n              const countryCode = _this2.carriers.addressDetails[a].countryCode;\n              const stateCode = _this2.carriers.addressDetails[a].stateCode;\n              yield _this2.fetchStates(countryCode, a);\n              yield _this2.fetchCities(countryCode, stateCode, a);\n            }\n          }\n\n          _this2.banks = _this2.carriers.banks;\n\n          if (_this2.banks !== undefined) {\n            for (let i = 0; i < _this2.carriers.banks.length; i++) {\n              for (let a = 0; a < _this2.carriers.banks[i].addressDetails.length; a++) {\n                if (_this2.carriers.banks[i].addressDetails[a].address !== '') {\n                  const countryCode = _this2.carriers.banks[i].addressDetails[a].countryCode;\n                  const stateCode = _this2.carriers.banks[i].addressDetails[a].stateCode;\n                  yield _this2.fetchBankStates(countryCode, a, i);\n                  yield _this2.fetchBankCities(countryCode, stateCode, a, i);\n                }\n              }\n            }\n          }\n\n          _this2.uploadedLogo = _this2.carriers.uploadedLogo;\n          _this2.logoSrc = `${_this2.Asseturl}/${_this2.carriers.carrierID}/${_this2.carriers.uploadedLogo}`;\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  } // UPDATE PART\n\n  /**\r\n    * address\r\n    */\n\n\n  defaultYardFn(e, index) {\n    if (e === true) {\n      this.addressDetails[index].defaultYard = true;\n      this.yardDefault = true;\n    }\n\n    for (let i = 0; i < this.addressDetails.length; i++) {\n      if (i !== index) {\n        this.addressDetails[i].defaultYard = false;\n      }\n    }\n\n    if (e === false) {\n      this.addressDetails[index].defaultYard = false;\n    }\n  }\n\n  fetchStates(countryCode, index) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.addressDetails[index].states = yield _this3.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  fetchCities(countryCode, stateCode, index) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.addressDetails[index].cities = yield _this4.countryStateCity.GetCitiesByStateCodes(countryCode, stateCode);\n    })();\n  }\n\n  fetchBankStates(countryCode, index, bankIndex) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.banks[bankIndex].addressDetails[index].bankStates = yield _this5.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  fetchBankCities(countryCode, stateCode, index, bankIndex) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      _this6.banks[bankIndex].addressDetails[index].bankCities = yield _this6.countryStateCity.GetCitiesByStateCodes(countryCode, stateCode);\n    })();\n  }\n\n  clearUserLocation(i) {\n    this.addressDetails[i][`userLocation`] = '';\n    this.addressDetails[i][`addressID`] = '';\n    this.addressDetails[i].geoCords.lat = '';\n    this.addressDetails[i].geoCords.lng = '';\n    this.addressDetails[i].countryCode = '';\n    this.addressDetails[i].stateCode = '';\n    this.addressDetails[i].countryName = '';\n    this.addressDetails[i].stateName = '';\n    this.addressDetails[i].cityName = '';\n    this.addressDetails[i].zipCode = '';\n    this.addressDetails[i].address = '';\n    $('div').removeClass('show-search__result');\n  }\n\n  clearBankLocation(i, bankIndex) {\n    this.banks[bankIndex].addressDetails[i][`userLocation`] = '';\n    this.banks[bankIndex].addressDetails[i][`addressID`] = '';\n    this.banks[bankIndex].addressDetails[i].geoCords.lat = '';\n    this.banks[bankIndex].addressDetails[i].geoCords.lng = '';\n    this.banks[bankIndex].addressDetails[i].countryName = '';\n    this.banks[bankIndex].addressDetails[i].countryCode = '';\n    this.banks[bankIndex].addressDetails[i].stateCode = '';\n    this.banks[bankIndex].addressDetails[i].stateName = '';\n    this.banks[bankIndex].addressDetails[i].cityName = '';\n    this.banks[bankIndex].addressDetails[i].zipCode = '';\n    this.banks[bankIndex].addressDetails[i].address = '';\n    $('div').removeClass('show-search__result');\n  }\n\n  manAddress(event, i) {\n    if (event.target.checked) {\n      $(event.target).closest('.address-item').addClass('open');\n      this.addressDetails[i][`userLocation`] = '';\n      this.addressDetails[i].geoCords.lat = '';\n      this.addressDetails[i].geoCords.lng = '';\n      this.addressDetails[i].countryCode = '';\n      this.addressDetails[i].stateCode = '';\n      this.addressDetails[i].countryName = '';\n      this.addressDetails[i].stateName = '';\n      this.addressDetails[i].cityName = '';\n      this.addressDetails[i].zipCode = '';\n      this.addressDetails[i].address = '';\n    } else {\n      $(event.target).closest('.address-item').removeClass('open');\n      this.addressDetails[i][`userLocation`] = '';\n      this.addressDetails[i].geoCords.lat = '';\n      this.addressDetails[i].geoCords.lng = '';\n      this.addressDetails[i].countryCode = '';\n      this.addressDetails[i].stateCode = '';\n      this.addressDetails[i].countryName = '';\n      this.addressDetails[i].stateName = '';\n      this.addressDetails[i].cityName = '';\n      this.addressDetails[i].zipCode = '';\n      this.addressDetails[i].address = '';\n    }\n  }\n\n  manBankAddress(event, i, bankIndex) {\n    if (event.target.checked) {\n      $(event.target).closest('.address-item').addClass('open');\n      this.banks[bankIndex].addressDetails[i][`userLocation`] = '';\n      this.banks[bankIndex].addressDetails[i].geoCords.lat = '';\n      this.banks[bankIndex].addressDetails[i].geoCords.lng = '';\n      this.banks[bankIndex].addressDetails[i].countryCode = '';\n      this.banks[bankIndex].addressDetails[i].stateCode = '';\n      this.banks[bankIndex].addressDetails[i].countryName = '';\n      this.banks[bankIndex].addressDetails[i].stateName = '';\n      this.banks[bankIndex].addressDetails[i].cityName = '';\n      this.banks[bankIndex].addressDetails[i].zipCode = '';\n      this.banks[bankIndex].addressDetails[i].address = '';\n    } else {\n      $(event.target).closest('.address-item').removeClass('open');\n      this.banks[bankIndex].addressDetails[i][`userLocation`] = '';\n      this.banks[bankIndex].addressDetails[i].geoCords.lat = '';\n      this.banks[bankIndex].addressDetails[i].geoCords.lng = '';\n      this.banks[bankIndex].addressDetails[i].countryCode = '';\n      this.banks[bankIndex].addressDetails[i].stateCode = '';\n      this.banks[bankIndex].addressDetails[i].countryName = '';\n      this.banks[bankIndex].addressDetails[i].stateName = '';\n      this.banks[bankIndex].addressDetails[i].cityName = '';\n      this.banks[bankIndex].addressDetails[i].zipCode = '';\n      this.banks[bankIndex].addressDetails[i].address = '';\n    }\n  }\n\n  getAddressDetail(id) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this7.apiService.getData(`pcMiles/detail/${id}`).toPromise();\n      return result;\n    })();\n  }\n\n  getStates(countryCode, index) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.addressDetails[index].stateCode = '';\n      _this8.addressDetails[index].cityName = '';\n      _this8.addressDetails[index].states = yield _this8.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  getCities(stateCode, index, countryCode) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      _this9.addressDetails[index].cityName = '';\n      _this9.addressDetails[index].countryName = yield _this9.countryStateCity.GetSpecificCountryNameByCode(countryCode);\n      _this9.addressDetails[index].stateName = yield _this9.countryStateCity.GetStateNameFromCode(stateCode, countryCode);\n      _this9.addressDetails[index].cities = yield _this9.countryStateCity.GetCitiesByStateCodes(countryCode, stateCode);\n    })();\n  }\n\n  getBankStates(countryCode, index, bankIndex) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      _this10.banks[bankIndex].addressDetails[index].stateCode = '';\n      _this10.banks[bankIndex].addressDetails[index].cityName = '';\n      _this10.banks[bankIndex].addressDetails[index].bankStates = yield _this10.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  getBankCities(stateCode, index, countryCode, bankIndex) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      _this11.banks[bankIndex].addressDetails[index].cityName = '';\n      _this11.banks[bankIndex].addressDetails[index].countryName = yield _this11.countryStateCity.GetSpecificCountryNameByCode(countryCode);\n      _this11.banks[bankIndex].addressDetails[index].stateName = yield _this11.countryStateCity.GetStateNameFromCode(stateCode, countryCode);\n      _this11.banks[bankIndex].addressDetails[index].bankCities = yield _this11.countryStateCity.GetCitiesByStateCodes(countryCode, stateCode);\n    })();\n  }\n\n  addAddress() {\n    if (this.addressDetails.length === 6) {\n      // to restrict to add max 6 addresses, can increase in future by changing this value only\n      this.toaster.warning('Maximum 6 addresses are allowed.');\n    } else {\n      this.addressDetails.push({\n        addressType: '',\n        defaultYard: false,\n        countryName: '',\n        countryCode: '',\n        stateCode: '',\n        stateName: '',\n        cityName: '',\n        zipCode: '',\n        address: '',\n        geoCords: {\n          lat: '',\n          lng: ''\n        },\n        manual: false,\n        states: [],\n        cities: []\n      });\n    }\n  }\n\n  remove(obj, i, addressID = null) {\n    if (obj === 'address') {\n      this.addressDetails.splice(i, 1);\n    }\n  }\n\n  searchLocation() {\n    let target;\n    this.searchTerm.pipe(map(e => {\n      $('.map-search__results').hide();\n      $(e.target).closest('div').addClass('show-search__result');\n      return e.target.value;\n    }), debounceTime(400), distinctUntilChanged(), switchMap(term => {\n      return this.HereMap.searchEntries(term);\n    }), catchError(e => {\n      return throwError(e);\n    })).subscribe(res => {\n      this.searchResults = res;\n    });\n  }\n\n  setYardDefault(event, index) {\n    if (event === 'mailing') {\n      this.addressDetails[index].defaultYard = false;\n    }\n  }\n\n  userAddress(i, item) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      _this12.addressDetails[i][`userLocation`] = item.address;\n      const result = yield _this12.getAddressDetail(item.place_id);\n\n      if (result !== undefined) {\n        _this12.addressDetails[i].geoCords.lat = result.position.lat;\n        _this12.addressDetails[i].geoCords.lng = result.position.lng;\n        _this12.addressDetails[i].countryName = result.address.CountryFullName;\n        _this12.addressDetails[i].countryCode = result.address.Country;\n        _this12.addressDetails[i].stateCode = result.address.State;\n        _this12.addressDetails[i].stateName = result.address.StateName;\n        _this12.addressDetails[i].cityName = result.address.City;\n        _this12.addressDetails[i].zipCode = result.address.Zip;\n        _this12.addressDetails[i].address = result.address.StreetAddress;\n        $('div').removeClass('show-search__result');\n      }\n    })();\n  }\n\n  cancel() {\n    this.location.back(); // <-- go back to previous location on cancel\n  }\n\n  bankAddress(i, item, bankIndex) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      _this13.banks[bankIndex].addressDetails[i][`userLocation`] = item.address;\n      const result = yield _this13.getAddressDetail(item.place_id);\n\n      if (result !== undefined) {\n        _this13.banks[bankIndex].addressDetails[i].geoCords.lat = result.position.lat;\n        _this13.banks[bankIndex].addressDetails[i].geoCords.lng = result.position.lng;\n        _this13.banks[bankIndex].addressDetails[i].countryName = result.address.CountryFullName;\n        _this13.banks[bankIndex].addressDetails[i].countryCode = result.address.Country;\n        _this13.banks[bankIndex].addressDetails[i].stateCode = result.address.State;\n        _this13.banks[bankIndex].addressDetails[i].stateName = result.address.StateName;\n        _this13.banks[bankIndex].addressDetails[i].cityName = result.address.City;\n        _this13.banks[bankIndex].addressDetails[i].zipCode = result.address.Zip;\n        _this13.banks[bankIndex].addressDetails[i].address = result.address.StreetAddress;\n        $('div').removeClass('show-search__result');\n      }\n    })();\n  }\n\n  onUpdateCarrier() {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      _this14.hasError = false;\n      _this14.hasSuccess = false;\n      _this14.submitDisabled = true;\n\n      _this14.hideErrors();\n\n      for (let i = 0; i < _this14.addressDetails.length; i++) {\n        const element = _this14.addressDetails[i];\n        delete element.states;\n        delete element.cities;\n\n        if (element.countryCode !== '' && element.stateCode !== '' && element.cityName !== '') {\n          let fullAddress = `${element.address} ${element.cityName}\n    ${element.stateCode} ${element.countryCode}`;\n          let result = yield _this14.HereMap.geoCode(fullAddress);\n\n          if (result.items.length > 0) {\n            result = result.items[0];\n            element.geoCords.lat = result.position.lat;\n            element.geoCords.lng = result.position.lng;\n          }\n        }\n      }\n\n      for (const op of _this14.banks) {\n        for (const addressElement of op.addressDetails) {\n          delete addressElement.bankStates;\n          delete addressElement.bankCities;\n\n          if (addressElement.countryCode !== '' && addressElement.stateCode !== '' && addressElement.cityName !== '') {\n            const fullAddress = `${addressElement.address} ${addressElement.cityName}\n      ${addressElement.stateCode} ${addressElement.countryCode}`;\n            let result = yield _this14.HereMap.geoCode(fullAddress);\n\n            if (result.items.length > 0) {\n              result = result.items[0];\n              addressElement.geoCords.lat = result.position.lat;\n              addressElement.geoCords.lng = result.position.lng;\n            }\n          }\n        }\n      }\n\n      const getYardDefault = _this14.addressDetails.filter(address => {\n        return address.defaultYard === true;\n      });\n\n      if (getYardDefault.length === 0) {\n        _this14.yardDefault = false;\n      } else {\n        _this14.yardDefault = true;\n      }\n\n      for (let i = 0; i < _this14.addressDetails.length; i++) {\n        if (_this14.addressDetails[i].addressType === 'yard') {\n          if (_this14.addressDetails[i].manual) {\n            if (_this14.addressDetails[i].countryCode !== '' && _this14.addressDetails[i].stateCode !== '' && _this14.addressDetails[i].cityName !== '' && _this14.addressDetails[i].zipCode !== '' && _this14.addressDetails[i].address !== '') {\n              _this14.yardAddress = true;\n            }\n          } else if (!_this14.addressDetails[i].manual) {\n            if (_this14.addressDetails[i][`userLocation`] !== '') {\n              _this14.yardAddress = true;\n            }\n          }\n\n          break;\n        } else {\n          _this14.yardAddress = false;\n        }\n      }\n\n      if (_this14.yardAddress && _this14.yardDefault) {\n        const data = {\n          carrierID: _this14.carrierID,\n          entityType: 'carrier',\n          CCC: _this14.CCC,\n          DBAName: _this14.DBAName,\n          DOT: _this14.DOT,\n          EIN: _this14.EIN,\n          MC: _this14.MC,\n          SCAC: _this14.SCAC,\n          cargoInsurance: _this14.cargoInsurance,\n          email: _this14.email,\n          userName: _this14.userName,\n          CTPAT: _this14.CTPAT,\n          CSA: _this14.CSA,\n          PIP: _this14.PIP,\n          carrierName: _this14.carrierName.trim(),\n          findingWay: _this14.findingWay,\n          firstName: _this14.firstName,\n          lastName: _this14.lastName,\n          liabilityInsurance: _this14.liabilityInsurance,\n          password: _this14.password,\n          bizCountry: _this14.bizCountry,\n          addressDetails: _this14.addressDetails,\n          phone: _this14.phone,\n          fax: _this14.fax,\n          termsTruck: _this14.carriers.termsTruck,\n          termsCarrier: _this14.carriers.termsCarrier,\n          notesFactor: _this14.carriers.notesFactor,\n          notesBol: _this14.carriers.notesBol,\n          termsCustom: _this14.carriers.termsCustom,\n          notesDriver: _this14.carriers.notesDriver,\n          tagLine: _this14.carriers.tagLine,\n          fleets: {\n            curtainSide: _this14.fleets.curtainSide,\n            dryVans: _this14.fleets.dryVans,\n            flatbed: _this14.fleets.flatbed,\n            reefers: _this14.fleets.reefers,\n            totalFleets: _this14.fleets.totalFleets,\n            trailers: _this14.fleets.trailers,\n            trucks: _this14.fleets.trucks\n          },\n          banks: _this14.banks,\n          uploadedLogo: _this14.uploadedLogo,\n          subCompIDs: _this14.subCompIDs,\n          subCompInfo: _this14.subCompInfo\n        };\n\n        if (_this14.findingWay == \"Referral\") {\n          data[\"referral\"] = _this14.referral;\n        }\n\n        if (data.bizCountry === 'CA') {\n          data.MC = null;\n          data.DOT = null;\n        } // create form data instance\n\n\n        const formData = new FormData(); // append photos if any\n\n        for (let i = 0; i < _this14.uploadedPhotos.length; i++) {\n          formData.append('uploadedPhotos', _this14.uploadedPhotos[i]);\n        } // append other fields\n\n\n        formData.append('data', JSON.stringify(data));\n\n        _this14.apiService.putData('carriers', formData, true).subscribe({\n          complete: () => {},\n          error: err => {\n            from(err.error).pipe(map(val => {\n              // val.message = val.message.replace(/\".*\"/, 'This Field');\n              _this14.errors[val.context.key] = val.message;\n            })).subscribe({\n              complete: () => {\n                _this14.throwErrors();\n\n                _this14.submitDisabled = false;\n              },\n              error: () => {\n                _this14.submitDisabled = false;\n              },\n              next: () => {}\n            });\n          },\n          next: res => {\n            _this14.response = res;\n            _this14.submitDisabled = false;\n\n            _this14.toaster.success('Carrier updated successfully.');\n\n            _this14.cancel();\n\n            _this14.updateUser();\n          }\n        });\n      } else {\n        _this14.toaster.error('Yard address is mandatory and atleast one yard as default is mandatory');\n\n        _this14.submitDisabled = false;\n      }\n    })();\n  }\n\n  updateUser() {\n    let currentLoggedUserName = localStorage.getItem('currentLoggedUserName'); //  if(currentLoggedUserName == this.userName){\n\n    let currentUser = `${this.firstName} ${this.lastName}`;\n    const outputName = currentUser.match(/\\b(\\w)/g);\n    let smallName = outputName.join('');\n    localStorage.setItem('currentUserName', currentUser);\n    localStorage.setItem('nickName', smallName);\n    this.headerComponentFunction(); //  }\n  }\n\n  throwErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      if (v === 'carrierName') {\n        $('[name=\"' + v + '\"]').after('<label id=\"' + v + '-error\" class=\"error\" for=\"' + v + '\">' + this.errors[v] + '</label>').addClass('error');\n      }\n    });\n  }\n\n  hideErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      $('[name=\"' + v + '\"]').removeClass('error').next().remove('label');\n    });\n    this.errors = {};\n  }\n\n  selectPhoto(event) {\n    let files = [...event.target.files];\n\n    for (let i = 0; i < files.length; i++) {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        this.uploadedPicture = e.target.result;\n      };\n\n      reader.readAsDataURL(files[i]);\n    }\n\n    this.uploadedLogo = '';\n    this.logoSrc = '';\n    this.uploadedPhotos = [];\n    this.uploadedPhotos.push(files[0]);\n  }\n\n  deleteLogo() {\n    if (confirm('Are you sure you want to delete logo?') === true) {\n      this.apiService.deleteData(`carriers/uploadDelete/${this.carrierID}/${this.uploadedLogo}`).subscribe(result => {\n        this.toaster.success('Image Deleted Successfully');\n        this.uploadedPhotos = [];\n        this.uploadedLogo = '';\n        this.logoSrc = '';\n      });\n    }\n  }\n\n};\n\nEditProfileComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ToastrService\n}, {\n  type: InvokeHeaderFnService\n}, {\n  type: ActivatedRoute\n}, {\n  type: Location\n}, {\n  type: HereMapService\n}, {\n  type: CountryStateCityService\n}];\n\nEditProfileComponent.propDecorators = {\n  cForm: [{\n    type: ViewChild,\n    args: [\"cForm\"]\n  }]\n};\nEditProfileComponent = __decorate([Component({\n  selector: 'app-edit-profile',\n  template: __NG_CLI_RESOURCE__0,\n  exportAs: 'cForm',\n  styles: [__NG_CLI_RESOURCE__1]\n})], EditProfileComponent);\nexport { EditProfileComponent };","map":null,"metadata":{},"sourceType":"module"}