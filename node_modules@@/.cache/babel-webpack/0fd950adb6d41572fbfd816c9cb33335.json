{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./vendor-credit-note-detail.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./vendor-credit-note-detail.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport Constants from \"src/app/pages/fleet/constants\";\nimport { AccountService, ApiService } from \"src/app/services\";\nlet VendorCreditNoteDetailComponent = class VendorCreditNoteDetailComponent {\n  constructor(accountService, apiService, route, toaster) {\n    this.accountService = accountService;\n    this.apiService = apiService;\n    this.route = route;\n    this.toaster = toaster;\n    this.dataMessage = Constants.NO_RECORDS_FOUND;\n    this.crDetails = [];\n    this.transactionLog = [];\n    this.purchaseOrders = [];\n    this.vendors = [];\n    this.docs = [];\n  }\n\n  ngOnInit() {\n    this.creditID = this.route.snapshot.params[`creditID`];\n\n    if (this.creditID) {\n      this.fetchCredit();\n    }\n\n    this.fetchVendors();\n    this.fetchPurchaseOrders();\n  }\n\n  fetchCredit() {\n    this.accountService.getData(`vendor-credits/detail/${this.creditID}`).subscribe(res => {\n      let result = res[0];\n      this.purOrder = result.purOrder;\n      console.log(\"purOrder\", this.purOrder);\n      this.currency = result.currency;\n      this.crRef = result.crRef;\n      this.txnDate = result.txnDate;\n      this.vCrNo = result.vCrNo;\n      this.vendorID = result.vendorID;\n      this.crDetails = result.crDetails;\n      this.remarks = result.remarks;\n      this.status = result.status;\n      this.totalAmt = result.totalAmt;\n      this.transactionLog = result.transactionLog;\n\n      if (result.docs.length > 0) {\n        result.docs.forEach(x => {\n          let obj = {};\n\n          if (x.storedName.split(\".\")[1] === \"jpg\" || x.storedName.split(\".\")[1] === \"png\" || x.storedName.split(\".\")[1] === \"jpeg\") {\n            obj = {\n              imgPath: `${x.urlPath}`,\n              docPath: `${x.urlPath}`,\n              displayName: x.displayName,\n              name: x.storedName,\n              ext: x.storedName.split(\".\")[1]\n            };\n          } else {\n            obj = {\n              imgPath: \"assets/img/icon-pdf.png\",\n              docPath: `${x.urlPath}`,\n              displayName: x.displayName,\n              name: x.storedName,\n              ext: x.storedName.split(\".\")[1]\n            };\n          }\n\n          this.docs.push(obj);\n        });\n      }\n    });\n  }\n\n  fetchVendors() {\n    this.apiService.getData(`contacts/get/list/vendor`).subscribe(result => {\n      this.vendors = result;\n    });\n  }\n\n  fetchPurchaseOrders() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this.accountService.getData(`purchase-orders/get/list`).toPromise();\n      _this.purchaseOrders = result;\n    })();\n  }\n\n  deleteDocument(name, index) {\n    if (confirm('Are you sure you want to delete?') === true) {\n      this.accountService.deleteData(`vendor-credits/uploadDelete/${this.creditID}/${name}`).subscribe(result => {\n        this.docs.splice(index, 1);\n        this.toaster.success(\"Attachment deleted successfully.\");\n      });\n    }\n  }\n\n};\n\nVendorCreditNoteDetailComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ApiService\n}, {\n  type: ActivatedRoute\n}, {\n  type: ToastrService\n}];\n\nVendorCreditNoteDetailComponent = __decorate([Component({\n  selector: \"app-vendor-credit-note-detail\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], VendorCreditNoteDetailComponent);\nexport { VendorCreditNoteDetailComponent };","map":null,"metadata":{},"sourceType":"module"}