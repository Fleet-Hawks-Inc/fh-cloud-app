{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./settlements-detail.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./settlements-detail.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport Constants from \"src/app/pages/fleet/constants\";\nimport { AccountService, ApiService, ListService } from \"src/app/services\";\nlet SettlementsDetailComponent = class SettlementsDetailComponent {\n  constructor(accountService, route, apiService, listService) {\n    this.accountService = accountService;\n    this.route = route;\n    this.apiService = apiService;\n    this.listService = listService;\n    this.noRecordMsg = Constants.NO_RECORDS_FOUND;\n    this.settlementID = \"\";\n    this.driverDetail = {\n      firstName: \"\",\n      lastName: \"\",\n      paymentDetails: {\n        paymentType: \"\"\n      }\n    };\n    this.settlementData = {\n      type: null,\n      entityId: null,\n      entityName: \"\",\n      setNo: \"\",\n      txnDate: \"\",\n      fromDate: null,\n      toDate: null,\n      prStart: null,\n      prEnd: null,\n      tripIds: [],\n      tripNames: [],\n      trpData: [],\n      miles: {\n        tripsTotal: 0,\n        driverTotal: 0,\n        tripsLoaded: 0,\n        driverLoaded: 0,\n        tripsEmpty: 0,\n        driverEmpty: 0,\n        tripsTeam: 0,\n        driverHours: 0,\n        teamHours: 0,\n        totalHours: 0,\n        drivers: [],\n        driverLoadedTeam: 0,\n        driverEmptyTeam: 0\n      },\n      addition: [],\n      deduction: [],\n      additionTotal: 0,\n      deductionTotal: 0,\n      taxObj: {\n        gstPrcnt: 0,\n        pstPrcnt: 0,\n        hstPrcnt: 0,\n        gstAmount: 0,\n        pstAmount: 0,\n        hstAmount: 0,\n        carrLocalTax: 0,\n        carrLocalAmount: 0,\n        carrFedTax: 0,\n        carrFedAmount: 0\n      },\n      paymentTotal: 0,\n      taxes: 0,\n      subTotal: 0,\n      finalTotal: 0,\n      fuelAdd: 0,\n      fuelDed: 0,\n      status: \"unpaid\",\n      paymentLinked: false,\n      pendingPayment: 0,\n      currency: \"CAD\",\n      paymentInfo: {\n        lMiles: 0,\n        lMileTeam: 0,\n        eMileTeam: 0,\n        rate: 0,\n        eMiles: 0,\n        pRate: 0,\n        dRate: 0,\n        pType: \"\"\n      },\n      fuelIds: [],\n      fuelData: [],\n      transactionLog: [],\n      isFeatEnabled: false\n    };\n    this.expenses = [];\n    this.tripsObj = [];\n    this.accounts = [];\n    this.operatorDetail = {\n      cName: \"\"\n    };\n    this.entityName = \"\";\n    this.entityPaymentType = \"\";\n    this.accountsObjects = {};\n    this.accountsIntObjects = {};\n    this.payments = [];\n    this.showModal = true;\n    this.selectedFuelEnteries = [];\n    this.showDetailBtn = false;\n    this.carrierID = \"\";\n  }\n\n  ngOnInit() {\n    this.settlementID = this.route.snapshot.params[`settlementID`];\n    this.fetchSettlementDetail(); // this.fetchTrips();\n    // this.fetchAccountsByIDs();\n    // this.fetchAccountsByInternalIDs();\n\n    this.fetchPayments();\n  }\n\n  fetchSettlementDetail() {\n    this.accountService.getData(`settlement/detail/${this.settlementID}`).subscribe(result => {\n      this.settlementData = result[0];\n\n      if (!this.settlementData.prStart && !this.settlementData.prEnd) {\n        this.settlementData.prStart = this.settlementData.fromDate;\n        this.settlementData.prEnd = this.settlementData.toDate;\n      }\n\n      if (!this.settlementData.isFeatEnabled) {\n        this.fetchAccountsByIDs();\n        this.fetchAccountsByInternalIDs();\n      }\n\n      this.settlementData.transactionLog.map(v => {\n        v.type = v.type.replace(\"_\", \" \");\n      });\n\n      if (this.settlementData.paymentInfo) {\n        this.entityPaymentType = this.settlementData.paymentInfo.pType;\n      }\n\n      this.entityName = this.settlementData.entityName;\n      this.fetchSelectedFuelExpenses();\n      this.carrierID = result[0].pk;\n    });\n  }\n\n  fetchAccountsByIDs() {\n    this.accountService.getData(\"chartAc/get/list/all\").subscribe(result => {\n      this.accountsObjects = result;\n    });\n  }\n\n  fetchAccountsByInternalIDs() {\n    this.accountService.getData(\"chartAc/get/internalID/list/all\").subscribe(result => {\n      this.accountsIntObjects = result;\n    });\n  }\n\n  fetchPayments() {\n    this.accountService.getData(`driver-payments/settlement/${this.settlementID}`).subscribe(result => {\n      result.map(v => {\n        let obj = {\n          paymentNo: v.paymentNo,\n          txnDate: v.txnDate,\n          amount: 0\n        };\n        v.settlData.map(k => {\n          if (k.settlementId === this.settlementID) {\n            obj.amount += Number(k.paidAmount);\n          }\n        });\n        this.payments.push(obj);\n        this.payments.sort((a, b) => {\n          return new Date(a.txnDate).valueOf() - new Date(b.txnDate).valueOf();\n        });\n      });\n    });\n  }\n\n  showPreviewModal() {\n    this.showModal = true;\n    let obj = {\n      showModal: this.showModal,\n      settlementData: this.settlementData,\n      entityName: this.entityName,\n      fuelEnteries: this.selectedFuelEnteries\n    };\n    this.listService.showSettlementsDetailPreview(obj);\n  }\n\n  fetchSelectedFuelExpenses() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.settlementData.fuelIds.length > 0) {\n        let fuelIDs = encodeURIComponent(JSON.stringify(_this.settlementData.fuelIds));\n        let result = yield _this.apiService.getData(`fuelEntries/get/selected/ids?fuel=${fuelIDs}`).toPromise();\n        _this.showDetailBtn = true;\n        result.map(k => {\n          k.fuelID = k.data.fuelID;\n          k.fuelDate = k.data.date;\n          k.cityName = k.data.city;\n          k.locationCountry = k.data.country;\n          k.fuelCardNumber = k.data.cardNo;\n          k.unitOfMeasure = k.data.uom;\n          k.subTotal = k.data.amt;\n          k.billingCurrency = k.data.currency;\n          k.type = k.data.type;\n\n          _this.settlementData.fuelData.map(v => {\n            if (v.fuelID === k.fuelID) {\n              k.action = v.action === \"add\" ? \"Added\" : \"Deducted\";\n\n              if (v.convert) {\n                k.convert = v.convert;\n                k.total = v.actAmount;\n                k.convertRate = v.convertRate;\n                k.currency = _this.settlementData.currency;\n                k.subTotal = v.amount;\n              } else {\n                k.convert = false;\n              }\n            }\n          });\n        });\n        _this.selectedFuelEnteries = result;\n\n        _this.selectedFuelEnteries.sort(function compare(a, b) {\n          let dateA = new Date(a.fuelDate);\n          let dateB = new Date(b.fuelDate);\n          return dateA - dateB;\n        });\n      } else {\n        _this.showDetailBtn = true;\n      }\n    })();\n  }\n\n};\n\nSettlementsDetailComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ActivatedRoute\n}, {\n  type: ApiService\n}, {\n  type: ListService\n}];\n\nSettlementsDetailComponent = __decorate([Component({\n  selector: \"app-settlements-detail\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], SettlementsDetailComponent);\nexport { SettlementsDetailComponent };","map":null,"metadata":{},"sourceType":"module"}