{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./add-assets.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./add-assets.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ApiService, DashboardUtilityService } from \"../../../../services\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { formatDate } from \"@angular/common\";\nimport { map } from \"rxjs/operators\";\nimport { from } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { NgbCalendar, NgbDateAdapter } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Location } from \"@angular/common\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ListService } from \"../../../../services/list.service\";\nimport * as moment from \"moment\";\nimport { CountryStateCityService } from \"src/app/services/country-state-city.service\";\nlet AddAssetsComponent = class AddAssetsComponent {\n  constructor(apiService, route, router, ngbCalendar, dateAdapter, location, toastr, listService, spinner, domSanitizer, httpClient, countryStateCity, dashboardUtilityService) {\n    this.apiService = apiService;\n    this.route = route;\n    this.router = router;\n    this.ngbCalendar = ngbCalendar;\n    this.dateAdapter = dateAdapter;\n    this.location = location;\n    this.toastr = toastr;\n    this.listService = listService;\n    this.spinner = spinner;\n    this.domSanitizer = domSanitizer;\n    this.httpClient = httpClient;\n    this.countryStateCity = countryStateCity;\n    this.dashboardUtilityService = dashboardUtilityService;\n    this.Asseturl = this.apiService.AssetUrl;\n    this.errors = {};\n    this.quantumSelected = \"\";\n    this.pDocs = [];\n    this.lDocs = [];\n    this.assetsData = {\n      isTemp: false,\n      inspectionFormID: \"\",\n      assetIdentification: \"\",\n      groupID: null,\n      VIN: \"\",\n      startDate: moment().format(\"YYYY-MM-DD\"),\n      assetType: null,\n      currentStatus: \"active\",\n      createdDate: \"\",\n      createdTime: \"\",\n      assetDetails: {\n        year: null,\n        manufacturer: null,\n        model: null,\n        length: 0,\n        lengthUnit: null,\n        height: \"\",\n        heightUnit: null,\n        axle: \"\",\n        GVWR: \"\",\n        GVWR_Unit: null,\n        GAWR: \"\",\n        GAWR_Unit: null,\n        ownerShip: null,\n        ownerOperator: null,\n        ownCname: \"\",\n        ownAmt: \"\",\n        ownCurr: \"\",\n        ownDate: \"\",\n        ownRec: true,\n        ownFrq: \"\",\n        licenceCountryCode: null,\n        licenceStateCode: null,\n        licencePlateNumber: \"\",\n        annualSafetyDate: \"\",\n        annualSafetyReminder: true,\n        remarks: \"\"\n      },\n      insuranceDetails: {\n        dateOfIssue: null,\n        premiumAmount: \"\",\n        premiumCurrency: null,\n        dateOfExpiry: null,\n        reminderBefore: \"\",\n        reminderBeforeUnit: \"\",\n        vendor: null\n      },\n      purchase: {\n        purchaseVendorID: null,\n        warrantyExpirationDate: null,\n        warrantyExpirationDateReminder: false,\n        purchasePrice: \"\",\n        purchasePriceCurrency: null,\n        warrantyExpirationMeter: \"\",\n        purchaseDate: null,\n        purchaseComments: \"\",\n        purchaseOdometer: \"\",\n        gstInc: true\n      },\n      loan: {\n        loanVendorID: null,\n        amountOfLoan: \"\",\n        amountOfLoanCurrency: null,\n        aspiration: \"\",\n        annualPercentageRate: \"\",\n        gstInc: true,\n        downPayment: \"\",\n        downPaymentCurrency: null,\n        dateOfLoan: null,\n        monthlyPayment: \"\",\n        monthlyPaymentCurrency: null,\n        firstPaymentDate: \"\",\n        numberOfPayments: \"\",\n        loadEndDate: null,\n        accountNumber: \"\",\n        generateExpenses: \"\",\n        notes: \"\",\n        loanDueDate: null,\n        lReminder: true\n      },\n      crossBorderDetails: {\n        ACI_ID: \"\",\n        ACE_ID: \"\"\n      },\n      uploadedPhotos: [],\n      uploadedDocs: []\n    };\n    this.allAssets = [];\n    this.groupData = {\n      groupName: \"\",\n      groupType: \"assets\",\n      description: \"\",\n      groupMembers: []\n    };\n    this.vendors = [];\n    this.manufacturers = [];\n    this.models = [];\n    this.groups = [];\n    this.isRequired = true;\n    this.response = \"\";\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.Error = \"\";\n    this.Success = \"\";\n    this.imageError = \"\";\n    this.fileName = \"\";\n    this.states = [];\n    this.uploadedPhotos = [];\n    this.uploadedDocs = [];\n    this.existPDocs = [];\n    this.existLDocs = [];\n    this.purchaseDocs = [];\n    this.loanDocs = [];\n    this.existingPhotos = [];\n    this.existingDocs = [];\n    this.assetsImages = [];\n    this.assetsDocs = [];\n    this.inspectionForms = [];\n    this.pdfSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(\"\");\n    this.years = [];\n    this.ownOperators = [];\n    this.submitDisabled = false;\n    this.groupSubmitDisabled = false;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.editDisabled = false;\n    this.companyLabel = \"\";\n    this.isEdit = false;\n    this.groupsData = [];\n    this.retInterval = [{\n      value: 'weekly',\n      name: 'Weekly'\n    }, {\n      value: 'biweekly',\n      name: 'Biweekly'\n    }, {\n      value: 'monthly',\n      name: 'Monthly'\n    }, {\n      value: 'quarterly',\n      name: 'Quarterly'\n    }, {\n      value: 'annually',\n      name: 'Annually'\n    }, {\n      value: 'semi-monthly',\n      name: 'Semi-Monthly'\n    }];\n    this.selectedFileNames = new Map();\n  }\n\n  get today() {\n    return this.dateAdapter.toModel(this.ngbCalendar.getToday());\n  }\n\n  ngOnInit() {\n    this.getYears();\n    this.fetchManufacturers();\n    this.listService.fetchVendors();\n    this.listService.fetchOwnerOperators();\n    this.fetchAssets();\n    this.fetchInspectionForms();\n    this.assetID = this.route.snapshot.params[`assetID`];\n\n    if (this.assetID) {\n      this.pageTitle = \"Edit Asset\";\n      this.fetchAssetByID();\n    } else {\n      this.pageTitle = \"Add Asset\";\n    }\n\n    let vendorList = new Array();\n    this.getValidVendors(vendorList);\n    this.vendors = vendorList;\n    let operatorList = new Array();\n    this.getValidOperators(operatorList);\n    this.ownOperators = operatorList;\n    this.fetchGroupsList();\n  }\n\n  getValidVendors(vendorList) {\n    let ids = [];\n    this.listService.vendorList.forEach(element => {\n      element.forEach(element2 => {\n        if (element2.isDeleted === 0 && !ids.includes(element2.contactID)) {\n          vendorList.push(element2);\n          ids.push(element2.contactID);\n        }\n\n        if (element2.isDeleted === 1) {\n          if (element2.contactID === this.assetsData.insuranceDetails.vendor) {\n            this.assetsData.insuranceDetails.vendor = null;\n          }\n\n          if (element2.contactID === this.assetsData.purchase.purchaseVendorID) {\n            this.assetsData.purchase.purchaseVendorID = null;\n          }\n\n          if (element2.contactID === this.assetsData.loan.loanVendorID) {\n            this.assetsData.loan.loanVendorID = null;\n          }\n        }\n      });\n    });\n  }\n\n  getValidOperators(operatorsList) {\n    let ids = [];\n    this.listService.ownerOperatorList.forEach(element => {\n      element.forEach(element2 => {\n        if (element2.isDeleted === 0 && !ids.includes(element2.contactID)) {\n          operatorsList.push(element2);\n          ids.push(element2.contactID);\n        }\n\n        if (element2.isDeleted === 1 && this.assetsData.assetDetails.ownerOperator === element2.contactID) {\n          this.assetsData.assetDetails.ownerOperator = null;\n        }\n      });\n    });\n  }\n\n  fetchManufacturers() {\n    this.httpClient.get(\"assets/jsonFiles/assets/trailer.json\").subscribe(data => {\n      data.forEach(element => {\n        this.manufacturers.push(Object.keys(element)[0].toUpperCase());\n      });\n    });\n  }\n\n  fetchModels() {\n    this.models = [];\n    let manufacturer = \"\";\n\n    if (this.assetsData.assetDetails.manufacturer !== null) {\n      manufacturer = this.assetsData.assetDetails.manufacturer.toLowerCase();\n    }\n\n    this.httpClient.get(\"assets/jsonFiles/assets/trailer.json\").subscribe(data => {\n      data.forEach(element => {\n        let output = [];\n\n        if (element[manufacturer]) {\n          element[manufacturer].forEach(element => {\n            output.push(element.toUpperCase());\n          });\n          this.models = output;\n        }\n      });\n    });\n  }\n\n  getYears() {\n    var max = new Date().getFullYear() + 1,\n        min = 1991,\n        max = max;\n\n    for (var i = max; i >= min; i--) {\n      this.years.push(i);\n    }\n  }\n\n  cancel() {\n    this.location.back(); // <-- go back to previous location on cancel\n  }\n\n  resetModel() {\n    this.assetsData.assetDetails.model = \"\";\n    $(\"#assetSelect\").val(\"\");\n  }\n\n  getInspectionForms() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.fetchInspectionForms();\n    })();\n  }\n\n  fetchInspectionForms() {\n    this.apiService.getData(\"inspectionForms/type/asset\").subscribe(result => {\n      this.inspectionForms = result.Items;\n    });\n  }\n\n  openModal(unit) {\n    this.listService.triggerModal(unit);\n    localStorage.setItem(\"isOpen\", \"true\");\n    this.listService.changeButton(false);\n  }\n\n  refreshVendorData() {\n    this.listService.fetchVendors();\n  }\n\n  refreshOpData() {\n    this.listService.fetchOwnerOperators();\n  }\n\n  scrollError() {\n    let errorList;\n    setTimeout(() => {\n      errorList = document.getElementsByClassName(\"error\").length;\n\n      if (errorList > 0) {\n        let topPosition = $(\".error\").parent(\"div\").offset().top;\n        window.scrollTo({\n          top: topPosition - 200,\n          left: 0,\n          behavior: \"smooth\"\n        });\n      }\n    }, 1500);\n  }\n\n  changeComp(value) {\n    if (!this.assetID) {\n      if (value === \"interchange\") {\n        this.isRequired = false;\n        this.assetsData.assetDetails.annualSafetyDate = \"\";\n        this.assetsData.VIN = \"\";\n        this.assetsData.assetDetails.year = null;\n        this.assetsData.assetDetails.licenceCountryCode = null;\n        this.assetsData.assetDetails.licenceStateCode = null;\n      } else {\n        this.isRequired = true;\n      }\n    } else {\n      if (value === \"interchange\") {\n        this.isRequired = false;\n        this.isEdit = false;\n        this.assetsData.assetDetails.annualSafetyDate = \"\";\n        this.assetsData.VIN = \"\";\n        this.assetsData.assetDetails.year = null;\n        this.assetsData.assetDetails.licenceCountryCode = null;\n        this.assetsData.assetDetails.licenceStateCode = null;\n      } else if (this.isEdit) {\n        this.isRequired = true;\n        this.assetsData.VIN = \"\";\n        this.assetsData.assetDetails.year = null;\n        this.assetsData.assetDetails.licenceCountryCode = null;\n        this.assetsData.assetDetails.licenceStateCode = null;\n      } else {\n        this.isRequired = true;\n      }\n    }\n\n    if (value === 'rented') {\n      this.companyLabel = 'Rented';\n    } else if (value === 'leased') {\n      this.companyLabel = 'Leased';\n    }\n  }\n  /*\r\n   * Add new asset\r\n   */\n\n\n  onAddAsset() {\n    this.hideErrors();\n    this.submitDisabled = true;\n    const data = {\n      isTemp: false,\n      assetID: this.assetID,\n      assetIdentification: this.assetsData.assetIdentification,\n      groupID: this.assetsData.groupID,\n      VIN: this.assetsData.VIN,\n      startDate: this.assetsData.startDate,\n      inspectionFormID: this.assetsData.inspectionFormID,\n      assetType: this.assetsData.assetType,\n      currentStatus: this.assetsData.currentStatus,\n      assetDetails: {\n        year: this.assetsData.assetDetails.year,\n        manufacturer: this.assetsData.assetDetails.manufacturer ? this.assetsData.assetDetails.manufacturer : \"\",\n        model: this.assetsData.assetDetails.model ? this.assetsData.assetDetails.model : \"\",\n        length: this.assetsData.assetDetails.length,\n        lengthUnit: this.assetsData.assetDetails.lengthUnit,\n        height: this.assetsData.assetDetails.height,\n        heightUnit: this.assetsData.assetDetails.heightUnit,\n        axle: this.assetsData.assetDetails.axle,\n        GVWR: this.assetsData.assetDetails.GVWR,\n        GVWR_Unit: this.assetsData.assetDetails.GVWR_Unit,\n        GAWR: this.assetsData.assetDetails.GAWR,\n        GAWR_Unit: this.assetsData.assetDetails.GAWR_Unit,\n        ownerShip: this.assetsData.assetDetails.ownerShip,\n        ownCname: this.assetsData.assetDetails.ownCname,\n        ownAmt: this.assetsData.assetDetails.ownAmt,\n        ownCurr: this.assetsData.assetDetails.ownCurr,\n        ownDate: this.assetsData.assetDetails.ownDate,\n        ownRec: this.assetsData.assetDetails.ownRec,\n        ownFrq: this.assetsData.assetDetails.ownFrq,\n        ownerOperator: this.assetsData.assetDetails.ownerOperator,\n        licenceCountryCode: this.assetsData.assetDetails.licenceCountryCode,\n        licenceStateCode: this.assetsData.assetDetails.licenceStateCode,\n        licencePlateNumber: this.assetsData.assetDetails.licencePlateNumber,\n        annualSafetyDate: this.assetsData.assetDetails.annualSafetyDate,\n        annualSafetyReminder: this.assetsData.assetDetails.annualSafetyReminder,\n        remarks: this.assetsData.assetDetails.remarks\n      },\n      insuranceDetails: {\n        dateOfIssue: this.assetsData.insuranceDetails.dateOfIssue,\n        premiumAmount: this.assetsData.insuranceDetails.premiumAmount,\n        premiumCurrency: this.assetsData.insuranceDetails.premiumCurrency,\n        dateOfExpiry: this.assetsData.insuranceDetails.dateOfExpiry,\n        reminderBefore: this.assetsData.insuranceDetails.reminderBefore,\n        reminderBeforeUnit: this.assetsData.insuranceDetails.reminderBeforeUnit,\n        vendor: this.assetsData.insuranceDetails.vendor\n      },\n      purchase: {\n        purchaseVendorID: this.assetsData.purchase.purchaseVendorID,\n        warrantyExpirationDate: this.assetsData.purchase.warrantyExpirationDate,\n        warrantyExpirationDateReminder: this.assetsData.purchase.warrantyExpirationDateReminder,\n        purchasePrice: this.assetsData.purchase.purchasePrice,\n        purchasePriceCurrency: this.assetsData.purchase.purchasePriceCurrency,\n        warrantyExpirationMeter: this.assetsData.purchase.warrantyExpirationMeter,\n        purchaseDate: this.assetsData.purchase.purchaseDate,\n        purchaseComments: this.assetsData.purchase.purchaseComments,\n        purchaseOdometer: this.assetsData.purchase.purchaseOdometer,\n        gstInc: this.assetsData.purchase.gstInc\n      },\n      loan: {\n        loanVendorID: this.assetsData.loan.loanVendorID,\n        amountOfLoan: this.assetsData.loan.amountOfLoan,\n        amountOfLoanCurrency: this.assetsData.loan.amountOfLoanCurrency,\n        annualPercentageRate: this.assetsData.loan.annualPercentageRate,\n        gstInc: this.assetsData.loan.gstInc,\n        downPayment: this.assetsData.loan.downPayment,\n        downPaymentCurrency: this.assetsData.loan.downPaymentCurrency,\n        dateOfLoan: this.assetsData.loan.dateOfLoan,\n        monthlyPayment: this.assetsData.loan.monthlyPayment,\n        monthlyPaymentCurrency: this.assetsData.loan.monthlyPaymentCurrency,\n        numberOfPayments: this.assetsData.loan.numberOfPayments,\n        loadEndDate: this.assetsData.loan.loadEndDate,\n        generateExpenses: this.assetsData.loan.generateExpenses,\n        notes: this.assetsData.loan.notes,\n        loanDueDate: this.assetsData.loan.loanDueDate,\n        lReminder: this.assetsData.loan.lReminder\n      },\n      crossBorderDetails: {\n        ACE_ID: this.assetsData.crossBorderDetails.ACE_ID,\n        ACI_ID: this.assetsData.crossBorderDetails.ACI_ID\n      },\n      uploadedPhotos: this.uploadedPhotos,\n      uploadedDocs: this.uploadedDocs\n    };\n    data.assetDetails.year = data.assetDetails.ownerShip === \"interchange\" ? new Date().getFullYear().toString() : data.assetDetails.year;\n    let currentDate = new Date();\n    let formattedDate = formatDate(currentDate, \"yyyy-MM-dd\", \"en\");\n    data.assetDetails.annualSafetyDate = data.assetDetails.ownerShip === \"interchange\" ? formattedDate.toString() : data.assetDetails.annualSafetyDate;\n    data.assetDetails.annualSafetyReminder = data.assetDetails.ownerShip === \"interchange\" ? data.assetDetails.annualSafetyReminder === false : data.assetDetails.annualSafetyReminder;\n    data.VIN = data.assetDetails.ownerShip === \"interchange\" ? new Date().getTime().toString() : data.VIN; // create form data instance\n\n    const formData = new FormData(); // append photos if any\n\n    for (let i = 0; i < this.uploadedPhotos.length; i++) {\n      formData.append(\"uploadedPhotos\", this.uploadedPhotos[i]);\n    } // append docs if any\n\n\n    for (let j = 0; j < this.uploadedDocs.length; j++) {\n      formData.append(\"uploadedDocs\", this.uploadedDocs[j]);\n    } // append purchase docs if any\n\n\n    for (let k = 0; k < this.purchaseDocs.length; k++) {\n      formData.append(\"purchaseDocs\", this.purchaseDocs[k]);\n    } // append loan docs if any\n\n\n    for (let l = 0; l < this.loanDocs.length; l++) {\n      formData.append(\"loanDocs\", this.loanDocs[l]);\n    } // append other fields\n\n\n    formData.append(\"data\", JSON.stringify(data));\n    this.apiService.postData(\"assets\", formData, true).subscribe({\n      complete: () => {},\n      error: err => {\n        this.submitDisabled = false;\n        from(err.error).pipe(map(val => {\n          // val.message = val.message.replace(/\".*\"/, 'This Field');\n          this.errors[val.context.label] = val.message;\n        })).subscribe({\n          complete: () => {\n            this.submitDisabled = false;\n            this.throwErrors();\n          },\n          error: () => {\n            this.submitDisabled = false;\n          },\n          next: () => {}\n        });\n      },\n      next: res => {\n        this.submitDisabled = false;\n        this.response = res;\n        this.toastr.success(\"Asset added successfully.\");\n        this.dashboardUtilityService.refreshAssets = true;\n        this.cancel();\n      }\n    });\n  }\n\n  throwErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      if (v === \"assetIdentification\" || v === \"VIN\") {\n        $('[name=\"' + v + '\"]').after('<label id=\"' + v + '-error\" class=\"error\" for=\"' + v + '\">' + this.errors[v] + \"</label>\").addClass(\"error\");\n      }\n    });\n  }\n\n  hideErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      $('[name=\"' + v + '\"]').removeClass(\"error\").next().remove(\"label\");\n    });\n    this.errors = {};\n  }\n  /*\r\n   * Fetch Asset details before updating\r\n   */\n\n\n  fetchAssetByID() {\n    var _this2 = this;\n\n    this.spinner.show(); // loader init\n\n    this.apiService.getData(\"assets/\" + this.assetID).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (result) {\n        _this2.editDisabled = true;\n        result = result.Items[0];\n        _this2.assetsData[`assetID`] = _this2.assetID;\n        _this2.assetsData.assetIdentification = result.assetIdentification;\n        _this2.assetsData.createdTime = result.createdTime;\n        _this2.assetsData.createdDate = result.createdDate;\n        _this2.assetsData.groupID = result.groupID;\n        _this2.assetsData.inspectionFormID = result.inspectionFormID;\n        _this2.assetsData.VIN = result.VIN;\n        _this2.assetsData.startDate = result.startDate;\n        _this2.assetsData.assetType = result.assetType;\n        _this2.assetsData.assetDetails.year = result.assetDetails.year;\n        _this2.assetsData.assetDetails.manufacturer = result.assetDetails.manufacturer;\n        _this2.assetsData.assetDetails.model = result.assetDetails.model;\n        _this2.assetsData.assetDetails.length = result.assetDetails.length;\n        _this2.assetsData.assetDetails.lengthUnit = result.assetDetails.lengthUnit;\n        _this2.assetsData.assetDetails.height = result.assetDetails.height, _this2.assetsData.assetDetails.heightUnit = result.assetDetails.heightUnit, _this2.assetsData.assetDetails.axle = result.assetDetails.axle;\n        _this2.assetsData.assetDetails.GVWR = result.assetDetails.GVWR;\n        _this2.assetsData.assetDetails.GVWR_Unit = result.assetDetails.GVWR_Unit;\n        _this2.assetsData.assetDetails.GAWR = result.assetDetails.GAWR;\n        _this2.assetsData.assetDetails.GAWR_Unit = result.assetDetails.GAWR_Unit;\n        _this2.assetsData.assetDetails.ownerShip = result.assetDetails.ownerShip;\n        _this2.assetsData.assetDetails.ownCname = result.assetDetails.ownCname;\n        _this2.assetsData.assetDetails.ownAmt = result.assetDetails.ownAmt;\n        _this2.assetsData.assetDetails.ownCurr = result.assetDetails.ownCurr;\n        _this2.assetsData.assetDetails.ownDate = result.assetDetails.ownDate;\n        _this2.assetsData.assetDetails.ownRec = result.assetDetails.ownRec;\n        _this2.assetsData.assetDetails.ownFrq = result.assetDetails.ownFrq;\n\n        if (result.assetDetails.ownerShip === \"ownerOperator\") {\n          _this2.assetsData.assetDetails.ownerOperator = result.assetDetails.ownerOperator;\n        }\n\n        if (result.assetDetails.ownerShip === \"interchange\") {\n          _this2.isRequired = false;\n          _this2.isEdit = true;\n        } else {\n          _this2.isRequired = true;\n        }\n\n        _this2.assetsData.currentStatus = result.currentStatus;\n        _this2.assetsData.assetDetails.licenceCountryCode = result.assetDetails.licenceCountryCode;\n        yield _this2.getStates(result.assetDetails.licenceCountryCode);\n        _this2.assetsData.assetDetails.licenceStateCode = result.assetDetails.licenceStateCode;\n        _this2.assetsData.assetDetails.licencePlateNumber = result.assetDetails.licencePlateNumber;\n        _this2.assetsData.assetDetails.annualSafetyDate = result.assetDetails.annualSafetyDate;\n        _this2.assetsData.assetDetails.annualSafetyReminder = result.assetDetails.annualSafetyReminder;\n        _this2.assetsData.assetDetails.remarks = result.assetDetails.remarks;\n        _this2.assetsData.insuranceDetails.dateOfIssue = result.insuranceDetails.dateOfIssue;\n        _this2.assetsData.insuranceDetails.premiumAmount = result.insuranceDetails.premiumAmount;\n        _this2.assetsData.insuranceDetails.premiumCurrency = result.insuranceDetails.premiumCurrency;\n        _this2.assetsData.insuranceDetails.dateOfExpiry = result.insuranceDetails.dateOfExpiry;\n        _this2.assetsData.insuranceDetails.dateOfIssue = result.insuranceDetails.dateOfIssue;\n        _this2.assetsData.insuranceDetails.reminderBefore = result.insuranceDetails.reminderBefore;\n        _this2.assetsData.insuranceDetails.reminderBeforeUnit = result.insuranceDetails.reminderBeforeUnit;\n        _this2.assetsData.insuranceDetails.vendor = result.insuranceDetails.vendor;\n        _this2.assetsData.purchase.purchaseVendorID = result.purchase.purchaseVendorID;\n        _this2.assetsData.purchase.warrantyExpirationDate = result.purchase.warrantyExpirationDate;\n        _this2.assetsData.purchase.purchasePrice = result.purchase.purchasePrice;\n        _this2.assetsData.purchase.purchasePriceCurrency = result.purchase.purchasePriceCurrency;\n        _this2.assetsData.purchase.warrantyExpirationMeter = result.purchase.warrantyExpirationMeter;\n        _this2.assetsData.purchase.purchaseDate = result.purchase.purchaseDate;\n        _this2.assetsData.purchase.purchaseComments = result.purchase.purchaseComments;\n        _this2.assetsData.purchase.purchaseOdometer = result.purchase.purchaseOdometer;\n        _this2.assetsData.purchase.gstInc = result.purchase.gstInc;\n        _this2.assetsData.loan.loanVendorID = result.loan.loanVendorID;\n        _this2.assetsData.loan.amountOfLoan = result.loan.amountOfLoan;\n        _this2.assetsData.loan.amountOfLoanCurrency = result.loan.amountOfLoanCurrency;\n        _this2.assetsData.loan.annualPercentageRate = result.loan.annualPercentageRate;\n        _this2.assetsData.loan.downPayment = result.loan.downPayment;\n        _this2.assetsData.loan.downPaymentCurrency = result.loan.downPaymentCurrency;\n        _this2.assetsData.loan.monthlyPaymentCurrency = result.loan.monthlyPaymentCurrency;\n        _this2.assetsData.loan.dateOfLoan = result.loan.dateOfLoan;\n        _this2.assetsData.loan.monthlyPayment = result.loan.monthlyPayment;\n        _this2.assetsData.loan.numberOfPayments = result.loan.numberOfPayments;\n        _this2.assetsData.loan.loadEndDate = result.loan.loadEndDate;\n        _this2.assetsData.loan.generateExpenses = result.loan.generateExpenses;\n        _this2.assetsData.loan.loanDueDate = result.loan.loanDueDate;\n        _this2.assetsData.loan.lReminder = result.loan.lReminder;\n        _this2.assetsData.loan.gstInc = result.loan.gstInc;\n        _this2.assetsData.loan.notes = result.loan.notes;\n        _this2.assetsData.crossBorderDetails.ACE_ID = result.crossBorderDetails.ACE_ID;\n        _this2.assetsData.crossBorderDetails.ACI_ID = result.crossBorderDetails.ACI_ID;\n        _this2.existingPhotos = result.uploadedPhotos;\n        _this2.existingDocs = result.uploadedDocs;\n        _this2.existPDocs = result.purchaseDocs;\n        _this2.existLDocs = result.loanDocs;\n\n        if (result.uploadedPhotos !== undefined && result.uploadedPhotos.length > 0) {\n          // this.assetsImages = result.uploadedPhotos.map((x: any) => ({\n          //    path: `${this.Asseturl}/${result.carrierID}/${x}`,\n          //    name: x,\n          // }));\n          _this2.assetsImages = result.uploadedPhotosLinks;\n        }\n\n        if (result.uploadedDocs !== undefined && result.uploadedDocs.length > 0) {\n          // this.assetsDocs = result.uploadedDocs.map((x) => ({\n          //    path: `${this.Asseturl}/${result.carrierID}/${x}`,\n          //   name: x,\n          // }));\n          _this2.assetsDocs = result.uploadedDocsLinks;\n        }\n\n        if (result.loanDocs !== undefined && result.loanDocs.length > 0) {\n          // this.lDocs = result.loanDocs.map((x) => ({\n          //    path: `${this.Asseturl}/${result.carrierID}/${x}`,\n          //   name: x,\n          //  }));\n          _this2.lDocs = result.loanDocsLinks;\n        }\n\n        if (result.purchaseDocs !== undefined && result.purchaseDocs.length > 0) {\n          //  this.pDocs = result.purchaseDocs.map((x) => ({\n          //    path: `${this.Asseturl}/${result.carrierID}/${x}`,\n          //    name: x,\n          //  }));\n          _this2.pDocs = result.purchaseDocsLinks;\n        }\n\n        _this2.spinner.hide(); // loader hide\n\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  /*\r\n   * Update asset\r\n   */\n\n\n  onUpdateAsset() {\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.submitDisabled = true;\n    const data = {\n      isTemp: false,\n      assetID: this.assetID,\n      assetIdentification: this.assetsData.assetIdentification,\n      groupID: this.assetsData.groupID,\n      VIN: this.assetsData.VIN,\n      startDate: this.assetsData.startDate,\n      createdTime: this.assetsData.createdTime,\n      createdDate: this.assetsData.createdDate,\n      inspectionFormID: this.assetsData.inspectionFormID,\n      assetType: this.assetsData.assetType,\n      currentStatus: this.assetsData.currentStatus,\n      assetDetails: {\n        year: this.assetsData.assetDetails.year,\n        manufacturer: this.assetsData.assetDetails.manufacturer,\n        model: this.assetsData.assetDetails.model,\n        length: this.assetsData.assetDetails.length,\n        lengthUnit: this.assetsData.assetDetails.lengthUnit,\n        height: this.assetsData.assetDetails.height,\n        heightUnit: this.assetsData.assetDetails.heightUnit,\n        axle: this.assetsData.assetDetails.axle,\n        GVWR: this.assetsData.assetDetails.GVWR,\n        GVWR_Unit: this.assetsData.assetDetails.GVWR_Unit,\n        GAWR: this.assetsData.assetDetails.GAWR,\n        GAWR_Unit: this.assetsData.assetDetails.GAWR_Unit,\n        ownerShip: this.assetsData.assetDetails.ownerShip,\n        ownCname: this.assetsData.assetDetails.ownCname,\n        ownAmt: this.assetsData.assetDetails.ownAmt,\n        ownCurr: this.assetsData.assetDetails.ownCurr,\n        ownDate: this.assetsData.assetDetails.ownDate,\n        ownRec: this.assetsData.assetDetails.ownRec,\n        ownFrq: this.assetsData.assetDetails.ownFrq,\n        ownerOperator: this.assetsData.assetDetails.ownerOperator,\n        licenceCountryCode: this.assetsData.assetDetails.licenceCountryCode,\n        licenceStateCode: this.assetsData.assetDetails.licenceStateCode,\n        licencePlateNumber: this.assetsData.assetDetails.licencePlateNumber,\n        annualSafetyDate: this.assetsData.assetDetails.annualSafetyDate,\n        annualSafetyReminder: this.assetsData.assetDetails.annualSafetyReminder,\n        remarks: this.assetsData.assetDetails.remarks\n      },\n      insuranceDetails: {\n        dateOfIssue: this.assetsData.insuranceDetails.dateOfIssue,\n        premiumAmount: this.assetsData.insuranceDetails.premiumAmount,\n        premiumCurrency: this.assetsData.insuranceDetails.premiumCurrency,\n        dateOfExpiry: this.assetsData.insuranceDetails.dateOfExpiry,\n        reminderBefore: this.assetsData.insuranceDetails.reminderBefore,\n        reminderBeforeUnit: this.assetsData.insuranceDetails.reminderBeforeUnit,\n        vendor: this.assetsData.insuranceDetails.vendor\n      },\n      purchase: {\n        purchaseVendorID: this.assetsData.purchase.purchaseVendorID,\n        warrantyExpirationDate: this.assetsData.purchase.warrantyExpirationDate,\n        warrantyExpirationDateReminder: this.assetsData.purchase.warrantyExpirationDateReminder,\n        purchasePrice: this.assetsData.purchase.purchasePrice,\n        purchasePriceCurrency: this.assetsData.purchase.purchasePriceCurrency,\n        warrantyExpirationMeter: this.assetsData.purchase.warrantyExpirationMeter,\n        purchaseDate: this.assetsData.purchase.purchaseDate,\n        purchaseComments: this.assetsData.purchase.purchaseComments,\n        purchaseOdometer: this.assetsData.purchase.purchaseOdometer,\n        gstInc: this.assetsData.purchase.gstInc\n      },\n      loan: {\n        loanVendorID: this.assetsData.loan.loanVendorID,\n        amountOfLoan: this.assetsData.loan.amountOfLoan,\n        amountOfLoanCurrency: this.assetsData.loan.amountOfLoanCurrency,\n        annualPercentageRate: this.assetsData.loan.annualPercentageRate,\n        gstInc: this.assetsData.loan.gstInc,\n        downPayment: this.assetsData.loan.downPayment,\n        downPaymentCurrency: this.assetsData.loan.downPaymentCurrency,\n        dateOfLoan: this.assetsData.loan.dateOfLoan,\n        monthlyPayment: this.assetsData.loan.monthlyPayment,\n        monthlyPaymentCurrency: this.assetsData.loan.monthlyPaymentCurrency,\n        numberOfPayments: this.assetsData.loan.numberOfPayments,\n        loadEndDate: this.assetsData.loan.loadEndDate,\n        generateExpenses: this.assetsData.loan.generateExpenses,\n        notes: this.assetsData.loan.notes,\n        loanDueDate: this.assetsData.loan.loanDueDate,\n        lReminder: this.assetsData.loan.lReminder\n      },\n      crossBorderDetails: {\n        ACE_ID: this.assetsData.crossBorderDetails.ACE_ID,\n        ACI_ID: this.assetsData.crossBorderDetails.ACI_ID\n      },\n      uploadedPhotos: this.existingPhotos,\n      uploadedDocs: this.existingDocs,\n      purchaseDocs: this.existPDocs,\n      loanDocs: this.existLDocs\n    };\n    data.assetDetails.year = data.assetDetails.ownerShip === \"interchange\" ? new Date().getFullYear().toString() : data.assetDetails.year;\n    let currentDate = new Date();\n    let formattedDate = formatDate(currentDate, \"yyyy-MM-dd\", \"en\");\n    data.assetDetails.annualSafetyDate = data.assetDetails.ownerShip === \"interchange\" ? formattedDate.toString() : data.assetDetails.annualSafetyDate;\n    data.assetDetails.annualSafetyReminder = data.assetDetails.ownerShip === \"interchange\" ? data.assetDetails.annualSafetyReminder === false : data.assetDetails.annualSafetyReminder;\n    data.VIN = data.assetDetails.ownerShip === \"interchange\" ? new Date().getTime().toString() : data.VIN; // create form data instance\n\n    const formData = new FormData(); //append photos if any\n\n    for (let i = 0; i < this.uploadedPhotos.length; i++) {\n      formData.append(\"uploadedPhotos\", this.uploadedPhotos[i]);\n    } //append docs if any\n\n\n    for (let j = 0; j < this.uploadedDocs.length; j++) {\n      formData.append(\"uploadedDocs\", this.uploadedDocs[j]);\n    } // append purchase docs if any\n\n\n    for (let k = 0; k < this.purchaseDocs.length; k++) {\n      formData.append(\"purchaseDocs\", this.purchaseDocs[k]);\n    } // append loan docs if any\n\n\n    for (let l = 0; l < this.loanDocs.length; l++) {\n      formData.append(\"loanDocs\", this.loanDocs[l]);\n    } //append other fields\n\n\n    formData.append(\"data\", JSON.stringify(data));\n    this.apiService.putData(\"assets/\", formData, true).subscribe({\n      complete: () => {},\n      error: err => {\n        this.submitDisabled = false;\n        from(err.error).pipe(map(val => {\n          this.errors[val.context.label] = val.message;\n        })).subscribe({\n          complete: () => {\n            this.submitDisabled = false;\n            this.throwErrors();\n          },\n          error: () => {\n            this.submitDisabled = false;\n          },\n          next: () => {}\n        });\n      },\n      next: res => {\n        this.submitDisabled = false;\n        this.response = res;\n        this.hasSuccess = true;\n        this.toastr.success(\"Asset updated successfully.\");\n        this.dashboardUtilityService.refreshAssets = true;\n        this.cancel();\n        this.Success = \"\";\n      }\n    });\n  }\n\n  selectDocuments(event, obj) {\n    let files = [...event.target.files];\n\n    if (obj === \"uploadedDocs\") {\n      this.uploadedDocs = [];\n\n      for (let i = 0; i < files.length; i++) {\n        this.uploadedDocs.push(files[i]);\n      }\n    } else if (obj === \"purchase\") {\n      for (let i = 0; i < files.length; i++) {\n        this.purchaseDocs.push(files[i]);\n      }\n    } else if (obj === \"loan\") {\n      for (let i = 0; i < files.length; i++) {\n        this.loanDocs.push(files[i]);\n      }\n    } else {\n      this.uploadedPhotos = [];\n\n      for (let i = 0; i < files.length; i++) {\n        this.uploadedPhotos.push(files[i]);\n      }\n    }\n  } // Changing gvwr/gawr values\n\n\n  gwr(value, el) {\n    if (el === \"GVWR_Unit\") {\n      this.assetsData.assetDetails[`GAWR_Unit`] = value;\n    } else {\n      this.assetsData.assetDetails[`GVWR_Unit`] = value;\n    }\n  }\n\n  getGroups() {\n    this.fetchGroupsList();\n  }\n\n  fetchAssets() {\n    this.apiService.getData(\"assets\").subscribe(result => {\n      // this.allAssets = result.Items;\n      result.Items.forEach(element => {\n        if (element.isDeleted === 0) {\n          this.allAssets.push(element);\n        }\n      });\n    });\n  }\n\n  addGroup() {\n    this.groupSubmitDisabled = true;\n    this.apiService.postData(\"groups\", this.groupData).subscribe({\n      complete: () => {},\n      error: err => {\n        from(err.error).pipe(map(val => {\n          val.message = val.message.replace(/\".*\"/, \"This Field\");\n          this.errors[val.context.key] = val.message;\n        })).subscribe({\n          complete: () => {\n            this.throwErrors();\n            this.groupSubmitDisabled = false;\n          },\n          error: () => {\n            this.groupSubmitDisabled = false;\n          },\n          next: () => {}\n        });\n      },\n      next: res => {\n        this.groupSubmitDisabled = false;\n        this.response = res;\n        this.hasSuccess = true;\n        this.fetchGroupsList();\n        this.toastr.success(\"Group added successfully.\");\n        $(\"#addGroupModal\").modal(\"hide\");\n        this.groupData[`groupName`] = \"\";\n        this.groupData[`groupMembers`] = [];\n        this.groupData[`description`] = \"\";\n      }\n    });\n  }\n\n  getStates(countryCode) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.assetsData.assetDetails.licenceStateCode = null;\n      _this3.states = yield _this3.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  setPDFSrc(val) {\n    let pieces = val.split(/[\\s.]+/);\n    let ext = pieces[pieces.length - 1];\n    this.pdfSrc = \"\";\n\n    if (ext == \"doc\" || ext == \"docx\" || ext == \"xlsx\") {\n      this.pdfSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(\"https://docs.google.com/viewer?url=\" + val + \"&embedded=true\");\n    } else {\n      this.pdfSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(val);\n    }\n  } // delete uploaded images and documents\n  // delete(type: string, name: string, index: any) {\n  //   if (type === 'doc') {\n  //     this.assetsDocs.splice(index, 1);\n  //     this.existingDocs.splice(index, 1);\n  //     this.deleteUploadedFile(type, name);\n  //   } else {\n  //     this.assetsImages.splice(index, 1);\n  //     this.existingPhotos.splice(index, 1);\n  //     this.deleteUploadedFile(type, name);\n  //   }\n  // }\n  // deleteUploadedFile(type: string, name: string) { // delete from aws\n  //   this.apiService.deleteData(`assets/uploadDelete/${this.assetID}/${type}/${name}`).subscribe((result: any) => { });\n  // }\n\n\n  deleteDocument(type, name) {\n    // delete from aws\n    this.apiService.deleteData(`assets/uploadDelete/${this.assetID}/${type}/${name}`).subscribe(result => {\n      if (type == \"doc\") {\n        this.assetsDocs = [];\n        this.uploadedDocs = result.Attributes.uploadedDocs;\n        this.existingDocs = result.Attributes.uploadedDocs;\n        result.Attributes.uploadedDocs.map(x => {\n          let obj = {\n            name: x,\n            path: `${this.Asseturl}/${result.carrierID}/${x}`\n          };\n          this.assetsDocs.push(obj);\n        });\n      } else if (type == \"loan\") {\n        this.lDocs = [];\n        this.uploadedDocs = result.Attributes.loanDocs;\n        this.existingDocs = result.Attributes.loanDocs;\n        result.Attributes.loanDocs.map(x => {\n          let obj = {\n            name: x,\n            path: `${this.Asseturl}/${result.carrierID}/${x}`\n          };\n          this.lDocs.push(obj);\n        });\n      } else {\n        this.pDocs = [];\n        this.uploadedDocs = result.Attributes.purchaseDocs;\n        this.existingDocs = result.Attributes.purchaseDocs;\n        result.Attributes.purchaseDocs.map(x => {\n          let obj = {\n            name: x,\n            path: `${this.Asseturl}/${result.carrierID}/${x}`\n          };\n          this.pDocs.push(obj);\n        });\n      }\n    });\n  }\n\n  clearAssetGroup() {\n    this.groupData = {\n      groupName: \"\",\n      groupType: \"assets\",\n      description: \"\",\n      groupMembers: []\n    };\n  }\n\n  fetchGroupsList() {\n    this.apiService.getData('groups/get/list/type?type=assets').subscribe(result => {\n      this.groupsData = result;\n    });\n  }\n\n};\n\nAddAssetsComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ActivatedRoute\n}, {\n  type: Router\n}, {\n  type: NgbCalendar\n}, {\n  type: NgbDateAdapter\n}, {\n  type: Location\n}, {\n  type: ToastrService\n}, {\n  type: ListService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: DomSanitizer\n}, {\n  type: HttpClient\n}, {\n  type: CountryStateCityService\n}, {\n  type: DashboardUtilityService\n}];\n\nAddAssetsComponent = __decorate([Component({\n  selector: \"app-add-assets\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AddAssetsComponent);\nexport { AddAssetsComponent };","map":null,"metadata":{},"sourceType":"module"}