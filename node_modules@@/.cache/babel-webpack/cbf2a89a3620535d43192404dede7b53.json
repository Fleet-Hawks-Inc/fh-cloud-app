{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { DatePipe } from '@angular/common';\nimport Constants from '../../constants';\nimport { environment } from '../../../../../environments/environment';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport { SelectionType, ColumnMode } from \"@swimlane/ngx-datatable\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/api.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"ngx-spinner\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@ng-select/ng-select\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i10 from \"primeng/table\";\nimport * as i11 from \"primeng/api\";\nimport * as i12 from \"primeng/button\";\nimport * as i13 from \"primeng/tooltip\";\nconst _c0 = [\"dt\"];\n\nfunction FuelEntryListComponent_ng_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 66);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", data_r16.vehicleID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", data_r16.vehicleIdentification, \" \");\n  }\n}\n\nfunction FuelEntryListComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 67);\n    i0.ɵɵelementStart(1, \"button\", 68);\n    i0.ɵɵtext(2, \" Actions\");\n    i0.ɵɵelement(3, \"span\", 69);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 70);\n    i0.ɵɵelementStart(5, \"a\", 71);\n    i0.ɵɵtext(6, \"Import\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"a\", 71);\n    i0.ɵɵtext(8, \"Export\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 72);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"h3\", 73);\n    i0.ɵɵtext(3, \" Fuel List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 74);\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" \\u00A0 \");\n    i0.ɵɵelementStart(8, \"button\", 75);\n    i0.ɵɵlistener(\"click\", function FuelEntryListComponent_ng_template_44_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.refreshData();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"button\", 76);\n    i0.ɵɵelementStart(10, \"button\", 77);\n    i0.ɵɵlistener(\"click\", function FuelEntryListComponent_ng_template_44_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n\n      const _r4 = i0.ɵɵreference(43);\n\n      return ctx_r19.clear(_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Showing \", ctx_r5.fuelList.length, \" enteries\");\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_45_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 80);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelementStart(2, \"div\", 81);\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"p-sortIcon\", 82);\n    i0.ɵɵelement(5, \"p-columnFilter\", 83);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r22 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSortableColumn\", column_r22.field);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"frozen\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r22.header, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"field\", column_r22.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", column_r22.type)(\"field\", column_r22.field)(\"showMatchModes\", false)(\"showOperator\", false)(\"showAddButton\", false);\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, FuelEntryListComponent_ng_template_45_th_1_Template, 6, 9, \"th\", 78);\n    i0.ɵɵelementStart(2, \"th\", 79);\n    i0.ɵɵtext(3, \"Actions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.dataColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"frozen\", true);\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_46_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 84);\n    i0.ɵɵelementStart(2, \"span\", 85);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 84);\n    i0.ɵɵelementStart(5, \"span\", 85);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 84);\n    i0.ɵɵelementStart(8, \"span\", 85);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"titlecase\");\n    i0.ɵɵpipe(11, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 84);\n    i0.ɵɵelementStart(13, \"span\", 85);\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\", 84);\n    i0.ɵɵelementStart(17, \"span\", 85);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\", 84);\n    i0.ɵɵelementStart(20, \"span\", 85);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"td\", 84);\n    i0.ɵɵelementStart(23, \"span\", 85);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\", 84);\n    i0.ɵɵelementStart(26, \"span\", 85);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"td\", 86);\n    i0.ɵɵelement(29, \"button\", 87);\n    i0.ɵɵelementStart(30, \"button\", 88);\n    i0.ɵɵlistener(\"click\", function FuelEntryListComponent_ng_template_46_Template_button_click_30_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const fuel_r23 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.deleteFuelEntry(fuel_r23.data.fuelID);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fuel_r23 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(fuel_r23.dateTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(fuel_r23.data.cardNo ? fuel_r23.data.cardNo : \"-\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(10, 21, ctx_r7.vehicleList[fuel_r23.unitID] ? ctx_r7.vehicleList[fuel_r23.unitID] : \"\"), \" \", i0.ɵɵpipeBind1(11, 23, ctx_r7.assetList[fuel_r23.unitID] ? ctx_r7.assetList[fuel_r23.unitID] : \"\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(15, 25, fuel_r23.data.useType ? fuel_r23.data.useType : \"-\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(fuel_r23.data.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(fuel_r23.data.amt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(fuel_r23.data.site ? fuel_r23.data.site : \"-\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/detail/\", fuel_r23.data.fuelID, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\", fuel_r23.data.city, \",\", fuel_r23.data.state, \",\", fuel_r23.data.country, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"frozen\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/fleet/fuel/edit/\", fuel_r23.data.fuelID, \"\");\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 89);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.dataMessage, \" \");\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_48_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 89);\n    i0.ɵɵelementStart(1, \"button\", 92);\n    i0.ɵɵlistener(\"click\", function FuelEntryListComponent_ng_template_48_div_0_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.onScroll($event);\n    });\n    i0.ɵɵtext(2, \"Load More..\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_48_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 89);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Total Records: \", ctx_r31.fuelList.length, \"\");\n  }\n}\n\nfunction FuelEntryListComponent_ng_template_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FuelEntryListComponent_ng_template_48_div_0_Template, 5, 0, \"div\", 90);\n    i0.ɵɵtemplate(1, FuelEntryListComponent_ng_template_48_div_1_Template, 2, 1, \"div\", 91);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.lastEvaluatedKey !== \"end\" && ctx_r9.fuelList.length !== 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.lastEvaluatedKey === \"end\");\n  }\n}\n\nfunction FuelEntryListComponent_div_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction FuelEntryListComponent_button_76_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 93);\n    i0.ɵɵlistener(\"click\", function FuelEntryListComponent_button_76_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.postDocument();\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FuelEntryListComponent_button_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 94);\n    i0.ɵɵelement(1, \"span\", 95);\n    i0.ɵɵtext(2, \" Reviewing... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FuelEntryListComponent_div_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction FuelEntryListComponent_button_105_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 93);\n    i0.ɵɵlistener(\"click\", function FuelEntryListComponent_button_105_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.postPetroDoc();\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FuelEntryListComponent_button_106_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 94);\n    i0.ɵɵelement(1, \"span\", 95);\n    i0.ɵɵtext(2, \" Reviewing... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class FuelEntryListComponent {\n  constructor(apiService, toastr, spinner, httpClient, el, router) {\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.httpClient = httpClient;\n    this.el = el;\n    this.router = router;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.title = 'Fuel Entries List';\n    this.fromDate = '';\n    this.toDate = '';\n    this.fuelID = '';\n    this.uploadedDocs = [];\n    this.disable = false;\n    this.vehicles = [];\n    this.reviewing = false;\n    this.csvHeader = [];\n    this.vehicleList = {};\n    this.assetList = {};\n    this.driverList = {};\n    this.vendorList = {};\n    this.WEXCodeList = {};\n    this.fuelCodeList = {};\n    this.countries = [];\n    this.checked = false;\n    this.isChecked = false;\n    this.headCheckbox = false;\n    this.fuelCheckCount = null;\n    this.countryName = '';\n    this.formattedFromDate = '';\n    this.formattedToDate = '';\n    this.fuelList = [];\n    this.suggestedUnits = [];\n    this.vehicleID = '';\n    this.amount = '';\n    this.SelectionType = SelectionType;\n    this.ColumnMode = ColumnMode;\n    this.vehicleIdentification = '';\n    this.unitID = null;\n    this.assetUnitID = null;\n    this.start = '';\n    this.end = '';\n    this.lastTimeCreated = '';\n    this.totalRecords = 0;\n    this.pageLength = 10;\n    this.lastEvaluatedKey = '';\n    this.error = {\n      hasError: false,\n      message: '',\n      attributes: []\n    };\n    this.fuelNext = false;\n    this.fuelPrev = true;\n    this.fuelDraw = 0;\n    this.fuelPrevEvauatedKeys = [''];\n    this.fuelStartPoint = 1;\n    this.fuelEndPoint = this.pageLength;\n    this.allVehicles = [];\n    this.allAssets = [];\n    this.wexCategories = {};\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.rowHeight = 60;\n    this.headerHeight = 70;\n    this.pageLimit = 10;\n    this.loaded = false;\n    this.dataColumns = [{\n      field: 'data.date',\n      header: 'Date Time',\n      type: \"date\"\n    }, {\n      field: 'data.cardNo',\n      header: 'Fuel Card #',\n      type: \"text\"\n    }, {\n      field: 'data.unitNo',\n      header: 'Unit #',\n      type: 'text'\n    }, {\n      field: 'data.useType',\n      header: 'Use Type',\n      type: 'text'\n    }, {\n      field: 'data.type',\n      header: ' Type',\n      type: 'text'\n    }, {\n      field: 'data.amt',\n      header: 'Fuel Amount',\n      type: 'text'\n    }, {\n      field: 'data.site',\n      header: 'Site',\n      type: 'text'\n    }, {\n      field: 'data.city',\n      header: 'Province',\n      type: 'text'\n    }];\n  }\n\n  ngOnInit() {\n    this.fetchVendorList(); //   this.fuelEntriesCount();\n\n    this.fetchVehicleList();\n    this.fetchAssetList();\n    this.fetchWEXCode();\n    this.fetchDriverList();\n    this.fetchAllAssets();\n    this.fetchAllVehicles();\n    this.fetchWexCategories();\n    this.initDataTable();\n    $(document).ready(() => {\n      setTimeout(() => {\n        $('#DataTables_Table_0_wrapper .dt-buttons').addClass('custom-dt-buttons').prependTo('.page-buttons');\n      }, 1800);\n    });\n  }\n\n  onFuelSelect(event) {\n    let value = event.selected[0];\n    let fuelID = value.fuelSK.split('#')[1];\n    this.router.navigate([`/fleet/fuel/detail/${fuelID}`]);\n  }\n\n  onScroll(offsetY) {\n    const viewHeight = this.el.nativeElement.getBoundingClientRect().height - this.headerHeight;\n\n    if (offsetY + viewHeight + this.fuelList.length * this.rowHeight) {\n      let limit = this.pageLimit;\n\n      if (this.fuelList.length === 0) {\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\n        limit = Math.max(pageSize, this.pageLimit);\n      }\n\n      if (this.loaded) {\n        this.initDataTable();\n      }\n\n      this.loaded = false;\n    }\n  }\n\n  setUnit(unitID, unitName) {\n    this.unitName = unitName;\n    this.unitID = unitID;\n    this.suggestedUnits = [];\n  }\n\n  fetchWexCategories() {\n    this.httpClient.get('assets/jsonFiles/fuel/wexCategories.json').subscribe(result => {\n      this.wexCategories = result;\n    });\n  }\n\n  getSuggestions(value) {\n    value = value.toLowerCase();\n\n    if (value != '') {\n      this.apiService.getData(`vehicles/suggestion/${value}`).subscribe(result => {\n        result = result.Items;\n        this.suggestedUnits = [];\n\n        for (let i = 0; i < result.length; i++) {\n          this.suggestedUnits.push({\n            unitID: result[i].vehicleID,\n            unitName: result[i].vehicleIdentification\n          });\n        }\n\n        this.getAssetsSugg(value);\n      });\n    } else {\n      this.suggestedUnits = [];\n    }\n  }\n\n  getAssetsSugg(value) {\n    value = value.toLowerCase();\n\n    if (value != '') {\n      this.apiService.getData(`assets/suggestion/${value}`).subscribe(result => {\n        result = result.Items;\n\n        for (let i = 0; i < result.length; i++) {\n          this.suggestedUnits.push({\n            unitID: result[i].assetID,\n            unitName: result[i].assetIdentification\n          });\n        }\n      });\n    } else {\n      this.suggestedUnits = [];\n    }\n  }\n\n  fetchVendorList() {\n    this.apiService.getData('vendors').subscribe(result => {\n      result.forEach(element => {\n        this.vendorList[element.contactID] = element.companyName;\n      });\n    });\n  }\n\n  fetchVehicleList() {\n    this.apiService.getData('vehicles/get/list').subscribe(result => {\n      this.vehicleList = result;\n    });\n  }\n\n  fetchAssetList() {\n    this.apiService.getData('assets/get/list').subscribe(result => {\n      this.assetList = result;\n    });\n  }\n\n  fetchDriverList() {\n    this.apiService.getData('drivers/get/list').subscribe(result => {\n      this.driverList = result;\n    });\n  }\n\n  fetchCountries() {\n    this.apiService.getData('countries').subscribe(result => {\n      this.countries = result.Items;\n    });\n  }\n\n  fetchFuelTypeList() {\n    this.apiService.getData('fuelTypes/get/list').subscribe(result => {\n      this.fuelCodeList = result;\n    });\n  }\n\n  fetchWEXCode() {\n    this.httpClient.get('assets/jsonFiles/fuel/wexFuelType.json').subscribe(result => {\n      result.forEach(element => {\n        this.WEXCodeList[element.code] = element.type;\n      });\n    });\n  } // fuelEntriesCount() {\n  //   this.apiService.getData('fuelEntries/get/count?unitID=' + this.unitID + '&from=' + this.start + '&to=' + this.end + '&asset=' + this.assetUnitID).subscribe({\n  //     complete: () => { },\n  //     error: () => { },\n  //     next: (result: any) => {\n  //       this.totalRecords = result.Count;\n  //       if (this.unitID != null || this.start != '' || this.end != '' || this.assetUnitID != null) {\n  //         this.fuelEndPoint = this.totalRecords;\n  //       }\n  //       this.initDataTable();\n  //     },\n  //   });\n  // }\n\n\n  showTopValues() {\n    const data = {\n      fromDate: this.fromDate,\n      toDate: this.toDate\n    };\n    return;\n  } // deleteFuelEntry(fuelID) {\n  //   if (confirm('Are you sure you want to delete?') === true) {\n  //     this.apiService\n  //     .getData(`fuelEntries/isDeleted/${fuelID}/` + 1)\n  //     .subscribe((result: any) => {\n  //       this.fuelList = [];\n  //       this.fuelEntriesCount();\n  //       this.initDataTable();\n  //       this.fuelDraw = 0;\n  //       this.dataMessage = Constants.FETCHING_DATA;\n  //       this.lastEvaluatedKey = '';\n  //       this.toastr.success('Fuel Entry Deleted Successfully!');\n  //     });\n  //   }\n  // }\n\n\n  deleteFuelEntry(fuelID) {\n    if (confirm('Are you sure you want to delete?') === true) {\n      // let record = {\n      //   date: eventData.createdDate,\n      //   time: eventData.createdTime,\n      //   eventID: eventData.fuelID\n      // }\n      this.apiService.deleteData(`fuelEntries/delete/${fuelID}`).subscribe(result => {\n        this.fuelList = [];\n        this.fuelDraw = 0;\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.lastEvaluatedKey = ''; //this.fuelEntriesCount();\n\n        this.toastr.success('Fuel Entry Deleted Successfully!');\n        this.initDataTable();\n      });\n    }\n  }\n\n  initDataTable() {\n    this.apiService.getData('fuelEntries/fetch/records?unitID=' + this.unitID + '&from=' + this.start + '&to=' + this.end + '&asset=' + this.assetUnitID + '&lastKey=' + this.lastEvaluatedKey + '&timeCreated=' + this.lastTimeCreated).subscribe(result => {\n      this.loaded = true;\n\n      if (result.Items.length == 0) {\n        this.dataMessage = Constants.NO_RECORDS_FOUND;\n      }\n\n      this.suggestedUnits = []; // this.getStartandEndVal();\n\n      result[`Items`].forEach(element => {\n        let date = moment(element.data.date);\n\n        if (element.data.time) {\n          let time = moment(element.data.time, 'h mm a');\n          date.set({\n            hour: time.get('hour'),\n            minute: time.get('minute')\n          });\n          date = date.format('MMM Do YYYY, h:mm a');\n        } else {\n          date = date.format('MMM Do YYYY');\n        }\n\n        element.dateTime = date; // element.fuelTime=moment(element.fuelTime).format('h:mm a')\n      });\n      this.fuelList = this.fuelList.concat(_.orderBy(result.Items, [obj => new Date(obj.data.date)], ['desc']));\n\n      if (result.LastEvaluatedKey.fuelSK !== undefined) {\n        // for prev button\n        this.lastEvaluatedKey = encodeURIComponent(result.LastEvaluatedKey.fuelSK);\n\n        if (result.LastEvaluatedKey.timeCreated !== undefined) {\n          this.lastTimeCreated = result.LastEvaluatedKey.timeCreated;\n        }\n\n        this.loaded = true;\n      } else {\n        this.lastEvaluatedKey = 'end';\n      }\n    });\n  }\n\n  searchFilter() {\n    if (this.fromDate !== '' || this.toDate !== '' || this.unitID !== null || this.assetUnitID !== null) {\n      if (this.fromDate !== '') {\n        this.start = this.fromDate;\n      }\n\n      if (this.toDate !== '') {\n        this.end = this.toDate;\n      }\n\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.fuelList = [];\n      this.lastEvaluatedKey = '';\n      this.initDataTable(); //this.fuelEntriesCount();\n    } else {\n      return false;\n    }\n  }\n\n  resetFilter() {\n    this.unitID = null;\n    this.fromDate = '';\n    this.toDate = '';\n    this.assetUnitID = null;\n    this.start = '';\n    this.end = '';\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.fuelList = [];\n    this.lastEvaluatedKey = '';\n    this.lastTimeCreated = '';\n    this.initDataTable(); //this.fuelEntriesCount();\n    //this.resetCountResult();\n  } // getStartandEndVal() {\n  //   this.fuelStartPoint = this.fuelDraw * this.pageLength + 1;\n  //   this.fuelEndPoint = this.fuelStartPoint + this.pageLength - 1;\n  // }\n  // next button func\n\n\n  nextResults() {\n    this.fuelNext = true;\n    this.fuelPrev = true;\n    this.fuelDraw += 1;\n    this.initDataTable(); //this.getStartandEndVal();\n  } // prev button func\n\n\n  prevResults() {\n    this.fuelNext = true;\n    this.fuelPrev = true;\n    this.fuelDraw -= 1;\n    this.lastEvaluatedKey = this.fuelPrevEvauatedKeys[this.fuelDraw];\n    this.initDataTable(); //this.getStartandEndVal();\n  }\n\n  resetCountResult() {\n    this.fuelStartPoint = 1;\n    this.fuelEndPoint = this.pageLength;\n    this.fuelDraw = 0;\n  }\n\n  fetchAllVehicles() {\n    this.apiService.getData('vehicles').subscribe(result => {\n      this.allVehicles = result.Items;\n    });\n  }\n\n  fetchAllAssets() {\n    this.apiService.getData('assets').subscribe(result => {\n      result.Items.forEach(e => {\n        if (e.assetType == 'reefer') {\n          let obj = {\n            assetID: e.assetID,\n            assetIdentification: e.assetIdentification\n          };\n          this.allAssets.push(obj);\n        }\n      });\n    });\n  }\n\n  refreshData() {\n    this.unitID = null;\n    this.fromDate = '';\n    this.toDate = '';\n    this.assetUnitID = null;\n    this.start = '';\n    this.end = '';\n    this.lastEvaluatedKey = '';\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.fuelList = [];\n    this.totalRecords = 0;\n    this.initDataTable(); // this.fuelEntriesCount();\n\n    this.resetCountResult();\n  }\n\n  selectDoc(event) {\n    this.error.hasError = false;\n    this.error.message = '';\n    this.error.attributes = [];\n    let files = event.target.files;\n    let condition = true;\n\n    for (let i = 0; i < files.length; i++) {\n      const element = files[i];\n      let name = element.name.split('.');\n      let ext = name[name.length - 1].toLowerCase();\n\n      if (ext != 'csv') {\n        $('#uploadedDocs').val('');\n        $('#petroDocs').val('');\n        condition = false;\n        this.toastr.error('Only csv is allowed');\n        return false;\n      }\n    }\n\n    if (condition) {\n      this.uploadedDocs = [];\n      this.uploadedDocs = files;\n      const reader = new FileReader();\n      reader.addEventListener('load', event => {\n        let csvdata = event.target.result;\n        this.csvHeader = this.parseCSV(csvdata);\n      });\n      reader.readAsBinaryString(event.target.files[0]); //this.postDocument();\n    } else {\n      this.error.hasError = true;\n      this.error.message = \"Unable to upload\";\n    }\n  }\n\n  parseCSV(data) {\n    this.csvHeader = [];\n    let newLinebrk = data.split(\"\\n\");\n    let csvHeader = newLinebrk[0].split(',');\n    return csvHeader;\n  }\n\n  validateCSV() {\n    const data = [\"Exchange Rate\", \"Card #\", \"Site City\", \"Site Name\", \"Prov/St Abb.\", 'DEF AMT', \"DEF QTY\", \"Odometer\", \"Unit #\", \"UOM\", \"Date\", \"Time\", \"Driver Id\", \"Discount Rate\", \"Reefer AMT\", \"Tractor\", \"Tractor AMT\", \"Billed Price\", \"Reefer QTY\", \"Retail Price\"];\n    let match = true;\n    const parsedData = this.csvHeader.map(element => element.includes('\\r') ? element.replace('\\r', '') : element);\n\n    if (parsedData && parsedData.length > 0) {\n      data.forEach(element => {\n        if (!parsedData.includes(element)) {\n          this.error.attributes.push(element);\n          match = false;\n        }\n      });\n    }\n\n    return match;\n  }\n\n  postDocument() {\n    this.error.hasError = false;\n    this.error.message = '';\n\n    if (this.validateCSV()) {\n      if (this.uploadedDocs.length > 0) {\n        this.reviewing = true;\n        const formData = new FormData();\n\n        for (let i = 0; i < this.uploadedDocs.length; i++) {\n          formData.append(\"uploadedDocs\", this.uploadedDocs[i]);\n        }\n\n        this.apiService.postData('fuelEntries/import/BVD', formData, true).subscribe({\n          complete: () => {},\n          error: err => {\n            this.reviewing = false;\n            this.error.hasError = true;\n            this.error.message = err;\n          },\n          next: res => {\n            this.error.hasError = false;\n            this.error.message = '';\n            this.error.attributes = [];\n            this.toastr.success(\"Uploaded Successfully\");\n            $('#uploadedDocs').val('');\n            this.reviewing = false;\n          }\n        });\n      }\n    } else {\n      this.error.hasError = true;\n\n      if (this.error.attributes.length > 0) {\n        this.error.message += this.error.attributes.join(',');\n      }\n\n      this.error.message += \" CSV Headers are missing\";\n      this.reviewing = false;\n      this.uploadedDocs = [];\n    }\n  }\n\n  validatePetro() {\n    const data = [\"Sales Date\", \"Sales Time\", \"Card #\", \"City\", \"Province\", \"Product\", \"Volume\", \"Net Unit Price\", \"FET + FCT\", \"Prov. TAX\", \"GST/HST\", \"PST\", \"Amount\", \"Odometer\", \"Doc ID\", \"Driver Name\"];\n    let match = true;\n\n    try {\n      const parseData = this.csvHeader.map(element => {\n        if (element) {\n          return JSON.parse(element);\n        } else {\n          return element;\n        }\n      });\n\n      if (parseData && parseData.length > 0) {\n        data.forEach(element => {\n          if (!parseData.includes(element)) {\n            this.error.attributes.push(element);\n            match = false;\n          }\n        });\n      } else {\n        match = false;\n      }\n\n      return match;\n    } catch (err) {\n      this.error.hasError = true;\n      this.error.message = \"Unable to Parse\";\n      this.reviewing = false;\n    }\n  }\n\n  postPetroDoc() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.reviewing = true;\n      _this.error.hasError = false;\n      _this.error.message = '';\n      const val = yield _this.validatePetro();\n\n      if (val) {\n        if (_this.uploadedDocs.length > 0) {\n          const formData = new FormData();\n\n          for (let i = 0; i < _this.uploadedDocs.length; i++) {\n            formData.append(\"uploadedDocs\", _this.uploadedDocs[i]);\n          }\n\n          _this.apiService.postData('fuelEntries/import/petro', formData, true).subscribe({\n            complete: () => {},\n            error: err => {\n              _this.reviewing = false;\n              _this.error.hasError = true;\n              _this.error.message = err;\n            },\n            next: res => {\n              _this.error.hasError = false;\n              _this.error.message = '';\n              _this.error.attributes = [];\n\n              _this.toastr.success(\"Uploaded Successfully\");\n\n              $('#petroDocs').val('');\n              _this.reviewing = false;\n            }\n          });\n        }\n      } else {\n        _this.error.hasError = true;\n\n        if (_this.error.attributes.length > 0) {\n          _this.error.message = `CSV Headers are missing: ${_this.error.attributes.join(',')}`;\n        }\n\n        _this.reviewing = false;\n        _this.uploadedDocs = [];\n      }\n    })();\n  }\n  /**\r\n    * Clears the table filters\r\n    * @param table Table\r\n    */\n\n\n  clear(table) {\n    table.clear();\n  }\n\n}\n\nFuelEntryListComponent.ɵfac = function FuelEntryListComponent_Factory(t) {\n  return new (t || FuelEntryListComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i5.Router));\n};\n\nFuelEntryListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FuelEntryListComponent,\n  selectors: [[\"app-fuel-entry-list\"]],\n  viewQuery: function FuelEntryListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([DatePipe])],\n  decls: 107,\n  vars: 21,\n  consts: [[1, \"body\"], [1, \"inner-wrapper\"], [\"role\", \"main\", 1, \"content-body\", \"pl-1\", \"pr-0\", \"pt-0\"], [1, \"page-header\", \"pr19\", \"pl11\"], [\"method\", \"get\", \"name\", \"form\", \"id\", \"form_\", 1, \"form-horizontal\"], [1, \"row\", 2, \"padding-top\", \"10px\"], [1, \"col-md-2\", \"col-lg-2\", \"pr-1\"], [\"name\", \"unitID\", \"placeholder\", \"Search by vehicle\", 2, \"width\", \"100%\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-lg-3\", \"col-md-3\"], [1, \"input-daterange\", \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [1, \"fas\", \"fa-calendar-alt\"], [\"name\", \"fromDate\", \"type\", \"text\", \"placeholder\", \"yyyy/mm/dd\", \"ngbDatepicker\", \"\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"ngModel\", \"minDate\", \"maxDate\", \"ngModelChange\", \"click\"], [\"from\", \"ngbDatepicker\"], [1, \"input-group-text\", \"border-left-0\", \"border-right-0\", \"rounded-0\"], [\"name\", \"toDate\", \"type\", \"text\", \"placeholder\", \"yyyy/mm/dd\", \"ngbDatepicker\", \"\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"ngModel\", \"minDate\", \"maxDate\", \"ngModelChange\", \"click\"], [\"to\", \"ngbDatepicker\"], [1, \"col-md-2\", \"col-lg-\", \"pl-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"mr-3\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [1, \"col-md-5\", \"text-right\", \"pr-1\", \"page-buttons\"], [\"class\", \"btn-group flex-wrap\", 4, \"ngIf\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"id\", \"dropdownBasic1\", \"ngbDropdownToggle\", \"\", 1, \"btn\", \"btn-success\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownBasic1\"], [\"ngbDropdownItem\", \"\", \"data-toggle\", \"modal\", \"data-target\", \"#bvdModal\"], [\"ngbDropdownItem\", \"\", \"data-toggle\", \"modal\", \"data-target\", \"#petroModal\"], [\"routerLink\", \"/fleet/fuel/add\", 1, \"btn\", \"btn-success\", \"btn-sm\", \"ml-2\", 2, \"color\", \"white\"], [1, \"fas\", \"fa-plus\"], [1, \"m-2\"], [1, \"row\", \"mb-3\"], [1, \"col-lg-12\", 2, \"height\", \"calc(100vh - 149px)\", \"overflow-y\", \"scroll\"], [1, \"bg-white\", \"p-3\", \"text-dark\"], [\"columnResizeMode\", \"expand\", \"scrollDirection\", \"both\", \"styleClass\", \"p-datatable-sm p-datatable-gridlines p-datatable-striped\", \"scrollHeight\", \"100%\", 3, \"value\", \"resizableColumns\", \"loading\", \"scrollable\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"pTemplate\", \"summary\"], [\"id\", \"bvdModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"area-labelledby\", \"bvdModal\", \"aria-hidden\", \"true\", \"data-keyboard\", \"false\", \"data-backdrop\", \"static\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\", 2, \"width\", \"600px\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [1, \"far\", \"fa-window-close\", \"modal-dismiss\", 2, \"font-size\", \"25px\"], [1, \"modal-body\", \"text-dark\"], [1, \"col-log-10\", 2, \"margin-left\", \"10px\"], [2, \"font-size\", \"20px\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"form-group\", \"col-lg-12\", \"mb-3\"], [1, \"control-label\", \"font-weight-bold\", \"labelmt\", \"text-3\", \"text-dark\"], [1, \"mandfield\", \"text-2\", \"ml-1\"], [\"name\", \"\", \"id\", \"uploadedDocs\", \"type\", \"file\", 1, \"form-control-file\", 3, \"change\"], [2, \"font-size\", \"12px\"], [4, \"ngIf\"], [1, \"text-danger\"], [2, \"text-align\", \"right\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-dark\", \"type\", \"button\", \"disabled\", \"\", 4, \"ngIf\"], [\"id\", \"petroModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"area-labelledby\", \"petroModal\", \"aria-hidden\", \"true\", \"data-keyboard\", \"false\", \"data-backdrop\", \"static\", 1, \"modal\", \"fade\"], [\"name\", \"\", \"id\", \"petroDocs\", \"type\", \"file\", 1, \"form-control-file\", 3, \"change\"], [3, \"value\"], [1, \"btn-group\", \"flex-wrap\"], [\"type\", \"button\", \"data-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"btn\", \"btn-success\", \"btn-sm\", \"dropdown-toggle\"], [1, \"caret\"], [\"role\", \"menu\", \"x-placement\", \"bottom-start\", 1, \"dropdown-menu\", 2, \"position\", \"absolute\", \"will-change\", \"transform\", \"top\", \"0px\", \"left\", \"0px\", \"transform\", \"translate3d(0px, 38px, 0px)\"], [\"href\", \"\", 1, \"dropdown-item\", \"text-1\"], [1, \"p-d-flex\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"m-0\"], [1, \"text-right\"], [\"type\", \"button\", \"pButton\", \"\", \"pTooltip\", \"Refresh\", \"icon\", \"fas fa-sync\", 1, \"p-button-outlined\", \"mr-2\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pTooltip\", \"Add\", \"routerLink\", \"/fleet/fuel/add\", \"icon\", \"pi pi-plus\", 1, \"p-button-outlined\", \"mr-2\"], [\"pButton\", \"\", \"pRipple\", \"\", \"pTooltip\", \"Clear Filter\", \"icon\", \"pi pi-filter-slash\", 1, \"p-button-outlined\", \"mr-2\", 3, \"click\"], [\"pResizableColumn\", \"\", \"style\", \"width:12%\", 3, \"pSortableColumn\", 4, \"ngFor\", \"ngForOf\"], [\"alignFrozen\", \"right\", \"pFrozenColumn\", \"\", 2, \"width\", \"100px\", 3, \"frozen\"], [\"pResizableColumn\", \"\", 2, \"width\", \"12%\", 3, \"pSortableColumn\"], [\"alignFrozen\", \"right\", \"pFrozenColumn\", \"\", 1, \"flex\", \"justify-content-center\", \"align-items-center\", 3, \"frozen\"], [3, \"field\"], [\"matchMode\", \"contains\", \"display\", \"menu\", 3, \"type\", \"field\", \"showMatchModes\", \"showOperator\", \"showAddButton\"], [2, \"width\", \"12%\"], [2, \"cursor\", \"pointer\", 3, \"routerLink\"], [\"pFrozenColumn\", \"\", \"alignFrozen\", \"right\", 2, \"text-align\", \"center\", \"width\", \"100px\", 3, \"frozen\"], [\"id\", \"btnEdit\", \"pButton\", \"\", \"type\", \"button\", \"icon\", \"fas fa-user-pen\", 1, \"p-button-rounded\", \"p-button-text\", 3, \"routerLink\"], [\"id\", \"btnDelete\", \"pButton\", \"\", \"type\", \"button\", \"icon\", \"fas fa-user-slash\", 1, \"p-button-rounded\", \"p-button-danger\", \"p-button-text\", 3, \"click\"], [1, \"col-lg-12\", \"mt-3\", \"text-center\"], [\"class\", \"col-lg-12 mt-3 text-center \", 4, \"ngIf\"], [\"class\", \"col-lg-12 mt-3 text-center\", 4, \"ngIf\"], [\"type\", \"button \", 1, \"btn\", \"btn-success\", \"btn-sm\", \"text-light\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", \"disabled\", \"\", 1, \"btn\", \"btn-dark\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"]],\n  template: function FuelEntryListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r38 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"section\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"section\", 2);\n      i0.ɵɵelementStart(3, \"header\", 3);\n      i0.ɵɵelementStart(4, \"form\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵelementStart(7, \"ng-select\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function FuelEntryListComponent_Template_ng_select_ngModelChange_7_listener($event) {\n        return ctx.unitID = $event;\n      });\n      i0.ɵɵtemplate(8, FuelEntryListComponent_ng_option_8_Template, 2, 2, \"ng-option\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 9);\n      i0.ɵɵelementStart(10, \"div\", 10);\n      i0.ɵɵelementStart(11, \"span\", 11);\n      i0.ɵɵelementStart(12, \"span\", 12);\n      i0.ɵɵelement(13, \"i\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function FuelEntryListComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.fromDate = $event;\n      })(\"click\", function FuelEntryListComponent_Template_input_click_14_listener() {\n        i0.ɵɵrestoreView(_r38);\n\n        const _r1 = i0.ɵɵreference(15);\n\n        return _r1.toggle();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"span\", 16);\n      i0.ɵɵtext(17, \" to \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function FuelEntryListComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.toDate = $event;\n      })(\"click\", function FuelEntryListComponent_Template_input_click_18_listener() {\n        i0.ɵɵrestoreView(_r38);\n\n        const _r2 = i0.ɵɵreference(19);\n\n        return _r2.toggle();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 19);\n      i0.ɵɵelementStart(21, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function FuelEntryListComponent_Template_button_click_21_listener() {\n        return ctx.searchFilter();\n      });\n      i0.ɵɵtext(22, \" Search \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function FuelEntryListComponent_Template_button_click_23_listener() {\n        return ctx.resetFilter();\n      });\n      i0.ɵɵtext(24, \" Reset \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 22);\n      i0.ɵɵtemplate(26, FuelEntryListComponent_div_26_Template, 9, 0, \"div\", 23);\n      i0.ɵɵelementStart(27, \"div\", 24);\n      i0.ɵɵelementStart(28, \"button\", 25);\n      i0.ɵɵtext(29, \"Import\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 26);\n      i0.ɵɵelementStart(31, \"button\", 27);\n      i0.ɵɵtext(32, \"BVD Report\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"button\", 28);\n      i0.ɵɵtext(34, \"Petro Report\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"a\", 29);\n      i0.ɵɵelement(36, \"i\", 30);\n      i0.ɵɵtext(37, \" Add Fuel Entry\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"section\", 31);\n      i0.ɵɵelementStart(39, \"div\", 32);\n      i0.ɵɵelementStart(40, \"div\", 33);\n      i0.ɵɵelementStart(41, \"div\", 34);\n      i0.ɵɵelementStart(42, \"p-table\", 35, 36);\n      i0.ɵɵtemplate(44, FuelEntryListComponent_ng_template_44_Template, 11, 1, \"ng-template\", 37);\n      i0.ɵɵtemplate(45, FuelEntryListComponent_ng_template_45_Template, 4, 2, \"ng-template\", 38);\n      i0.ɵɵtemplate(46, FuelEntryListComponent_ng_template_46_Template, 31, 27, \"ng-template\", 39);\n      i0.ɵɵtemplate(47, FuelEntryListComponent_ng_template_47_Template, 4, 1, \"ng-template\", 40);\n      i0.ɵɵtemplate(48, FuelEntryListComponent_ng_template_48_Template, 2, 2, \"ng-template\", 41);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 42);\n      i0.ɵɵelementStart(50, \"div\", 43);\n      i0.ɵɵelementStart(51, \"div\", 44);\n      i0.ɵɵelementStart(52, \"div\", 45);\n      i0.ɵɵelementStart(53, \"h5\", 46);\n      i0.ɵɵtext(54, \"BVD Report Upload\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"button\", 47);\n      i0.ɵɵelement(56, \"i\", 48);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"div\", 49);\n      i0.ɵɵelementStart(58, \"div\", 50);\n      i0.ɵɵelementStart(59, \"span\", 51);\n      i0.ɵɵtext(60, \"Please upload the BVD report in CSV fromat.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 52);\n      i0.ɵɵelementStart(62, \"div\", 53);\n      i0.ɵɵelementStart(63, \"div\", 54);\n      i0.ɵɵelementStart(64, \"label\", 55);\n      i0.ɵɵtext(65, \"Choose File \");\n      i0.ɵɵelementStart(66, \"span\", 56);\n      i0.ɵɵelementStart(67, \"sup\");\n      i0.ɵɵtext(68, \"*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"input\", 57);\n      i0.ɵɵlistener(\"change\", function FuelEntryListComponent_Template_input_change_69_listener($event) {\n        return ctx.selectDoc($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"span\", 58);\n      i0.ɵɵtext(71, \" *Only .csv is accepted. The maximum file size can be 15MB.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(72, FuelEntryListComponent_div_72_Template, 1, 0, \"div\", 59);\n      i0.ɵɵelementStart(73, \"span\", 60);\n      i0.ɵɵtext(74);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(75, \"div\", 61);\n      i0.ɵɵtemplate(76, FuelEntryListComponent_button_76_Template, 2, 0, \"button\", 62);\n      i0.ɵɵtemplate(77, FuelEntryListComponent_button_77_Template, 3, 0, \"button\", 63);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(78, \"div\", 64);\n      i0.ɵɵelementStart(79, \"div\", 43);\n      i0.ɵɵelementStart(80, \"div\", 44);\n      i0.ɵɵelementStart(81, \"div\", 45);\n      i0.ɵɵelementStart(82, \"h5\", 46);\n      i0.ɵɵtext(83, \"Petro Canada Report Upload\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(84, \"button\", 47);\n      i0.ɵɵelement(85, \"i\", 48);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(86, \"div\", 49);\n      i0.ɵɵelementStart(87, \"div\", 50);\n      i0.ɵɵelementStart(88, \"span\", 51);\n      i0.ɵɵtext(89, \"Please upload the Petro report in CSV fromat.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(90, \"div\", 52);\n      i0.ɵɵelementStart(91, \"div\", 53);\n      i0.ɵɵelementStart(92, \"div\", 54);\n      i0.ɵɵelementStart(93, \"label\", 55);\n      i0.ɵɵtext(94, \"Choose File \");\n      i0.ɵɵelementStart(95, \"span\", 56);\n      i0.ɵɵelementStart(96, \"sup\");\n      i0.ɵɵtext(97, \"*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(98, \"input\", 65);\n      i0.ɵɵlistener(\"change\", function FuelEntryListComponent_Template_input_change_98_listener($event) {\n        return ctx.selectDoc($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(99, \"span\", 58);\n      i0.ɵɵtext(100, \" *Only .csv is accepted. The maximum file size can be 15MB.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(101, FuelEntryListComponent_div_101_Template, 1, 0, \"div\", 59);\n      i0.ɵɵelementStart(102, \"span\", 60);\n      i0.ɵɵtext(103);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(104, \"div\", 61);\n      i0.ɵɵtemplate(105, FuelEntryListComponent_button_105_Template, 2, 0, \"button\", 62);\n      i0.ɵɵtemplate(106, FuelEntryListComponent_button_106_Template, 3, 0, \"button\", 63);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.unitID);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.allVehicles);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.fromDate)(\"minDate\", ctx.dateMinLimit)(\"maxDate\", ctx.futureDatesLimit);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.toDate)(\"minDate\", ctx.dateMinLimit)(\"maxDate\", ctx.futureDatesLimit);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", !ctx.environment);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"value\", ctx.fuelList)(\"resizableColumns\", true)(\"loading\", !ctx.loaded)(\"scrollable\", true);\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngIf\", ctx.error.hasError);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.error.message);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.reviewing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reviewing);\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngIf\", ctx.error.hasError);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.error.message);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.reviewing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.reviewing);\n    }\n  },\n  directives: [i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i7.NgSelectComponent, i6.NgControlStatus, i6.NgModel, i8.NgForOf, i9.NgbInputDatepicker, i6.DefaultValueAccessor, i8.NgIf, i9.NgbDropdown, i9.NgbDropdownToggle, i9.NgbDropdownMenu, i9.NgbDropdownItem, i5.RouterLinkWithHref, i10.Table, i11.PrimeTemplate, i7.ɵr, i12.ButtonDirective, i13.Tooltip, i5.RouterLink, i10.FrozenColumn, i10.ResizableColumn, i10.SortableColumn, i10.SortIcon, i10.ColumnFilter],\n  pipes: [i8.TitleCasePipe],\n  styles: [\"\"],\n  encapsulation: 2\n});","map":null,"metadata":{},"sourceType":"module"}