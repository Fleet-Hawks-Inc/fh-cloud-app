{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./balance-sheet.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./balance-sheet.component.css\";\nimport { Component } from '@angular/core';\nimport Constants from 'src/app/pages/fleet/constants';\nimport { AccountService } from 'src/app/services/account.service';\nimport * as _ from 'lodash';\nimport { ToastrService } from \"ngx-toastr\";\nimport * as moment from 'moment';\nlet BalanceSheetComponent = class BalanceSheetComponent {\n  constructor(accountService, toaster) {\n    this.accountService = accountService;\n    this.toaster = toaster;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.mainArray = [];\n    this.allTotal = [];\n    this.assetArr = [];\n    this.liabilityArr = [];\n    this.equityArr = [];\n    this.revenueArr = [];\n    this.accArray = [];\n    this.expenseArr = [];\n    this.lastItemSK = \"\";\n    this.actName = null;\n    this.actType = null;\n    this.accounts = [];\n    this.exportData = [];\n    this.filter = {\n      actType: null,\n      actName: null,\n      startDate: null,\n      endDate: null\n    };\n    this.datee = '';\n    this.disableSearch = false;\n    this.exportLoading = false;\n    this.loaded = false;\n    this.start = null;\n    this.end = null;\n    this.currTab = \"CAD\";\n    this.isLoadText = \"Load More...\";\n    this.isLoad = false;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    }; //deactivatePredefined = true;\n\n    this.CAD = [];\n    this.USD = [];\n    this.actID = \"\";\n    this.acClasses = [];\n    this.totalUSD = 0;\n    this.totalCUSD = 0;\n    this.totalDCAD = 0;\n    this.totalCCAD = 0;\n    this.allExportData = [];\n    this.lastExportSk = \"\";\n    this.data1 = [];\n    this.cadDebitTotal = 0;\n    this.cadCreditTotal = 0;\n    this.usdDebitTotal = 0;\n    this.usdCreditTotal = 0;\n    this.accountsClassObjects = {};\n    this.coaData = {};\n    this.tempResults = [];\n    this.currency = 'CAD';\n    this.transactionLogCAD = [];\n    this.creditTotal = 0;\n    this.sortInventoryAssets = [];\n    this.sortOtherCurrentAssets = [];\n    this.sortCapitalAsset = [];\n    this.sortONCAsset = [];\n    this.currLiability = [];\n    this.scEquity = [];\n    this.retainedEarnings = [];\n    this.ltLiability = []; //Current Assets Total CAD USD\n\n    this.currentAssetDebitTotalCAD = 0;\n    this.currentAssetCreditTotalCAD = 0;\n    this.currentAssetDebitTotalUSD = 0;\n    this.currentAssetCreditTotalUSD = 0; //Inventory Assets Total CAD USD\n\n    this.inventoryAssetDebitTotalCAD = 0;\n    this.inventoryAssetCreditTotalCAD = 0;\n    this.inventoryAssetDebitTotalUSD = 0;\n    this.inventoryAssetCreditTotalUSD = 0; //Capital Assets Total CAD USD\n\n    this.capitalAssetDebitTotalCAD = 0;\n    this.capitalAssetCreditTotalCAD = 0;\n    this.capitalAssetDebitTotalUSD = 0;\n    this.capitalAssetCreditTotalUSD = 0; //Other Non Current Assets Total CAD USD\n\n    this.ONCAssetDebitTotalCAD = 0;\n    this.ONCAssetCreditTotalCAD = 0;\n    this.ONCAssetDebitTotalUSD = 0;\n    this.ONCAssetCreditTotalUSD = 0; //Total of All Assets CAD USD\n\n    this.totalAssetsDebitCAD = 0;\n    this.totalAssetsCreditCAD = 0;\n    this.totalAssetsDebitUSD = 0;\n    this.totalAssetsCreditUSD = 0; //Current Liability Total CAD USD\n\n    this.totalCurrentLiabilityDebitCAD = 0;\n    this.totalCurrentLiabilityCreditCAD = 0;\n    this.totalCurrentLiabilityDebitUSD = 0;\n    this.totalCurrentLiabilityCreditUSD = 0; //Long Term Liabilities Total CAD USD\n\n    this.totalLongTermLiabilityDebitCAD = 0;\n    this.totalLongTermLiabilityCreditCAD = 0;\n    this.totalLongTermLiabilityDebitUSD = 0;\n    this.totalLongTermLiabilityCreditUSD = 0; //Total of all liability\n\n    this.totalLiabilityDebitCAD = 0;\n    this.totalLiabilityCreditCAD = 0;\n    this.totalLiabilityDebitUSD = 0;\n    this.totalLiabilityCreditUSD = 0; //Share Capital Total CAD USD\n\n    this.totalShareCapitalDebitCAD = 0;\n    this.totalShareCapitalCreditCAD = 0;\n    this.totalShareCapitalDebitUSD = 0;\n    this.totalShareCapitalCreditUSD = 0; //Retained Earnings Total CAD USD\n\n    this.totalRetainedEarningsDebitCAD = 0;\n    this.totalRetainedEarningsCreditCAD = 0;\n    this.totalRetainedEarningsDebitUSD = 0;\n    this.totalRetainedEarningsCreditUSD = 0; //Total of All Equities\n\n    this.totalEquityDebitCAD = 0;\n    this.totalEquityCreditCAD = 0;\n    this.totalEquityDebitUSD = 0;\n    this.totalEquityCreditUSD = 0; //Total of All Equities and Liabilities\n\n    this.totalLiabilityEquityDebitCAD = 0;\n    this.totalLiabilityEquityCreditCAD = 0;\n    this.totalLiabilityEquityDebitUSD = 0;\n    this.totalLiabilityEquityCreditUSD = 0;\n  }\n\n  ngOnInit() {\n    this.filter.endDate = moment().format(\"YYYY-MM-DD\");\n    this.filter.startDate = moment().subtract(15, 'day').format('YYYY-MM-DD');\n    this.fetchBalence();\n  }\n\n  fetchBalence(refresh) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.lastItemSK !== 'end') {\n        _this.accountService.getData(`chartAc/get/balence/report/${_this.currency}/?lastKey=${_this.lastItemSK}&start=${_this.filter.startDate}&end=${_this.filter.endDate}&date=${_this.datee}`).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (result) {\n            if (result.data.length === 0) {\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            if (result.data.length > 0) {\n              result.data.map(v => {\n                _this.accounts.push(v);\n\n                _this.accounts = _.sortBy(_this.accounts, ['accountNo']);\n              });\n              _this.lastItemSK = result.lastKey;\n\n              if (_this.lastItemSK !== result.lastKey) {\n                _this.lastItemSK = 'end';\n              } //Filtering H , S , T , X Groups and Expence and Revenue\n\n\n              _this.accounts = _.filter(_this.accounts, function (o) {\n                return o.accountType != 'H';\n              });\n              _this.accounts = _.filter(_this.accounts, function (o) {\n                return o.accountType != 'S';\n              });\n              _this.accounts = _.filter(_this.accounts, function (o) {\n                return o.accountType != 'T';\n              });\n              _this.accounts = _.filter(_this.accounts, function (o) {\n                return o.accountType != 'X';\n              });\n              _this.accounts = _.filter(_this.accounts, function (o) {\n                return o.accountClass != 'REVENUE';\n              });\n              _this.accounts = _.filter(_this.accounts, function (o) {\n                return o.accountClass != 'EXPENSE';\n              }); //Sorting other Assets,Liabilities and Equities.\n\n              var sortClass = _.chain(_this.accounts).groupBy('subAcClass').map((value, key) => ({\n                subAcClass: key,\n                account: value\n              })).value();\n\n              for (let i = 0; i < sortClass.length; i++) {\n                if (sortClass[i].subAcClass == 'inventory') {\n                  _this.sortInventoryAssets = sortClass[i].account;\n                }\n\n                if (sortClass[i].subAcClass == 'capital asset') {\n                  _this.sortCapitalAsset = sortClass[i].account;\n                }\n\n                if (sortClass[i].subAcClass == 'other non-current asset') {\n                  _this.sortONCAsset = sortClass[i].account;\n                }\n\n                if (sortClass[i].subAcClass == 'share capital') {\n                  _this.scEquity = sortClass[i].account;\n                }\n\n                if (sortClass[i].subAcClass == 'retained earnings') {\n                  _this.retainedEarnings = sortClass[i].account;\n                }\n\n                if (sortClass[i].subAcClass == 'long term debt') {\n                  _this.ltLiability = sortClass[i].account;\n                }\n              } //Sorting Current Assets\n\n\n              var sortAssets = _.chain(_this.accounts).groupBy('accountClass').map((value, key) => ({\n                accountClass: key,\n                account: value\n              })).value();\n\n              for (let i = 0; i < sortAssets.length; i++) {\n                if (sortAssets[i].accountClass == 'ASSET') {\n                  _this.sortOtherCurrentAssets = sortAssets[i].account;\n                  _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                    return o.subAcClass != 'inventory';\n                  });\n                  _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                    return o.subAcClass != 'capital asset';\n                  });\n                  _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                    return o.subAcClass != 'other non-current asset';\n                  });\n                  _this.sortOtherCurrentAssets = _.filter(_this.sortOtherCurrentAssets, function (o) {\n                    return o.subAcClass != 'other current asset';\n                  });\n                }\n              } //Sorting Current Liabilities.\n\n\n              var sortLiability = _.chain(_this.accounts).groupBy('accountClass').map((value, key) => ({\n                accountClass: key,\n                account: value\n              })).value();\n\n              for (let i = 0; i < sortAssets.length; i++) {\n                if (sortAssets[i].accountClass == 'LIABILITY') {\n                  _this.currLiability = sortAssets[i].account;\n                  _this.accounts = _.filter(_this.accounts, function (o) {\n                    return o.subAcClass != 'long term debt';\n                  });\n                }\n              } //Calculation Current Assets \n\n\n              for (let i = 0; i < _this.sortOtherCurrentAssets.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.sortOtherCurrentAssets[i].debit != null) {\n                    _this.currentAssetDebitTotalCAD += parseFloat(_this.sortOtherCurrentAssets[i].debit);\n                  }\n\n                  if (_this.sortOtherCurrentAssets[i].credit != null) {\n                    _this.currentAssetCreditTotalCAD += parseFloat(_this.sortOtherCurrentAssets[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.sortOtherCurrentAssets.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.sortOtherCurrentAssets[i].debit != null) {\n                    _this.currentAssetDebitTotalUSD += parseFloat(_this.sortOtherCurrentAssets[i].debit);\n                  }\n\n                  if (_this.sortOtherCurrentAssets[i].credit != null) {\n                    _this.currentAssetCreditTotalUSD += parseFloat(_this.sortOtherCurrentAssets[i].credit);\n                  }\n                }\n              } //Calculation Inventory Assets \n\n\n              for (let i = 0; i < _this.sortInventoryAssets.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.sortInventoryAssets[i].debit != null) {\n                    _this.inventoryAssetDebitTotalCAD += parseFloat(_this.sortInventoryAssets[i].debit);\n                  }\n\n                  if (_this.sortInventoryAssets[i].credit != null) {\n                    _this.inventoryAssetCreditTotalCAD += parseFloat(_this.sortInventoryAssets[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.sortInventoryAssets.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.sortInventoryAssets[i].debit != null) {\n                    _this.inventoryAssetDebitTotalUSD += parseFloat(_this.sortInventoryAssets[i].debit);\n                  }\n\n                  if (_this.sortInventoryAssets[i].credit != null) {\n                    _this.inventoryAssetCreditTotalUSD += parseFloat(_this.sortInventoryAssets[i].credit);\n                  }\n                }\n              } //Calculation Capital Assets \n\n\n              for (let i = 0; i < _this.sortCapitalAsset.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.sortCapitalAsset[i].debit != null) {\n                    _this.capitalAssetDebitTotalCAD += parseFloat(_this.sortCapitalAsset[i].debit);\n                  }\n\n                  if (_this.sortCapitalAsset[i].credit != null) {\n                    _this.capitalAssetCreditTotalCAD += parseFloat(_this.sortCapitalAsset[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.sortCapitalAsset.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.sortCapitalAsset[i].debit != null) {\n                    _this.capitalAssetDebitTotalUSD += parseFloat(_this.sortCapitalAsset[i].debit);\n                  }\n\n                  if (_this.sortCapitalAsset[i].credit != null) {\n                    _this.capitalAssetCreditTotalUSD += parseFloat(_this.sortCapitalAsset[i].credit);\n                  }\n                }\n              } //Calculation Other Non-Current Assets \n\n\n              for (let i = 0; i < _this.sortONCAsset.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.sortONCAsset[i].debit != null) {\n                    _this.ONCAssetDebitTotalCAD += parseFloat(_this.sortONCAsset[i].debit);\n                  }\n\n                  if (_this.sortONCAsset[i].credit != null) {\n                    _this.ONCAssetCreditTotalCAD += parseFloat(_this.sortONCAsset[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.sortONCAsset.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.sortONCAsset[i].debit != null) {\n                    _this.ONCAssetDebitTotalUSD += parseFloat(_this.sortONCAsset[i].debit);\n                  }\n\n                  if (_this.sortONCAsset[i].credit != null) {\n                    _this.ONCAssetCreditTotalUSD += parseFloat(_this.sortONCAsset[i].credit);\n                  }\n                }\n              } //Total of All Assets CAD USD\n\n\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n                _this.totalAssetsDebitCAD = _this.currentAssetDebitTotalCAD + _this.inventoryAssetDebitTotalCAD + _this.capitalAssetDebitTotalCAD + _this.ONCAssetDebitTotalCAD;\n                _this.totalAssetsCreditCAD = _this.currentAssetCreditTotalCAD + _this.inventoryAssetCreditTotalCAD + _this.capitalAssetCreditTotalCAD + _this.ONCAssetCreditTotalCAD;\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n                _this.totalAssetsDebitUSD = _this.currentAssetDebitTotalUSD + _this.inventoryAssetDebitTotalUSD + _this.capitalAssetDebitTotalUSD + _this.ONCAssetDebitTotalUSD;\n                _this.totalAssetsCreditUSD = _this.currentAssetCreditTotalUSD + _this.inventoryAssetCreditTotalUSD + _this.capitalAssetCreditTotalUSD + _this.ONCAssetCreditTotalUSD;\n              } //Calculation current Liabilities\n\n\n              for (let i = 0; i < _this.currLiability.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.currLiability[i].debit != null) {\n                    _this.totalCurrentLiabilityDebitCAD += parseFloat(_this.currLiability[i].debit);\n                  }\n\n                  if (_this.currLiability[i].credit != null) {\n                    _this.totalCurrentLiabilityCreditCAD += parseFloat(_this.currLiability[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.currLiability.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.currLiability[i].debit != null) {\n                    _this.totalCurrentLiabilityDebitUSD += parseFloat(_this.currLiability[i].debit);\n                  }\n\n                  if (_this.currLiability[i].credit != null) {\n                    _this.totalCurrentLiabilityCreditUSD += parseFloat(_this.currLiability[i].credit);\n                  }\n                }\n              } //Calculation Long Term Liabilities\n\n\n              for (let i = 0; i < _this.ltLiability.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.ltLiability[i].debit != null) {\n                    _this.totalLongTermLiabilityDebitCAD += parseFloat(_this.ltLiability[i].debit);\n                  }\n\n                  if (_this.ltLiability[i].credit != null) {\n                    _this.totalLongTermLiabilityCreditCAD += parseFloat(_this.ltLiability[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.ltLiability.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.ltLiability[i].debit != null) {\n                    _this.totalLongTermLiabilityDebitUSD += parseFloat(_this.ltLiability[i].debit);\n                  }\n\n                  if (_this.ltLiability[i].credit != null) {\n                    _this.totalLongTermLiabilityCreditUSD += parseFloat(_this.ltLiability[i].credit);\n                  }\n                }\n              } //Total of All Liabilities CAD USD\n\n\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n                _this.totalLiabilityDebitCAD = _this.totalCurrentLiabilityDebitCAD + _this.totalLongTermLiabilityDebitCAD;\n                _this.totalLiabilityCreditCAD = _this.totalCurrentLiabilityCreditCAD + _this.totalLongTermLiabilityCreditCAD;\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n                _this.totalLiabilityDebitUSD = _this.totalCurrentLiabilityDebitUSD + _this.totalLongTermLiabilityDebitUSD;\n                _this.totalLiabilityCreditUSD = _this.totalCurrentLiabilityCreditUSD + _this.totalLongTermLiabilityCreditUSD;\n              } //Calculation Share Capital Equity\n\n\n              for (let i = 0; i < _this.scEquity.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.scEquity[i].debit != null) {\n                    _this.totalShareCapitalDebitCAD += parseFloat(_this.scEquity[i].debit);\n                  }\n\n                  if (_this.scEquity[i].credit != null) {\n                    _this.totalShareCapitalCreditCAD += parseFloat(_this.scEquity[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.scEquity.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.scEquity[i].debit != null) {\n                    _this.totalShareCapitalDebitUSD += parseFloat(_this.scEquity[i].debit);\n                  }\n\n                  if (_this.scEquity[i].credit != null) {\n                    _this.totalShareCapitalCreditUSD += parseFloat(_this.scEquity[i].credit);\n                  }\n                }\n              } //Calculation Retained Earnings Equity\n\n\n              for (let i = 0; i < _this.retainedEarnings.length; i++) {\n                if (_this.currTab === 'CAD') {\n                  _this.currency = 'CAD';\n\n                  if (_this.retainedEarnings[i].debit != null) {\n                    _this.totalRetainedEarningsDebitCAD += parseFloat(_this.retainedEarnings[i].debit);\n                  }\n\n                  if (_this.retainedEarnings[i].credit != null) {\n                    _this.totalRetainedEarningsCreditCAD += parseFloat(_this.retainedEarnings[i].credit);\n                  }\n                }\n              }\n\n              for (let i = 0; i < _this.retainedEarnings.length; i++) {\n                if (_this.currTab === 'USD') {\n                  _this.currency = 'USD';\n\n                  if (_this.retainedEarnings[i].debit != null) {\n                    _this.totalRetainedEarningsDebitUSD += parseFloat(_this.retainedEarnings[i].debit);\n                  }\n\n                  if (_this.retainedEarnings[i].credit != null) {\n                    _this.totalRetainedEarningsCreditUSD += parseFloat(_this.retainedEarnings[i].credit);\n                  }\n                }\n              } //Total of All Equities CAD USD\n\n\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n                _this.totalEquityDebitCAD = _this.totalShareCapitalDebitCAD + _this.totalRetainedEarningsDebitCAD;\n                _this.totalEquityCreditCAD = _this.totalShareCapitalCreditCAD + _this.totalRetainedEarningsCreditCAD;\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n                _this.totalEquityDebitUSD = _this.totalShareCapitalDebitUSD + _this.totalRetainedEarningsDebitUSD;\n                _this.totalEquityCreditUSD = _this.totalShareCapitalCreditUSD + _this.totalRetainedEarningsCreditUSD;\n              } //Total of Equities and Liability CAD USD\n\n\n              if (_this.currTab === 'CAD') {\n                _this.currency = 'CAD';\n                _this.totalLiabilityEquityDebitCAD = _this.totalEquityDebitCAD + _this.totalLiabilityDebitCAD;\n                _this.totalLiabilityEquityCreditCAD = _this.totalEquityCreditCAD + _this.totalLiabilityCreditCAD;\n              }\n\n              if (_this.currTab === 'USD') {\n                _this.currency = 'USD';\n                _this.totalLiabilityEquityDebitUSD = _this.totalLiabilityDebitUSD + _this.totalEquityDebitUSD;\n                _this.totalLiabilityEquityCreditUSD = _this.totalLiabilityCreditUSD + _this.totalEquityCreditUSD;\n              }\n\n              _this.loaded = true;\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    })();\n  }\n\n  changeTab(type) {\n    this.currTab = type;\n    this.accounts = [];\n\n    if (this.currTab === 'CAD') {\n      this.currency = 'CAD';\n      this.currentAssetDebitTotalCAD = 0;\n      this.currentAssetCreditTotalCAD = 0;\n      this.totalCurrentLiabilityDebitCAD = 0;\n      this.totalCurrentLiabilityCreditCAD = 0;\n      this.inventoryAssetDebitTotalCAD = 0;\n      this.inventoryAssetCreditTotalCAD = 0;\n      this.capitalAssetCreditTotalCAD = 0;\n      this.capitalAssetDebitTotalCAD = 0;\n      this.ONCAssetDebitTotalCAD = 0;\n      this.ONCAssetCreditTotalCAD = 0;\n      this.totalLongTermLiabilityDebitCAD = 0;\n      this.totalLongTermLiabilityCreditCAD = 0;\n      this.totalShareCapitalDebitCAD = 0;\n      this.totalShareCapitalCreditCAD = 0;\n      this.totalRetainedEarningsDebitCAD = 0;\n      this.totalRetainedEarningsCreditCAD = 0;\n      this.lastItemSK = '';\n      this.fetchBalence();\n    } else if (this.currTab === 'USD') {\n      this.currency = 'USD';\n      this.currentAssetDebitTotalUSD = 0;\n      this.currentAssetCreditTotalUSD = 0;\n      this.inventoryAssetDebitTotalUSD = 0;\n      this.inventoryAssetCreditTotalUSD = 0;\n      this.totalCurrentLiabilityDebitUSD = 0;\n      this.totalCurrentLiabilityCreditUSD = 0;\n      this.capitalAssetCreditTotalUSD = 0;\n      this.capitalAssetDebitTotalUSD = 0;\n      this.ONCAssetDebitTotalUSD = 0;\n      this.ONCAssetCreditTotalUSD = 0;\n      this.totalLongTermLiabilityDebitUSD = 0;\n      this.totalLongTermLiabilityCreditUSD = 0;\n      this.totalShareCapitalDebitUSD = 0;\n      this.totalShareCapitalCreditUSD = 0;\n      this.totalRetainedEarningsDebitUSD = 0;\n      this.totalRetainedEarningsCreditUSD = 0;\n      this.lastItemSK = '';\n      this.fetchBalence();\n    }\n  } //For Scrolling Page\n\n\n  onScroll() {\n    if (this.loaded) {\n      this.isLoad = true;\n      this.isLoadText = \"Loading\";\n      this.fetchBalence();\n      this.lastItemSK = '';\n    }\n\n    this.loaded = false;\n  } //export\n\n\n  generateCSV() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.exportLoading = true;\n      let dataObject = [];\n      let csvArray = [];\n      let provArray = [];\n\n      try {\n        if (_this2.sortOtherCurrentAssets.length > 0) {\n          for (const element of _this2.sortOtherCurrentAssets) {\n            let obj = {};\n            obj['Account Number'] = element.accountNo;\n            obj['Account Name'] = element.accountName;\n            obj['Account Class'] = element.subAcClass;\n            obj['Debit'] = element.debit;\n            obj['Credit'] = element.credit;\n            dataObject.push(obj);\n          }\n\n          let totObj = {\n            ['Credit']: 'Total Current Assets',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj['Total'] = _this2.currentAssetDebitTotalCAD;\n            totObj['Total1'] = _this2.currentAssetCreditTotalCAD;\n            dataObject.push(totObj, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj['Total'] = _this2.currentAssetDebitTotalUSD;\n            totObj['Total1'] = _this2.currentAssetCreditTotalUSD;\n            dataObject.push(totObj, '\\n');\n          }\n        } //Inventory Assets\n\n\n        if (_this2.sortInventoryAssets.length > 0) {\n          for (const element of _this2.sortInventoryAssets) {\n            let obj2 = {};\n            obj2['Account Number'] = element.accountNo;\n            obj2['Account Name'] = element.accountName;\n            obj2['Account Class'] = element.subAcClass;\n            obj2['Debit'] = element.debit;\n            obj2['Credit'] = element.credit;\n            dataObject.push(obj2);\n          }\n\n          let totObj2 = {\n            ['Credit']: 'Total Inventory Assets',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj2['Total'] = _this2.inventoryAssetDebitTotalCAD;\n            totObj2['Total1'] = _this2.inventoryAssetCreditTotalCAD;\n            dataObject.push(totObj2, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj2['Total'] = _this2.inventoryAssetDebitTotalUSD;\n            totObj2['Total1'] = _this2.inventoryAssetCreditTotalUSD;\n            dataObject.push(totObj2, '\\n');\n          }\n        } // capital assets\n\n\n        if (_this2.sortCapitalAsset.length > 0) {\n          for (const element of _this2.sortCapitalAsset) {\n            let obj3 = {};\n            obj3['Account Number'] = element.accountNo;\n            obj3['Account Name'] = element.accountName;\n            obj3['Account Class'] = element.subAcClass;\n            obj3['Debit'] = element.debit;\n            obj3['Credit'] = element.credit;\n            dataObject.push(obj3);\n          }\n\n          let totObj3 = {\n            ['Credit']: 'Total Capital Assets',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj3['Total'] = _this2.capitalAssetDebitTotalCAD;\n            totObj3['Total1'] = _this2.capitalAssetCreditTotalCAD;\n            dataObject.push(totObj3, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj3['Total'] = _this2.capitalAssetDebitTotalUSD;\n            totObj3['Total1'] = _this2.capitalAssetCreditTotalUSD;\n            dataObject.push(totObj3, '\\n');\n          }\n        } // Other Non-Current Assets\n\n\n        if (_this2.sortONCAsset.length > 0) {\n          for (const element of _this2.sortONCAsset) {\n            let obj4 = {};\n            obj4['Account Number'] = element.accountNo;\n            obj4['Account Name'] = element.accountName;\n            obj4['Account Class'] = element.subAcClass;\n            obj4['Debit'] = element.debit;\n            obj4['Credit'] = element.credit;\n            dataObject.push(obj4);\n          }\n\n          let totObj4 = {\n            ['Credit']: 'Total Non-Current Assets',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj4['Total'] = _this2.ONCAssetDebitTotalCAD;\n            totObj4['Total1'] = _this2.ONCAssetCreditTotalCAD;\n            dataObject.push(totObj4, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj4['Total'] = _this2.ONCAssetDebitTotalUSD;\n            totObj4['Total1'] = _this2.ONCAssetCreditTotalUSD;\n            dataObject.push(totObj4, '\\n');\n          }\n        } //Total of all assets \n\n\n        let totObj5 = {\n          ['Credit']: 'Total  Assets',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObj5['Total'] = _this2.totalAssetsDebitCAD;\n          totObj5['Total1'] = _this2.totalAssetsCreditCAD;\n          dataObject.push(totObj5, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObj5['Total'] = _this2.totalAssetsDebitUSD;\n          totObj5['Total1'] = _this2.totalAssetsCreditUSD;\n          dataObject.push(totObj5, '\\n');\n        } // Current Liability\n\n\n        if (_this2.currLiability.length > 0) {\n          for (const element of _this2.currLiability) {\n            let obj5 = {};\n            obj5['Account Number'] = element.accountNo;\n            obj5['Account Name'] = element.accountName;\n            obj5['Account Class'] = element.subAcClass;\n            obj5['Debit'] = element.debit;\n            obj5['Credit'] = element.credit;\n            dataObject.push(obj5);\n          }\n\n          let totObj5 = {\n            ['Credit']: ' Total Current Liability',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj5['Total'] = _this2.totalCurrentLiabilityDebitCAD;\n            totObj5['Total1'] = _this2.totalCurrentLiabilityCreditCAD;\n            dataObject.push(totObj5, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj5['Total'] = _this2.totalCurrentLiabilityDebitUSD;\n            totObj5['Total1'] = _this2.totalCurrentLiabilityCreditUSD;\n            dataObject.push(totObj5, '\\n');\n          }\n        } // Long Term Liability\n\n\n        if (_this2.ltLiability.length > 0) {\n          for (const element of _this2.ltLiability) {\n            let obj6 = {};\n            obj6['Account Number'] = element.accountNo;\n            obj6['Account Name'] = element.accountName;\n            obj6['Account Class'] = element.subAcClass;\n            obj6['Debit'] = element.debit;\n            obj6['Credit'] = element.credit;\n            dataObject.push(obj6);\n          }\n\n          let totObj6 = {\n            ['Credit']: 'Total Long Term Liability',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj6['Total'] = _this2.totalLongTermLiabilityDebitCAD;\n            totObj6['Total1'] = _this2.totalLongTermLiabilityCreditCAD;\n            dataObject.push(totObj6, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj6['Total'] = _this2.totalLongTermLiabilityDebitUSD;\n            totObj6['Total1'] = _this2.totalLongTermLiabilityCreditUSD;\n            dataObject.push(totObj6, '\\n');\n          }\n        } //Total of all liability\n\n\n        let totObjLiabilityTOT = {\n          ['Credit']: 'Total  Liability',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObjLiabilityTOT['Total'] = _this2.totalLiabilityDebitCAD;\n          totObjLiabilityTOT['Total1'] = _this2.totalLiabilityCreditCAD;\n          dataObject.push(totObjLiabilityTOT, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObjLiabilityTOT['Total'] = _this2.totalLiabilityDebitUSD;\n          totObjLiabilityTOT['Total1'] = _this2.totalLiabilityCreditUSD;\n          dataObject.push(totObjLiabilityTOT, '\\n');\n        } // Share Capital\n\n\n        if (_this2.scEquity.length > 0) {\n          for (const element of _this2.scEquity) {\n            let obj7 = {};\n            obj7['Account Number'] = element.accountNo;\n            obj7['Account Name'] = element.accountName;\n            obj7['Account Class'] = element.subAcClass;\n            obj7['Debit'] = element.debit;\n            obj7['Credit'] = element.credit;\n            dataObject.push(obj7);\n          }\n\n          let totObj7 = {\n            ['Credit']: 'Total Share Capital',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj7['Total'] = _this2.totalShareCapitalDebitCAD;\n            totObj7['Total1'] = _this2.totalShareCapitalCreditCAD;\n            dataObject.push(totObj7, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj7['Total'] = _this2.totalShareCapitalDebitUSD;\n            totObj7['Total1'] = _this2.totalShareCapitalCreditUSD;\n            dataObject.push(totObj7, '\\n');\n          }\n        } // Retained Earnings\n\n\n        if (_this2.retainedEarnings.length > 0) {\n          for (const element of _this2.retainedEarnings) {\n            let obj8 = {};\n            obj8['Account Number'] = element.accountNo;\n            obj8['Account Name'] = element.accountName;\n            obj8['Account Class'] = element.subAcClass;\n            obj8['Debit'] = element.debit;\n            obj8['Credit'] = element.credit;\n            dataObject.push(obj8);\n          }\n\n          let totObj8 = {\n            ['Credit']: 'Total Retained Earnings',\n            ['Debit']: '',\n            ['Dummy']: ''\n          };\n\n          if (_this2.currency === 'CAD') {\n            totObj8['Total'] = _this2.totalRetainedEarningsDebitCAD;\n            totObj8['Total1'] = _this2.totalRetainedEarningsCreditCAD;\n            dataObject.push(totObj8, '\\n');\n          } else if (_this2.currency === 'USD') {\n            totObj8['Total'] = _this2.totalRetainedEarningsDebitUSD;\n            totObj8['Total1'] = _this2.totalRetainedEarningsCreditUSD;\n            dataObject.push(totObj8, '\\n');\n          }\n        } //Total Equities\n\n\n        let totObjEquityTOT = {\n          ['Credit']: 'Total  Equity',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObjEquityTOT['Total'] = _this2.totalEquityDebitCAD;\n          totObjEquityTOT['Total1'] = _this2.totalEquityCreditCAD;\n          dataObject.push(totObjEquityTOT, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObjEquityTOT['Total'] = _this2.totalEquityDebitUSD;\n          totObjEquityTOT['Total1'] = _this2.totalEquityCreditUSD;\n          dataObject.push(totObjEquityTOT, '\\n');\n        } //Total Liability & Equity\n\n\n        let totObjLiabilityEquityTOT = {\n          ['Credit']: 'Total Liability & Equity',\n          ['Debit']: '',\n          ['Dummy']: ''\n        };\n\n        if (_this2.currency === 'CAD') {\n          totObjLiabilityEquityTOT['Total'] = _this2.totalLiabilityEquityDebitCAD;\n          totObjLiabilityEquityTOT['Total1'] = _this2.totalLiabilityEquityCreditCAD;\n          dataObject.push(totObjLiabilityEquityTOT, '\\n');\n        } else if (_this2.currency === 'USD') {\n          totObjLiabilityEquityTOT['Total'] = _this2.totalLiabilityEquityDebitUSD;\n          totObjLiabilityEquityTOT['Total1'] = _this2.totalLiabilityEquityCreditUSD;\n          dataObject.push(totObjLiabilityEquityTOT, '\\n');\n        }\n\n        let headers = Object.keys(dataObject[0]).join(',');\n        headers += '\\n';\n        csvArray.push(headers);\n\n        for (const element of dataObject) {\n          let value = Object.values(element).join(',');\n          value += '\\n';\n          csvArray.push(value);\n        }\n\n        const blob = new Blob(csvArray, {\n          type: 'text/csv;charset=utf-8'\n        });\n        const link = document.createElement('a');\n\n        if (link.download !== undefined) {\n          const url = URL.createObjectURL(blob);\n          link.setAttribute('href', url);\n          link.setAttribute('download', `${moment().format(\"YYYY-MM-DD:HH:m\")}-balenceSheet.csv`);\n          link.style.visibility = 'hidden';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n\n        _this2.exportLoading = false;\n      } catch (error) {\n        _this2.exportLoading = false;\n      }\n    })();\n  }\n\n};\n\nBalanceSheetComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ToastrService\n}];\n\nBalanceSheetComponent = __decorate([Component({\n  selector: 'app-balance-sheet',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], BalanceSheetComponent);\nexport { BalanceSheetComponent };","map":null,"metadata":{},"sourceType":"module"}