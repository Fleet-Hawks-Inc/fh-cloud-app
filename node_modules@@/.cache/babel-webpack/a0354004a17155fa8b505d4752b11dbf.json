{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./driver-payments-detail.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./driver-payments-detail.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport Constants from \"src/app/pages/fleet/constants\";\nimport { AccountService, ApiService, ListService } from \"src/app/services\";\nlet DriverPaymentsDetailComponent = class DriverPaymentsDetailComponent {\n  constructor(listService, route, router, accountService, apiService) {\n    this.listService = listService;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.apiService = apiService;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.paymentData = {\n      currency: \"CAD\",\n      paymentTo: null,\n      entityName: \"\",\n      entityId: null,\n      paymentNo: \"\",\n      txnDate: \"\",\n      fromDate: null,\n      toDate: null,\n      settlementIds: [],\n      advancePayIds: [],\n      payMode: null,\n      payModeNo: \"\",\n      payModeDate: null,\n      settledAmount: 0,\n      vacPayPer: 0,\n      vacPayAmount: 0,\n      totalAmount: 0,\n      taxdata: {\n        payPeriod: null,\n        stateCode: null,\n        federalCode: \"claim_code_1\",\n        provincialCode: null,\n        cpp: 0,\n        ei: 0,\n        federalTax: 0,\n        provincialTax: 0,\n        emplCPP: 0,\n        emplEI: 0\n      },\n      taxes: 0,\n      advance: 0,\n      finalAmount: 0,\n      accountID: null,\n      settlData: [],\n      advData: [],\n      transactionLog: [],\n      paymentEnity: \"\",\n      isFeatEnabled: false,\n      gstHstPer: 0,\n      gstHstAmt: 0,\n      isVendorPayment: false,\n      vendorId: ''\n    };\n    this.accounts = [];\n    this.accountsObjects = {};\n    this.accountsIntObjects = {};\n    this.showModal = false;\n    this.downloadDisabled = true;\n    this.downloadDisabledpdf = true;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.paymentID = _this.route.snapshot.params[\"paymentID\"]; // this.fetchDrivers();\n      // this.fetchContactsList();\n      // this.fetchSettlement();\n      // await this.fetchAccountsByIDs();\n      // await this.fetchAccountsByInternalIDs();\n\n      yield _this.fetchPaymentDetail();\n    })();\n  }\n\n  fetchPaymentDetail() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this2.accountService.getData(`driver-payments/detail/${_this2.paymentID}`).toPromise();\n      _this2.downloadDisabledpdf = false;\n      _this2.downloadDisabled = false;\n      _this2.paymentData = result[0];\n      _this2.paymentData.isVendorPayment = result[0].data.isVendorPymt;\n      _this2.paymentData.vendorId = result[0].data.vendorId;\n\n      if (!_this2.paymentData.isFeatEnabled) {\n        _this2.fetchAccountsByIDs();\n\n        _this2.fetchAccountsByInternalIDs();\n      }\n\n      if (_this2.paymentData.transactionLog.length === 0) {\n        _this2.dataMessage = Constants.NO_RECORDS_FOUND;\n      }\n\n      if (_this2.paymentData.payMode) {\n        _this2.paymentData.payMode = _this2.paymentData.payMode.replace(\"_\", \" \");\n      } else {\n        _this2.paymentData.payMode = \"\";\n      }\n\n      _this2.paymentData.paymentEnity = _this2.paymentData.paymentTo.replace(\"_\", \" \");\n    })();\n  }\n\n  fetchAccountsByIDs() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.accountsObjects = yield _this3.accountService.getData(\"chartAc/get/list/all\").toPromise();\n    })();\n  }\n\n  fetchAccountsByInternalIDs() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.accountsIntObjects = yield _this4.accountService.getData(\"chartAc/get/internalID/list/all\").toPromise();\n    })();\n  }\n\n  downloadPaymentPdf() {\n    this.showModal = true;\n    let obj = {\n      showModal: this.showModal,\n      data: this.paymentData\n    };\n    this.listService.triggerDownloadPaymentPdf(obj);\n    this.downloadDisabledpdf = true;\n    setTimeout(() => {\n      this.downloadDisabledpdf = false;\n    }, 15000);\n  }\n\n  showCheque() {\n    this.showModal = true;\n    let obj = {\n      entityId: this.paymentData.entityId,\n      chequeDate: this.paymentData.payModeDate,\n      chequeAmount: this.paymentData.finalAmount,\n      type: this.paymentData.paymentTo,\n      chequeNo: this.paymentData.payModeNo,\n      currency: \"CAD\",\n      formType: this.paymentID ? \"edit\" : \"add\",\n      showModal: this.showModal,\n      fromDate: this.paymentData.fromDate,\n      toDate: this.paymentData.toDate,\n      vacPayPer: this.paymentData.vacPayPer,\n      vacPayAmount: this.paymentData.vacPayAmount,\n      totalAmount: this.paymentData.totalAmount,\n      settledAmount: this.paymentData.settledAmount,\n      taxdata: this.paymentData.taxdata,\n      finalAmount: this.paymentData.finalAmount,\n      advance: this.paymentData.advance,\n      txnDate: this.paymentData.txnDate,\n      page: \"detail\",\n      isVendorPayment: this.paymentData.isVendorPayment,\n      vendorId: this.paymentData.vendorId,\n      gstHstPer: this.paymentData.gstHstPer\n    };\n    this.downloadDisabled = true;\n    this.listService.openPaymentChequeModal(obj);\n  }\n\n};\n\nDriverPaymentsDetailComponent.ctorParameters = () => [{\n  type: ListService\n}, {\n  type: ActivatedRoute\n}, {\n  type: Router\n}, {\n  type: AccountService\n}, {\n  type: ApiService\n}];\n\nDriverPaymentsDetailComponent = __decorate([Component({\n  selector: \"app-driver-payments-detail\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], DriverPaymentsDetailComponent);\nexport { DriverPaymentsDetailComponent };","map":null,"metadata":{},"sourceType":"module"}