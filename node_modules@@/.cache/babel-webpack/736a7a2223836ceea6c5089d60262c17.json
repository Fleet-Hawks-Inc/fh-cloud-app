{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./add-user.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./add-user.component.css\";\nimport { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { from, Subject, throwError } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { map, debounceTime, distinctUntilChanged, switchMap, catchError } from 'rxjs/operators';\nimport { HereMapService, ListService, ApiService } from '../../../../services';\nimport { Auth } from 'aws-amplify';\nimport { ActivatedRoute } from '@angular/router';\nimport { passwordStrength } from 'check-password-strength';\nimport { HttpClient } from '@angular/common/http';\nimport { CountryStateCityService } from 'src/app/services/country-state-city.service';\nlet AddUserComponent = class AddUserComponent {\n  constructor(apiService, toastr, HereMap, location, route, httpClient, countryStateCity, listService) {\n    var _this = this;\n\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.HereMap = HereMap;\n    this.location = location;\n    this.route = route;\n    this.httpClient = httpClient;\n    this.countryStateCity = countryStateCity;\n    this.listService = listService;\n    this.Asseturl = this.apiService.AssetUrl;\n    this.title = 'Add User';\n    this.isCarrierID = '';\n    this.currentUser = '';\n    this.suggestedUsers = [];\n    this.showUploadedPicModal = false;\n    this.searchUserName = '';\n    this.userData = {\n      cName: '',\n      dba: '',\n      firstName: '',\n      lastName: '',\n      employeeID: '',\n      dateOfBirth: null,\n      workPhone: '',\n      workEmail: '',\n      profileImg: '',\n      loginEnabled: false,\n      notes: '',\n      userType: 'employee',\n      corporationType: null,\n      vendor: null,\n      corporation: '',\n      paymentDetails: {\n        payrollType: '',\n        payrollRate: null,\n        payrollRateUnit: null,\n        payPeriod: '',\n        SIN: '',\n        WCB: '',\n        healthCare: ''\n      },\n      adrs: [{\n        aType: null,\n        cCode: null,\n        cName: '',\n        sCode: null,\n        sName: null,\n        ctyName: null,\n        zip: '',\n        add1: '',\n        add2: '',\n        geoCords: {\n          lat: '',\n          lng: ''\n        },\n        isSuggest: false,\n        userLoc: '',\n        manual: false,\n        houseNo: '',\n        street: '',\n        states: [],\n        cities: []\n      }],\n      userAccount: {\n        contractStartDate: null,\n        contractEndDate: null,\n        department: '',\n        designation: ''\n      },\n      currentStatus: 'Active',\n      userLoginData: {\n        userName: '',\n        userRoles: [],\n        subRoles: [],\n        password: '',\n        confirmPassword: ''\n      }\n    };\n    this.submitDisabled = false;\n    this.profilePath = '';\n    this.detailImgPath = 'assets/img/driver/driver.png';\n    this.defaultProfilePath = '';\n    this.imageText = 'Add';\n    this.loginDiv = false;\n    this.fieldvisibility = 'false';\n    this.uploadedPhotos = [];\n    this.errors = {};\n    this.searchTerm = new Subject();\n    this.response = '';\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.Error = '';\n    this.Success = '';\n    this.totalRecords = 20;\n    this.pageLength = 10;\n    this.lastEvaluatedKey = '';\n    this.userList = [];\n    this.userNext = false;\n    this.userPrev = true;\n    this.userDraw = 0;\n    this.start = '';\n    this.end = '';\n    this.userPrevEvauatedKeys = [''];\n    this.userStartPoint = 1;\n    this.userEndPoint = this.pageLength;\n    this.isEdit = false;\n    this.passwordValidation = {\n      upperCase: false,\n      lowerCase: false,\n      number: false,\n      specialCharacters: false,\n      length: false\n    };\n    this.enableUserLogin = false;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.userRoles = [];\n    this.deletedUploads = [];\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.allSubRoles = [];\n    this.subRole = [];\n    this.getCurrentuser = /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.isCarrierID = localStorage.getItem('carrierID');\n\n      if (_this.isCarrierID === undefined || _this.isCarrierID === null) {\n        let usr = (yield Auth.currentSession()).getIdToken().payload;\n        _this.isCarrierID = localStorage.getItem('xfhCarrierId');\n      }\n    });\n    this.getCarrierDetail = /*#__PURE__*/_asyncToGenerator(function* () {\n      const carrierID = localStorage.getItem('xfhCarrierId');\n      let result = yield _this.apiService.getData(`carriers/detail/${carrierID}`).toPromise();\n      _this.userData.cName = result.companyName;\n    });\n    const date = new Date();\n    this.birthDateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.birthDateMaxLimit = {\n      year: date.getFullYear() - 18,\n      month: 12,\n      day: 31\n    };\n  }\n\n  ngOnInit() {\n    this.contactID = this.route.snapshot.params[`contactID`];\n\n    if (this.contactID) {\n      this.title = 'Edit User';\n      this.fetchUserByID();\n      this.isEdit = true;\n    } else {\n      this.title = 'Add User';\n    }\n\n    this.fetchUserRoles();\n    this.getCurrentuser();\n    this.searchLocation();\n    this.fetchSubRoles();\n    this.getCarrierDetail();\n  }\n\n  fetchUserRoles() {\n    this.httpClient.get('assets/jsonFiles/user/userRoles.json').subscribe(data => {\n      this.userRoles = data;\n    });\n  }\n\n  fetchSubRoles() {\n    this.httpClient.get('assets/jsonFiles/user/subRoles.json').subscribe(data => {\n      this.allSubRoles = data;\n    });\n  } // ADDRESS Section\n\n\n  addAddress() {\n    this.userData.adrs.push({\n      aType: null,\n      cCode: null,\n      cName: null,\n      sCode: null,\n      sName: '',\n      ctyName: '',\n      zip: '',\n      add1: '',\n      add2: '',\n      geoCords: {\n        lat: '',\n        lng: ''\n      },\n      userLoc: '',\n      manual: false,\n      houseNo: '',\n      street: '',\n      isSuggest: false,\n      states: [],\n      cities: []\n    });\n  }\n\n  removeAddress(index) {\n    this.userData.adrs.splice(index, 1);\n  }\n\n  searchLocation() {\n    let target;\n    this.searchTerm.pipe(map(e => {\n      $('.map-search__results').hide();\n      $(e.target).closest('div').addClass('show-search__result');\n      return e.target.value;\n    }), debounceTime(400), distinctUntilChanged(), switchMap(term => {\n      return this.HereMap.searchEntries(term);\n    }), catchError(e => {\n      return throwError(e);\n    })).subscribe(res => {\n      this.searchResults = res;\n    });\n  }\n\n  userAddress(i, item) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.userData.adrs[i].userLoc = item.address;\n      let result = yield _this2.getAddressDetail(item.place_id);\n\n      if (result !== undefined) {\n        _this2.userData.adrs[i].geoCords.lat = result.position.lat;\n        _this2.userData.adrs[i].geoCords.lng = result.position.lng;\n        _this2.userData.adrs[i].cName = result.address.CountryFullName;\n        _this2.userData.adrs[i].sName = result.address.StateName;\n        _this2.userData.adrs[i].ctyName = result.address.City;\n        _this2.userData.adrs[i].cCode = result.address.Country;\n        _this2.userData.adrs[i].sCode = result.address.State;\n        _this2.userData.adrs[i].zip = result.address.Zip;\n        _this2.userData.adrs[i].add1 = result.address.StreetAddress ? result.address.StreetAddress : '';\n        _this2.userData.adrs[i].isSuggest = true;\n        $('div').removeClass('show-search__result');\n      }\n    })();\n  }\n\n  getAddressDetail(id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this3.apiService.getData(`pcMiles/detail/${id}`).toPromise();\n      return result;\n    })();\n  }\n\n  getStates(countryCode, index) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.userData.adrs[index].sCode = '';\n      _this4.userData.adrs[index].cName = '';\n      _this4.userData.adrs[index].states = yield _this4.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  getCities(stateCode, index, countryCode) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.userData.adrs[index].cName = '';\n      _this5.userData.adrs[index].cName = yield _this5.countryStateCity.GetSpecificCountryNameByCode(countryCode);\n      _this5.userData.adrs[index].sName = yield _this5.countryStateCity.GetStateNameFromCode(stateCode, countryCode);\n      _this5.userData.adrs[index].cities = yield _this5.countryStateCity.GetCitiesByStateCodes(countryCode, stateCode);\n    })();\n  }\n\n  fetchStates(countryCode, index) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      _this6.userData.adrs[index].states = yield _this6.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  fetchCities(countryCode, stateCode, index) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.userData.adrs[index].cities = yield _this7.countryStateCity.GetCitiesByStateCodes(countryCode, stateCode);\n    })();\n  }\n\n  clearUserLocation(i) {\n    this.userData.adrs[i][`userLoc`] = '';\n    $('div').removeClass('show-search__result');\n  }\n\n  getValidVendors(vendorList) {\n    let ids = [];\n    this.listService.vendorList.forEach(element => {\n      element.forEach(element2 => {\n        if (element2.isDeleted === 0 && !ids.includes(element2.contactID)) {\n          vendorList.push(element2);\n          ids.push(element2.contactID);\n        }\n\n        if (element2.isDeleted === 1 && element2.contactID === this.userData.vendor) {\n          this.userData.vendor = null;\n        }\n      });\n    });\n  }\n\n  manAddress(event, i) {\n    if (event.target.checked) {\n      $(event.target).closest('.address-item').addClass('open');\n      this.userData.adrs[i][`userLoc`] = '';\n      this.userData.adrs[i].cCode = '';\n      this.userData.adrs[i].sCode = '';\n      this.userData.adrs[i].cName = '';\n      this.userData.adrs[i].sName = '';\n      this.userData.adrs[i].ctyName = '';\n      this.userData.adrs[i].zip = '';\n      this.userData.adrs[i].add1 = '';\n      this.userData.adrs[i].add2 = '';\n    } else {\n      $(event.target).closest('.address-item').removeClass('open');\n      this.userData.adrs[i][`userLoc`] = '';\n      this.userData.adrs[i].cCode = '';\n      this.userData.adrs[i].sCode = '';\n      this.userData.adrs[i].cName = '';\n      this.userData.adrs[i].sName = '';\n      this.userData.adrs[i].ctyName = '';\n      this.userData.adrs[i].zip = '';\n      this.userData.adrs[i].add1 = '';\n      this.userData.adrs[i].add2 = '';\n      $('#addErr' + i).css('display', 'none');\n    }\n  }\n\n  cancel() {\n    this.location.back(); // <-- go back to previous location on cancel\n  } // Show password\n\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  togglecpwdfieldTextType() {\n    this.cpwdfieldTextType = !this.cpwdfieldTextType;\n  }\n\n  onChangeHideErrors(fieldname = '') {\n    $('[name=\"' + fieldname + '\"]').removeClass('error').next().remove('label');\n  }\n\n  selectPhoto(event, name, type) {\n    if (type === 'Add') {\n      this.uploadedPhotos = [];\n      const files = [...event.target.files];\n      this.uploadedPhotos.push(files[0]);\n\n      for (let i = 0; i < files.length; i++) {\n        const reader = new FileReader();\n        this.showUploadedPicModal = true;\n\n        reader.onload = e => {\n          this.profilePath = e.target.result;\n        };\n\n        reader.readAsDataURL(files[i]);\n        this.imageText = 'Change';\n      }\n    } else {\n      this.uploadedPhotos = [];\n      const files = [...event.target.files];\n      this.uploadedPhotos.push(files[0]);\n\n      for (let i = 0; i < files.length; i++) {\n        const reader = new FileReader();\n        this.showUploadedPicModal = true;\n\n        reader.onload = e => {\n          this.profilePath = e.target.result;\n        };\n\n        reader.readAsDataURL(files[i]);\n      }\n\n      this.deletedUploads.push(name);\n    }\n  }\n\n  deleteImage(type, name) {\n    if (type === 'uploaded') {\n      this.profilePath = '';\n      this.uploadedPhotos = [];\n      this.imageText = 'Add';\n    } else if (type === 'profile') {\n      this.userData.profileImg = '';\n      this.profilePath = '';\n      this.showUploadedPicModal = false;\n      this.uploadedPhotos = [];\n      this.imageText = 'Add';\n      this.deletedUploads.push(name);\n    }\n  }\n\n  newGeoCode(data) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this8.apiService.getData(`pcMiles/geocoding/${encodeURIComponent(JSON.stringify(data))}`).toPromise();\n\n      if (result.items !== undefined && result.items.length > 0) {\n        return result.items[0].position;\n      }\n    })();\n  }\n\n  onAddUser() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      _this9.hasError = false;\n      _this9.hasSuccess = false;\n\n      _this9.hideErrors(); // this.spinner.show();\n\n\n      for (let i = 0; i < _this9.userData.adrs.length; i++) {\n        const element = _this9.userData.adrs[i];\n        delete element.states;\n        delete element.cities;\n\n        if (element.manual === true) {\n          let data = {\n            add1: element.add1,\n            add2: element.add2,\n            ctyName: element.ctyName,\n            sName: element.sName,\n            cName: element.cName,\n            zip: element.zip\n          };\n          $('#addErr' + i).css('display', 'none');\n          let result = yield _this9.newGeoCode(data);\n\n          if (result == null) {\n            $('#addErr' + i).css('display', 'block');\n            return false;\n          }\n\n          if (result !== undefined || result != null) {\n            element.geoCords = result;\n          }\n        } else {\n          $('#addErr' + i).css('display', 'none');\n\n          if (element.isSuggest !== true && element.userLoc !== '') {\n            $('#addErr' + i).css('display', 'block');\n            return;\n          }\n        }\n      }\n\n      _this9.userData.userLoginData.userName = _this9.userData.userLoginData.userName.toLowerCase(); // create form data instance\n\n      const formData = new FormData(); // append photos if any\n\n      for (let i = 0; i < _this9.uploadedPhotos.length; i++) {\n        formData.append('uploadedPhotos', _this9.uploadedPhotos[i]);\n      } // append other fields\n\n\n      formData.append('data', JSON.stringify(_this9.userData));\n      _this9.submitDisabled = true; // this.lastEvaluatedKeyStaff = '';\n\n      _this9.apiService.postData('contacts/user/add', formData, true).subscribe({\n        complete: () => {},\n        error: err => {\n          from(err.error).pipe(map(val => {\n            //  val.message = val.message.replace(/\".*\"/, 'This Field');\n            _this9.errors[val.context.key] = val.message;\n          })).subscribe({\n            complete: () => {\n              _this9.throwErrors();\n\n              _this9.submitDisabled = false;\n            },\n            error: () => {\n              _this9.submitDisabled = false;\n            },\n            next: () => {}\n          });\n        },\n        next: res => {\n          // this.spinner.hide();\n          _this9.response = res;\n          _this9.submitDisabled = false;\n          _this9.hasSuccess = true;\n\n          _this9.location.back();\n\n          _this9.toastr.success('User Added Successfully');\n        }\n      });\n    })();\n  }\n\n  throwErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      $('[name=\"' + v + '\"]').after('<label id=\"' + v + '-error\" class=\"error\" for=\"' + v + '\">' + this.errors[v] + '</label>').addClass('error');\n    });\n  }\n\n  hideErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      $('[name=\"' + v + '\"]').removeClass('error').next().remove('label');\n    });\n    this.errors = {};\n  }\n\n  refreshVendorData() {\n    this.listService.fetchVendors();\n  }\n\n  openModal(unit) {\n    this.listService.triggerModal(unit);\n    localStorage.setItem(\"isOpen\", \"true\");\n    this.listService.changeButton(false);\n  }\n\n  fetchUserByID() {\n    var _this10 = this;\n\n    this.apiService.getData('contacts/detail/' + this.contactID).subscribe( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (result) {\n        result = result.Items[0];\n\n        if (result.corporationType === 'company') {\n          _this10.listService.fetchVendors();\n\n          let vendorList = new Array();\n\n          _this10.getValidVendors(vendorList);\n\n          _this10.vendors = vendorList;\n        }\n\n        _this10.userData = {\n          cName: result.cName,\n          notes: result.notes,\n          userType: result.userType,\n          corporationType: result.corporationType,\n          vendor: result.vendor,\n          corporation: result.corporation,\n          dba: result.dba,\n          firstName: result.firstName,\n          lastName: result.lastName,\n          employeeID: result.employeeID,\n          dateOfBirth: result.dateOfBirth,\n          workPhone: result.workPhone,\n          workEmail: result.workEmail,\n          loginEnabled: result.loginEnabled,\n          profileImg: result.profileImg,\n          currentStatus: result.currentStatus,\n          paymentDetails: {\n            payrollType: result.paymentDetails.payrollType,\n            payrollRate: result.paymentDetails.payrollRate,\n            payrollRateUnit: result.paymentDetails.payrollRateUnit,\n            payPeriod: result.paymentDetails.payPeriod,\n            SIN: result.paymentDetails.SIN,\n            WCB: result.paymentDetails.WCB,\n            healthCare: result.paymentDetails.healthCare\n          },\n          adrs: result.adrs,\n          userAccount: {\n            contractStartDate: result.userAccount.contractStartDate,\n            contractEndDate: result.userAccount.contractEndDate,\n            department: result.userAccount.department,\n            designation: result.userAccount.designation\n          },\n          userLoginData: {\n            userName: result.userLoginData.userName,\n            userRoles: result.userLoginData.userRoles,\n            subRoles: result.userLoginData.subRoles,\n            password: '',\n            confirmPassword: ''\n          }\n        };\n\n        if (_this10.userData.userLoginData.userRoles.length > 0) {\n          for (const subRole of _this10.allSubRoles) {\n            if (_this10.userData.userLoginData.userRoles.includes(subRole.role)) {\n              _this10.seprateRoles();\n            }\n          }\n        }\n\n        if (_this10.userData.loginEnabled === true) {\n          _this10.enableUserLogin = true;\n        } else {\n          _this10.enableUserLogin = false;\n        }\n\n        _this10.userData[`timeCreated`] = result.timeCreated;\n        _this10.userData[`createdDate`] = result.createdDate;\n        _this10.userData[`createdTime`] = result.createdTime; // to show profile image\n\n        if (result.profileImg !== '' && result.profileImg !== undefined) {\n          _this10.profilePath = `${_this10.Asseturl}/${result.carrierID}/${result.profileImg}`;\n          _this10.imageText = 'Change';\n        } else {\n          _this10.profilePath = '';\n          _this10.imageText = 'Add';\n        }\n      });\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  }\n\n  onChangeUnitType(str, value) {\n    if (str === 'user_type') {\n      if (value === 'employee') {\n        delete this.userData.corporationType;\n        delete this.userData.corporation;\n        delete this.userData.vendor;\n      } else {}\n\n      this.userData.userType = value;\n    } else {}\n  }\n\n  changeCompany(value) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      if (value === \"company\") {\n        _this11.userData.corporation = null;\n\n        _this11.listService.fetchVendors();\n\n        let vendorList = new Array();\n\n        _this11.getValidVendors(vendorList);\n\n        _this11.vendors = vendorList;\n      } else if (value === \"corporation\") {\n        _this11.userData.vendor = null;\n      } else {\n        _this11.userData.vendor = null;\n        _this11.userData.corporation = null;\n      }\n    })();\n  }\n\n  seprateRoles() {\n    const checkArray = this.userData.userLoginData.userRoles;\n    this.userData.userLoginData.userRoles = [];\n\n    for (const element of checkArray) {\n      for (const el of this.userRoles) {\n        if (element == el.role && !this.userData.userLoginData.userRoles.includes(element)) {\n          this.userData.userLoginData.userRoles.push(element);\n        }\n      }\n\n      for (const e of this.allSubRoles) {\n        if (element == e.role && !this.subRole.includes(element)) {\n          this.subRole.push(element);\n        }\n      }\n    }\n  }\n\n  scrollError() {\n    let errorList;\n    setTimeout(() => {\n      errorList = document.getElementsByClassName('error').length;\n\n      if (errorList > 0) {\n        let topPosition = $('.error').parent('div').offset().top;\n        window.scrollTo({\n          top: topPosition - 150,\n          left: 0,\n          behavior: 'smooth'\n        });\n      }\n    }, 1500);\n  }\n\n  onUpdateUser() {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      _this12.hasError = false;\n      _this12.hasSuccess = false;\n\n      _this12.hideErrors(); // this.spinner.show();\n\n\n      _this12.userData[`contactID`] = _this12.contactID;\n      _this12.userData[`deletedUploads`] = _this12.deletedUploads;\n\n      if (_this12.userData.loginEnabled === false) {\n        _this12.userData.userLoginData.userName = '';\n        _this12.userData.userLoginData.userRoles = [];\n      }\n\n      for (let i = 0; i < _this12.userData.adrs.length; i++) {\n        const element = _this12.userData.adrs[i];\n        delete element.states;\n        delete element.cities;\n\n        if (element.manual === true) {\n          let data = {\n            address1: element.add1,\n            address2: element.add2,\n            cityName: element.ctyName,\n            stateName: element.sName,\n            countryName: element.cName,\n            zipCode: element.zip\n          };\n          $('#addErr' + i).css('display', 'none');\n          let result = yield _this12.newGeoCode(data);\n\n          if (result == null) {\n            $('#addErr' + i).css('display', 'block');\n            return false;\n          }\n\n          if (result !== undefined || result != null) {\n            element.geoCords = result;\n          }\n        } else {\n          $('#addErr' + i).css('display', 'none');\n\n          if (element.isSuggest !== undefined && element.isSuggest !== true && element.userLoc !== '') {\n            $('#addErr' + i).css('display', 'block');\n            return;\n          }\n        }\n      } // create form data instance\n\n\n      const formData = new FormData(); // append photos if any\n\n      for (let i = 0; i < _this12.uploadedPhotos.length; i++) {\n        formData.append('uploadedPhotos', _this12.uploadedPhotos[i]);\n      } // append other fields\n\n\n      formData.append('data', JSON.stringify(_this12.userData)); // this.lastEvaluatedKeyStaff = '';\n\n      _this12.submitDisabled = true;\n\n      try {\n        _this12.apiService.putData('contacts/user/update', formData, true).subscribe({\n          complete: () => {},\n          error: err => {\n            from(err.error).pipe(map(val => {\n              //  val.message = val.message.replace(/\".*\"/, 'This Field');\n              _this12.errors[val.context.key] = val.message;\n            })).subscribe({\n              complete: () => {\n                _this12.throwErrors();\n\n                _this12.submitDisabled = false;\n              },\n              error: () => {\n                _this12.submitDisabled = false;\n              },\n              next: () => {}\n            });\n          },\n          next: res => {\n            // this.spinner.hide();\n            _this12.response = res;\n            _this12.submitDisabled = false;\n            _this12.hasSuccess = true;\n\n            _this12.location.back();\n\n            _this12.toastr.success('User is updated successfully');\n          }\n        });\n      } catch (error) {\n        _this12.submitDisabled = false;\n      }\n    })();\n  }\n\n  validatePassword(password) {\n    let passwordVerify = passwordStrength(password);\n\n    if (passwordVerify.contains.includes('lowercase')) {\n      this.passwordValidation.lowerCase = true;\n    } else {\n      this.passwordValidation.lowerCase = false;\n    }\n\n    if (passwordVerify.contains.includes('uppercase')) {\n      this.passwordValidation.upperCase = true;\n    } else {\n      this.passwordValidation.upperCase = false;\n    }\n\n    if (passwordVerify.contains.includes('symbol')) {\n      this.passwordValidation.specialCharacters = true;\n    } else {\n      this.passwordValidation.specialCharacters = false;\n    }\n\n    if (passwordVerify.contains.includes('number')) {\n      this.passwordValidation.number = true;\n    } else {\n      this.passwordValidation.number = false;\n    }\n\n    if (passwordVerify.length >= 8) {\n      this.passwordValidation.length = true;\n    } else {\n      this.passwordValidation.length = false;\n    }\n\n    if (password.includes('.') || password.includes('-')) {\n      this.passwordValidation.specialCharacters = true;\n    }\n  }\n\n};\n\nAddUserComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ToastrService\n}, {\n  type: HereMapService\n}, {\n  type: Location\n}, {\n  type: ActivatedRoute\n}, {\n  type: HttpClient\n}, {\n  type: CountryStateCityService\n}, {\n  type: ListService\n}];\n\nAddUserComponent = __decorate([Component({\n  selector: 'app-add-user',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AddUserComponent);\nexport { AddUserComponent };","map":null,"metadata":{},"sourceType":"module"}