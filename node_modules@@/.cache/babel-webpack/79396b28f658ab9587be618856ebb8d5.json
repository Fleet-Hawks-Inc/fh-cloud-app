{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./activity-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./activity-list.component.css\";\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as _ from 'lodash';\nimport { environment } from '../../../../../../environments/environment';\nimport { ApiService } from '../../../../../services';\nimport Constants from 'src/app/pages/fleet/constants';\nlet ActivityListComponent = class ActivityListComponent {\n  constructor(apiService, httpClient, _sanitizer) {\n    this.apiService = apiService;\n    this.httpClient = httpClient;\n    this._sanitizer = _sanitizer;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.title = 'Vehicle List';\n    this.vehicles = [];\n    this.suggestedVehicles = [];\n    this.vehicleID = '';\n    this.currentStatus = null;\n    this.vehicleIdentification = '';\n    this.allOptions = {};\n    this.groupsList = {};\n    this.vehicleModelList = {};\n    this.vehicleManufacturersList = {};\n    this.serviceProgramsList = {};\n    this.driversList = {};\n    this.vendorsList = {};\n    this.currentView = 'list';\n    this.totalRecords = 20;\n    this.lastEvaluatedKey = '';\n    this.disableSearch = false;\n    this.vehicleTypeObects = {};\n    this.lastItemSK = '';\n    this.loaded = false;\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value != '') {\n        this.apiService.getData(`vehicles/suggestion/${value}`).subscribe(result => {\n          this.suggestedVehicles = result;\n        });\n      } else {\n        this.suggestedVehicles = [];\n      }\n    }, 800);\n  }\n\n  ngOnInit() {\n    this.fetchGroups();\n    this.fetchDriversList();\n    this.fetchServiceProgramsList();\n    this.fetchVendorList();\n    this.initDataTable();\n  }\n\n  fetchGroups() {\n    this.apiService.getData('groups/get/list').subscribe(result => {\n      this.groupsList = result;\n    });\n  }\n\n  fetchVehicleModelList() {\n    this.apiService.getData('vehicleModels/get/list').subscribe(result => {\n      this.vehicleModelList = result;\n    });\n  }\n\n  fetchDriversList() {\n    this.apiService.getData('drivers/get/list').subscribe(result => {\n      this.driversList = result;\n    });\n  }\n\n  fetchServiceProgramsList() {\n    this.apiService.getData('servicePrograms/get/list').subscribe(result => {\n      this.serviceProgramsList = result;\n    });\n  }\n\n  fetchVendorList() {\n    this.apiService.getData('contacts/get/list/vendor').subscribe(result => {\n      this.vendorsList = result;\n    });\n  }\n\n  setVehicle(vehicleID, vehicleIdentification) {\n    this.vehicleIdentification = vehicleIdentification;\n    this.vehicleID = vehicleIdentification;\n    this.suggestedVehicles = [];\n  }\n\n  initDataTable() {\n    var _this = this;\n\n    if (this.lastEvaluatedKey !== 'end') {\n      this.apiService.getData('vehicles/fetch/records?vehicle=' + this.vehicleID + '&status=' + this.currentStatus + '&lastKey=' + this.lastEvaluatedKey).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (result) {\n          _this.dataMessage = Constants.FETCHING_DATA;\n\n          if (result.Items.length === 0) {\n            _this.disableSearch = false;\n            _this.dataMessage = Constants.NO_RECORDS_FOUND;\n          }\n\n          result[`Items`].map(v => {\n            v.url = `/reports/fleet/vehicles/activity/${v.vehicleID}`;\n          });\n\n          if (result.Items.length > 0) {\n            _this.disableSearch = false;\n\n            if (result.LastEvaluatedKey !== undefined) {\n              _this.lastEvaluatedKey = encodeURIComponent(result.Items[result.Items.length - 1].vehicleSK);\n            } else {\n              _this.lastEvaluatedKey = 'end';\n            }\n\n            _this.vehicles = _this.vehicles.concat(result.Items);\n            _this.loaded = true;\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.initDataTable();\n    }\n\n    this.loaded = false;\n  }\n\n  searchFilter() {\n    if (this.vehicleIdentification !== '' || this.currentStatus !== null) {\n      this.vehicleIdentification = this.vehicleIdentification.toLowerCase();\n\n      if (this.vehicleID == '') {\n        this.vehicleID = this.vehicleIdentification;\n      }\n\n      this.disableSearch = true;\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.vehicles = [];\n      this.lastEvaluatedKey = '';\n      this.suggestedVehicles = [];\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  resetFilter() {\n    if (this.vehicleIdentification !== '' || this.currentStatus !== null) {\n      this.disableSearch = true;\n      this.vehicleID = '';\n      this.suggestedVehicles = [];\n      this.vehicleIdentification = '';\n      this.currentStatus = null;\n      this.lastEvaluatedKey = '';\n      this.vehicles = [];\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n};\n\nActivityListComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: HttpClient\n}, {\n  type: DomSanitizer\n}];\n\nActivityListComponent = __decorate([Component({\n  selector: 'app-activity-list',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ActivityListComponent);\nexport { ActivityListComponent };","map":null,"metadata":{},"sourceType":"module"}