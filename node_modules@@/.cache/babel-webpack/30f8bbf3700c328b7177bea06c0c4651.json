{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./credit-notes-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./credit-notes-list.component.css\";\nimport { Component } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport Constants from 'src/app/pages/fleet/constants';\nimport { AccountService, ApiService } from 'src/app/services';\nlet CreditNotesListComponent = class CreditNotesListComponent {\n  constructor(accountService, apiService, toaster) {\n    this.accountService = accountService;\n    this.apiService = apiService;\n    this.toaster = toaster;\n    this.allCredits = [];\n    this.customers = [];\n    this.lastItemSK = \"\";\n    this.isSearch = false;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.filterData = {\n      customerID: null,\n      startDate: \"\",\n      endDate: \"\",\n      lastItemSK: \"\"\n    };\n  }\n\n  ngOnInit() {\n    this.fetchCredits();\n    this.fetchCustomers();\n  }\n\n  fetchCustomers() {\n    this.apiService.getData(`contacts/get/list`).subscribe(result => {\n      this.customers = result;\n    });\n  }\n\n  fetchCredits(refresh) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (refresh === true) {\n        _this.lastItemSK = \"\";\n        _this.allCredits = [];\n      }\n\n      if (_this.lastItemSK !== \"end\") {\n        _this.accountService.getData(`customer-credits/paging?customer=${_this.filterData.customerID}&startDate=${_this.filterData.startDate}&endDate=${_this.filterData.endDate}&lastKey=${_this.lastItemSK}`).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (result) {\n            if (result.length === 0) {\n              _this.isSearch = false;\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            if (result.length > 0) {\n              _this.isSearch = false;\n              result.map(v => {\n                v.status = v.status.replace(\"_\", \" \");\n\n                _this.allCredits.push(v);\n              });\n\n              if (_this.allCredits[_this.allCredits.length - 1].sk !== undefined) {\n                _this.lastItemSK = encodeURIComponent(_this.allCredits[_this.allCredits.length - 1].sk);\n              } else {\n                _this.lastItemSK = \"end\";\n              } // this.loaded = true;\n\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    })();\n  }\n\n  searchCredits() {\n    if (this.filterData.customerID !== \"\" || this.filterData.startDate !== \"\" || this.filterData.endDate !== \"\" || this.filterData.lastItemSK !== \"\") {\n      if (this.filterData.startDate !== \"\" && this.filterData.endDate === \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filterData.startDate === \"\" && this.filterData.endDate !== \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filterData.startDate > this.filterData.endDate) {\n        this.toaster.error(\"Start date should be less then end date\");\n        return false;\n      } else {\n        this.isSearch = true;\n        this.allCredits = [];\n        this.lastItemSK = \"\";\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.fetchCredits();\n      }\n    }\n  }\n\n  resetFilter() {\n    this.isSearch = true;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.filterData = {\n      customerID: null,\n      startDate: \"\",\n      endDate: \"\",\n      lastItemSK: \"\"\n    };\n    this.lastItemSK = '';\n    this.allCredits = [];\n    this.fetchCredits();\n  }\n\n  deleteCredit(creditID) {\n    if (confirm(\"Are you sure you want to delete?\") === true) {\n      this.accountService.deleteData(`customer-credits/delete/${creditID}`).subscribe(res => {\n        if (res) {\n          this.lastItemSK = '';\n          this.allCredits = [];\n          this.dataMessage = Constants.FETCHING_DATA;\n          this.fetchCredits();\n        }\n      });\n    }\n  }\n\n};\n\nCreditNotesListComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ApiService\n}, {\n  type: ToastrService\n}];\n\nCreditNotesListComponent = __decorate([Component({\n  selector: 'app-credit-notes-list',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], CreditNotesListComponent);\nexport { CreditNotesListComponent };","map":null,"metadata":{},"sourceType":"module"}