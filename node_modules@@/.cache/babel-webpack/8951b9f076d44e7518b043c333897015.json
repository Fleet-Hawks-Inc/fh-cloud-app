{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./invoice-detail.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./invoice-detail.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AccountService, ApiService } from \"../../../../services\";\nimport * as html2pdf from \"html2pdf.js\";\nimport { CountryStateCityService } from \"src/app/services/country-state-city.service\";\nlet InvoiceDetailComponent = class InvoiceDetailComponent {\n  constructor(accountService, route, apiService, countryStateCity) {\n    this.accountService = accountService;\n    this.route = route;\n    this.apiService = apiService;\n    this.countryStateCity = countryStateCity;\n    this.invID = \"\";\n    this.showDetails = false;\n    this.invoice = {\n      invNo: \"\",\n      txnDate: null,\n      invRef: \"\",\n      invCur: \"\",\n      invDueDate: null,\n      invPayTerms: \"\",\n      customerID: null,\n      invSalesman: null,\n      invSubject: \"\",\n      cusAddressID: null,\n      details: [{\n        commodityService: \"\",\n        qtyHours: \"\",\n        priceRate: \"\",\n        amount: 0,\n        amtCur: null,\n        accountID: null\n      }],\n      remarks: \"\",\n      discount: 0,\n      discountUnit: \"%\",\n      invStateProvince: null,\n      invStatus: \"open\",\n      invType: \"manual\",\n      subTotal: 0,\n      taxesInfo: [],\n      transactionLog: [],\n      finalAmount: 0,\n      discountAmount: 0,\n      taxAmount: 0,\n      amountReceived: 0,\n      fullPayment: false,\n      balance: 0,\n      isFeatEnabled: false\n    };\n    this.customerName = \"\";\n    this.customerAddress = \"\";\n    this.customerCityName = \"\";\n    this.customerStateName = \"\";\n    this.customerCountryName = \"\";\n    this.customerZipcode = \"\";\n    this.customerPhone = \"\";\n    this.customerAddressType = \"\";\n    this.customerEmail = \"\";\n    this.customerfax = \"\";\n    this.total = 0;\n    this.customersObjects = {};\n    this.accountsObjects = {};\n    this.accountsIntObjects = {};\n    this.statesObjects = {};\n    this.carrier = {\n      carrierName: \"\",\n      phone: \"\",\n      email: \"\"\n    };\n    this.carrierAddress = {\n      address: \"\",\n      userLocation: \"\",\n      manual: \"\",\n      stateName: \"\",\n      countryName: \"\",\n      cityName: \"\",\n      zipCode: \"\"\n    };\n  }\n\n  ngOnInit() {\n    this.invID = this.route.snapshot.params[`invID`];\n\n    if (this.invID) {\n      this.fetchInvoice();\n    }\n\n    this.fetchCustomersByIDs(); // this.fetchAccountsByIDs();\n    // this.fetchAccountsByInternalIDs();\n\n    this.fetchStatesByIDs();\n  }\n\n  fetchCarrier() {\n    this.apiService.getData(`carriers/${this.invoice[`pk`]}`).subscribe(result => {\n      this.carrier = result.Items[0];\n      this.fetchAddress(this.carrier[`addressDetails`]);\n    });\n  }\n\n  fetchAddress(address) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      for (const adr of address) {\n        if (adr.addressType === \"yard\" && adr.defaultYard === true) {\n          if (adr.manual) {\n            adr.countryName = yield _this.countryStateCity.GetSpecificCountryNameByCode(adr.countryCode);\n            adr.stateName = yield _this.countryStateCity.GetStateNameFromCode(adr.stateCode, adr.countryCode);\n          }\n\n          _this.carrierAddress = adr;\n          _this.showDetails = true;\n          break;\n        }\n      }\n    })();\n  }\n\n  fetchInvoice() {\n    this.accountService.getData(`invoices/detail/${this.invID}`).subscribe(res => {\n      this.invoice = res[0];\n\n      if (!this.invoice.isFeatEnabled) {\n        this.fetchAccountsByIDs();\n        this.fetchAccountsByInternalIDs();\n      }\n\n      this.invoice.invStatus = this.invoice.invStatus.replace(\"_\", \" \");\n      this.invoice.transactionLog.map(v => {\n        v.type = v.type.replace(\"_\", \" \");\n      });\n      this.fetchCustomerByID();\n      this.calculateTotal();\n      this.fetchCarrier(); // fetch carrier details\n    });\n  }\n\n  fetchStatesByIDs() {\n    this.apiService.getData(\"stateTaxes/get/list\").subscribe(result => {\n      this.statesObjects = result;\n    });\n  }\n  /*\r\n   * Get all customers's IDs of names from api\r\n   */\n\n\n  fetchCustomersByIDs() {\n    this.apiService.getData(\"contacts/get/list\").subscribe(result => {\n      this.customersObjects = result;\n    });\n  }\n\n  fetchAccountsByIDs() {\n    this.accountService.getData(\"chartAc/get/list/all\").subscribe(result => {\n      this.accountsObjects = result;\n    });\n  }\n\n  fetchAccountsByInternalIDs() {\n    this.accountService.getData(\"chartAc/get/internalID/list/all\").subscribe(result => {\n      this.accountsIntObjects = result;\n    });\n  }\n\n  calculateTotal() {\n    let midTotal = 0;\n\n    for (const element of this.invoice.details) {\n      midTotal += Number(element.amount);\n    }\n\n    this.total = Number(midTotal) + Number(this.invoice.taxAmount);\n  }\n\n  fetchCustomerByID() {\n    this.apiService.getData(`contacts/detail/${this.invoice.customerID}`).subscribe(result => {\n      if (result.Items.length > 0) {\n        result = result.Items[0];\n        this.customerName = `${result.companyName}`;\n        let newCusAddress = result.address.filter(elem => {\n          if (elem.addressID === this.invoice.cusAddressID) {\n            return elem;\n          }\n        });\n        newCusAddress = newCusAddress[0];\n\n        if (result.address.length > 0) {\n          if (newCusAddress.manual) {\n            this.customerAddress = newCusAddress.address1;\n          } else {\n            this.customerAddress = newCusAddress.userLocation;\n          }\n\n          this.customerAddressType = newCusAddress.addressType;\n          this.customerCityName = newCusAddress.cityName;\n          this.customerStateName = newCusAddress.stateName;\n          this.customerCountryName = newCusAddress.countryName;\n          this.customerZipcode = newCusAddress.zipCode;\n          this.customerPhone = result.workPhone;\n          this.customerEmail = result.workEmail;\n        }\n      }\n    });\n  }\n\n  generatePDF() {\n    const data = document.getElementById(\"print_wrap\");\n    html2pdf(data, {\n      margin: [0.5, 0, 0.5, 0],\n      pagebreak: {\n        mode: \"avoid-all\",\n        before: \"print_wrap\"\n      },\n      filename: `invoice-${this.invoice.invNo}.pdf`,\n      image: {\n        type: \"jpeg\",\n        quality: 0.98\n      },\n      html2canvas: {\n        scale: 2,\n        logging: true,\n        dpi: 192,\n        letterRendering: true\n      },\n      jsPDF: {\n        unit: \"in\",\n        format: \"a4\",\n        orientation: \"portrait\"\n      }\n    });\n  }\n\n};\n\nInvoiceDetailComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ActivatedRoute\n}, {\n  type: ApiService\n}, {\n  type: CountryStateCityService\n}];\n\nInvoiceDetailComponent = __decorate([Component({\n  selector: \"app-invoice-detail\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], InvoiceDetailComponent);\nexport { InvoiceDetailComponent };","map":null,"metadata":{},"sourceType":"module"}