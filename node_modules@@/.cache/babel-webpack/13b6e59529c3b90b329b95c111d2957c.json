{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GoogleMap, MapInfoWindow } from '@angular/google-maps';\nimport * as moment from \"moment\";\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/toast\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/tooltip\";\nimport * as i7 from \"primeng/ripple\";\nimport * as i8 from \"primeng/accordion\";\nimport * as i9 from \"primeng/dropdown\";\nimport * as i10 from \"@rxweb/reactive-form-validators\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"primeng/table\";\nimport * as i14 from \"@angular/google-maps\";\nimport * as i15 from \"primeng/tabview\";\nimport * as i16 from \"primeng/selectbutton\";\nimport * as i17 from \"ngx-echarts\";\n\nfunction AssetTrackerComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function AssetTrackerComponent_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.clearRoutes();\n    });\n    i0.ɵɵtext(1, \"Clear route\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AssetTrackerComponent_p_table_23_ng_template_1_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r13.header, \" \");\n  }\n}\n\nfunction AssetTrackerComponent_p_table_23_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AssetTrackerComponent_p_table_23_ng_template_1_th_1_Template, 2, 1, \"th\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const columns_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r11);\n  }\n}\n\nfunction AssetTrackerComponent_p_table_23_ng_template_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 33);\n    i0.ɵɵlistener(\"click\", function AssetTrackerComponent_p_table_23_ng_template_2_td_1_Template_td_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const rowData_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.onRowSelect(rowData_r14);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r17 = ctx.$implicit;\n    const rowData_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rowData_r14[col_r17.field], \" \");\n  }\n}\n\nfunction AssetTrackerComponent_p_table_23_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AssetTrackerComponent_p_table_23_ng_template_2_td_1_Template, 2, 1, \"td\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const columns_r15 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r15);\n  }\n}\n\nfunction AssetTrackerComponent_p_table_23_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" No data found. Trying increasing duration. \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AssetTrackerComponent_p_table_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-table\", 26);\n    i0.ɵɵtemplate(1, AssetTrackerComponent_p_table_23_ng_template_1_Template, 2, 1, \"ng-template\", 27);\n    i0.ɵɵtemplate(2, AssetTrackerComponent_p_table_23_ng_template_2_Template, 2, 1, \"ng-template\", 28);\n    i0.ɵɵtemplate(3, AssetTrackerComponent_p_table_23_ng_template_3_Template, 4, 0, \"ng-template\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"columns\", ctx_r1.cols)(\"resizableColumns\", true)(\"paginator\", true)(\"rows\", 10)(\"value\", ctx_r1.locationData)(\"loading\", ctx_r1.loading);\n  }\n}\n\nfunction AssetTrackerComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"There is NO Asset Tracker data available for the selected duration. Please update the duration and try again. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AssetTrackerComponent_google_map_27_map_traffic_layer_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"map-traffic-layer\", 42);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"autoRefresh\", true);\n  }\n}\n\nfunction AssetTrackerComponent_google_map_27_map_marker_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"map-marker\", 43, 44);\n    i0.ɵɵlistener(\"mapClick\", function AssetTrackerComponent_google_map_27_map_marker_2_Template_map_marker_mapClick_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const markerPosition_r25 = restoredCtx.$implicit;\n\n      const _r26 = i0.ɵɵreference(1);\n\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.openInfoWindow(_r26, markerPosition_r25.data);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const markerPosition_r25 = ctx.$implicit;\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"position\", markerPosition_r25.location)(\"options\", ctx_r24.markerOptions);\n  }\n}\n\nfunction AssetTrackerComponent_google_map_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"google-map\", 36);\n    i0.ɵɵtemplate(1, AssetTrackerComponent_google_map_27_map_traffic_layer_1_Template, 1, 1, \"map-traffic-layer\", 37);\n    i0.ɵɵtemplate(2, AssetTrackerComponent_google_map_27_map_marker_2_Template, 2, 2, \"map-marker\", 38);\n    i0.ɵɵelement(3, \"map-marker\", 39);\n    i0.ɵɵelement(4, \"map-marker\", 39);\n    i0.ɵɵelement(5, \"map-polyline\", 40);\n    i0.ɵɵelement(6, \"map-info-window\", 41);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"width\", ctx_r3.width)(\"height\", ctx_r3.height)(\"options\", ctx_r3.mapOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showTraffic);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.markerPositions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"position\", ctx_r3.startMarker)(\"options\", ctx_r3.startMarkerOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"position\", ctx_r3.endMarker)(\"options\", ctx_r3.endMarkerOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r3.polylineOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r3.infoDetail, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function AssetTrackerComponent_p_tabView_34_ng_template_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r37);\n      i0.ɵɵnextContext();\n\n      const _r29 = i0.ɵɵreference(4);\n\n      return _r29.exportCSV();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_ng_template_6_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 56);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r40 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r40.header, \" \");\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AssetTrackerComponent_p_tabView_34_ng_template_6_th_1_Template, 2, 1, \"th\", 55);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const columns_r38 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r38);\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_ng_template_7_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r44 = ctx.$implicit;\n    const rowData_r41 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rowData_r41[col_r44.field], \" \");\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AssetTrackerComponent_p_tabView_34_ng_template_7_td_1_Template, 2, 1, \"td\", 57);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const columns_r42 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r42);\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" No data found. Trying increasing duration. \");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 58);\n  }\n\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"options\", ctx_r34.chartOptionFahrenheit);\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 58);\n  }\n\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"options\", ctx_r35.chartOptionCelsius);\n  }\n}\n\nfunction AssetTrackerComponent_p_tabView_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-tabView\");\n    i0.ɵɵelementStart(1, \"p-tabPanel\", 45);\n    i0.ɵɵelementStart(2, \"div\", 46);\n    i0.ɵɵelementStart(3, \"p-table\", 47, 48);\n    i0.ɵɵtemplate(5, AssetTrackerComponent_p_tabView_34_ng_template_5_Template, 1, 0, \"ng-template\", 49);\n    i0.ɵɵtemplate(6, AssetTrackerComponent_p_tabView_34_ng_template_6_Template, 2, 1, \"ng-template\", 27);\n    i0.ɵɵtemplate(7, AssetTrackerComponent_p_tabView_34_ng_template_7_Template, 2, 1, \"ng-template\", 28);\n    i0.ɵɵtemplate(8, AssetTrackerComponent_p_tabView_34_ng_template_8_Template, 4, 0, \"ng-template\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p-tabPanel\", 50);\n    i0.ɵɵelementStart(10, \"div\", 51);\n    i0.ɵɵelementStart(11, \"p-selectButton\", 52);\n    i0.ɵɵlistener(\"onChange\", function AssetTrackerComponent_p_tabView_34_Template_p_selectButton_onChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.changeTempMetric($event);\n    })(\"ngModelChange\", function AssetTrackerComponent_p_tabView_34_Template_p_selectButton_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.selectedMetric = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, AssetTrackerComponent_p_tabView_34_div_12_Template, 1, 1, \"div\", 53);\n    i0.ɵɵtemplate(13, AssetTrackerComponent_p_tabView_34_div_13_Template, 1, 1, \"div\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"resizableColumns\", true)(\"columns\", ctx_r4.sensorDataCols)(\"paginator\", true)(\"rows\", 10)(\"value\", ctx_r4.sensorData)(\"loading\", ctx_r4.sensorLoading);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"options\", ctx_r4.tempMetric)(\"ngModel\", ctx_r4.selectedMetric);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showFahrenheit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.showFahrenheit);\n  }\n}\n\nfunction AssetTrackerComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"There is NO data available for selected duration. Please update the duration and try again or check the Temperature and Humidity sensor connectivity. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class AssetTrackerComponent {\n  /**\r\n   * Constructor\r\n   * @param apiService\r\n   * @param message\r\n   * @param route\r\n   */\n  constructor(apiService, message, route, primengConfig) {\n    this.apiService = apiService;\n    this.message = message;\n    this.route = route;\n    this.primengConfig = primengConfig;\n    this.width = \"100%\";\n    this.height = \"500px\";\n    this.cols = [{\n      field: 'battery',\n      header: 'Battery'\n    }, {\n      field: 'location',\n      header: 'Location'\n    }, {\n      field: 'speed',\n      header: 'Speed'\n    }, {\n      field: 'temperature',\n      header: 'Tracker Temp.'\n    }, {\n      field: 'time',\n      header: 'Time'\n    }];\n    this.sensorDataCols = [{\n      field: 'assetName',\n      header: 'Asset Name'\n    }, {\n      field: 'c_temperature',\n      header: 'Temperature(Celsius)'\n    }, {\n      field: 'f_temperature',\n      header: 'Temperature(Fahrenheit)'\n    }, {\n      field: 'humidity',\n      header: 'Humidity'\n    }, {\n      field: 'time',\n      header: 'Date & Time'\n    }];\n    this.sensorData = [];\n    this.center = {\n      lat: 48.48248695279594,\n      lng: -99.0688673798094\n    };\n    this.mapOptions = {\n      zoomControl: true,\n      mapTypeControl: true,\n      streetViewControl: false,\n      fullscreenControl: true,\n      zoom: 5,\n      mapId: '620eb1a41a9e36d4',\n      zoomControlOptions: {\n        position: google.maps.ControlPosition.RIGHT_TOP\n      },\n      center: this.center\n    };\n    this.locationData = [];\n    this.loading = false;\n    this.lineSymbol = {\n      path: google.maps.SymbolPath.CIRCLE,\n      scale: 8,\n      strokeColor: \"#393\"\n    };\n    this.sensorLoading = false;\n    this.sensorTemperature = [];\n    this.startMarkerOptions = {\n      draggable: false,\n      animation: google.maps.Animation.DROP,\n      title: 'A',\n      label: 'A'\n    };\n    this.endMarkerOptions = {\n      draggable: false,\n      animation: google.maps.Animation.DROP,\n      title: 'B',\n      label: 'B'\n    };\n    this.markerOptions = {\n      draggable: false,\n      animation: google.maps.Animation.DROP\n    };\n    this.noDevices = false;\n    this.pathCoordinates = [];\n    this.durations = [{\n      name: '6 Hours',\n      value: '6h'\n    }, {\n      name: '12 Hours',\n      value: '12h'\n    }, {\n      name: '24 Hours',\n      value: '24h'\n    }, {\n      name: '48 Hours',\n      value: '48h'\n    }, {\n      name: '72 Hours',\n      value: '72h'\n    }, {\n      name: '7 Days',\n      value: '168h'\n    }, {\n      name: '15 Days',\n      value: '360h'\n    }, {\n      name: '1 Month',\n      value: '744h'\n    }];\n    this.selectedDuration = undefined;\n    this.selectedSensorDuration = undefined;\n    this.showTraffic = false;\n    this.bounds = new google.maps.LatLngBounds();\n    /**\r\n     * Triggers when location icon is clicked on table\r\n     * @param event\r\n     */\n\n    this.onRowSelect = event => {\n      if (event && event.cords) {\n        const cords = event.cords.split(\",\");\n        const curPosition = new google.maps.LatLng({\n          lng: parseFloat(cords[0]),\n          lat: parseFloat(cords[1])\n        });\n        this.markerPositions.push({\n          data: event,\n          location: curPosition\n        });\n        this.center = {\n          lng: parseFloat(cords[0]),\n          lat: parseFloat(cords[1])\n        }; //  this.googleMap.googleMap.setCenter(this.center)\n\n        this.zoomIn(16);\n        this.googleMap.googleMap.panTo(curPosition);\n      } else {\n        this.message.add({\n          severity: 'error',\n          summary: 'Location not available',\n          detail: 'Tracker was not able to get GPS signal.'\n        });\n      }\n    };\n\n    this.zoomIncrement = 1;\n    this.zoomFactor = 2.0; // 2.0 - 0.1 (Slower (rough animation), Faster\n\n    this.zoomDecrement = 1;\n    this.fTemp = [];\n    this.cTemp = [];\n    this.tempMetric = [{\n      name: 'F',\n      code: 'F'\n    }, {\n      name: 'C',\n      code: 'C'\n    }];\n    this.selectedMetric = 'F';\n    this.showFahrenheit = true;\n    this.assetID = this.route.snapshot.params.assetId;\n    this.markerPositions = new Array();\n  }\n\n  /**\r\n   * Angular OnInit()\r\n   */\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.primengConfig.ripple = true; // Extract query parameters\n\n      _this.extractQueryParams(); // await this.fetchAsset();\n\n\n      yield _this.getDeviceEventsForDuration(_this.selectedDuration);\n      _this.mapOptions.center = _this.center; // this.googleMap.googleMap.setCenter(this.center);\n\n      _this.polylineOptions = new google.maps.Polyline({\n        strokeColor: 'green',\n        path: _this.vertices\n      });\n      yield _this.getSensorData(_this.selectedSensorDuration.value || _this.selectedSensorDuration.value);\n    })();\n  }\n\n  extractQueryParams() {\n    this.route.queryParams.subscribe(params => {\n      this.assetId = params.assetId;\n    });\n  }\n\n  showTrafficLayer() {\n    this.showTraffic = !this.showTraffic;\n  }\n  /**\r\n   * update map data with selected duration\r\n   */\n\n\n  updateAssetData() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.locationData = [];\n      yield _this2.getDeviceEventsForDuration(_this2.selectedDuration.value);\n    })();\n  }\n  /**\r\n   * Gets Sensor data\r\n   */\n\n\n  updateSensorData() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.sensorData = [];\n      yield _this3.getSensorData(_this3.selectedSensorDuration.value);\n    })();\n  }\n  /**\r\n   * Refresh Data\r\n   */\n\n\n  refreshData() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.getDeviceEventsForDuration(_this4.selectedDuration.value);\n      yield _this4.getSensorData(_this4.selectedSensorDuration.value);\n    })();\n  }\n  /**\r\n   * Open Marker Window\r\n   * @param marker\r\n   * @param data\r\n   */\n\n\n  openInfoWindow(marker, data) {\n    this.infoDetail = `${data.location} <br/>${data.speed} <br/> ${data.temperature}`;\n    this.infoWindow.open(marker);\n  }\n\n  zoomIn(endZoom) {\n    if (this.googleMap.googleMap.getZoom() < endZoom) {\n      this.googleMap.googleMap.setZoom(this.googleMap.googleMap.getZoom() + this.zoomIncrement);\n      setTimeout(() => {\n        this.zoomIn(endZoom);\n      }, this.zoomFactor * 100);\n    }\n  }\n\n  zoomOut(endZoom) {\n    if (this.googleMap.googleMap.getZoom() > endZoom) {\n      this.googleMap.googleMap.setZoom(this.googleMap.googleMap.getZoom() - this.zoomDecrement);\n      setTimeout(() => {\n        this.zoomOut(endZoom);\n      }, this.zoomFactor * 100);\n    }\n  }\n  /**\r\n   * Get Device location for duration\r\n   * @param assetIdentification\r\n   */\n\n\n  getDeviceEventsForDuration(duration = '6h') {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.loading = true;\n      const data = yield _this5.apiService.getData(`assetTrackers/getLocationData/${_this5.assetID}/${duration}`).toPromise();\n\n      if (data && data.length > 0) {\n        for (const item of data) {\n          const stillUtc = moment.utc(item.time).toDate();\n          const localTime = moment(stillUtc).local().format(\"YYYY-MM-DD HH:mm:ss\");\n          item.time = localTime;\n        }\n\n        _this5.locationData = data;\n        _this5.loading = false;\n        const startCords = data[data.length - 1].cords.split(\",\");\n        const endCords = data[0].cords.split(\",\");\n        _this5.center = {\n          lng: parseFloat(startCords[0]),\n          lat: parseFloat(startCords[1])\n        };\n        _this5.startMarker = {\n          lng: parseFloat(startCords[0]),\n          lat: parseFloat(startCords[1])\n        };\n        _this5.endMarker = {\n          lng: parseFloat(endCords[0]),\n          lat: parseFloat(endCords[1])\n        };\n        data.forEach(path => {\n          const cords = path.cords.split(\",\");\n\n          _this5.pathCoordinates.push({\n            lng: parseFloat(cords[0]),\n            lat: parseFloat(cords[1])\n          });\n        });\n\n        _this5.drawPath(data);\n      } else {\n        _this5.noDevices = true;\n        _this5.loading = false;\n      }\n    })();\n  }\n  /**\r\n   * draw path using polyline\r\n   * @param results\r\n   */\n\n\n  drawPath(results) {\n    try {\n      this.vertices = new Array();\n      let cords = results[0].cords.split(\",\");\n      let cords1 = results[results.length - 1].cords.split(\",\");\n      const endCords = {\n        lat: parseFloat(cords1[1]),\n        lng: parseFloat(cords1[0])\n      };\n      cords = results[0].cords.split(\",\");\n      const startCords = {\n        lat: parseFloat(cords[1]),\n        lng: parseFloat(cords[0])\n      };\n\n      for (let way of results) {\n        const cords = way.cords.split(\",\");\n        const latLng = new google.maps.LatLng(parseFloat(cords[1]), parseFloat(cords[0]));\n        this.vertices.push(latLng);\n        this.bounds.extend(latLng);\n      }\n\n      this.polylineOptions = new google.maps.Polyline({\n        strokeColor: 'green',\n        path: this.vertices\n      }); // if (this.googleMap) {\n      //   this.googleMap.googleMap.fitBounds(this.bounds);\n      //   this.googleMap.googleMap.setCenter(this.bounds.getCenter());\n      // }\n    } catch (err) {\n      console.error('Error', err);\n    }\n  }\n  /**\r\n   * create all markers from the map.\r\n   */\n\n\n  clearRoutes() {\n    if (this.googleMap.googleMap.getZoom() > 4) {\n      this.zoomOut(4);\n    }\n\n    this.markerPositions = [];\n  }\n  /**\r\n   * fetch Asset data\r\n   */\n\n\n  fetchAsset() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      _this6.apiService.getData(`assets/${_this6.assetId}`).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (res) {\n          if (res) {\n            let result = res.Items[0];\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(), err => {});\n    })();\n  }\n  /**\r\n   * Gets Sensor data from Cloud Service\r\n   * @param duration selected duration from dropdown\r\n   */\n\n\n  getSensorData(duration = '6h') {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.sensorLoading = true;\n      const data = yield _this7.apiService.getData(`assetTrackers/getSensorData/${_this7.assetID}/bleTemp/${duration}`).toPromise();\n\n      if (data && data.length > 0) {\n        _this7.sensorTemperature = [];\n        _this7.fTemp = [];\n        _this7.cTemp = [];\n\n        for (const res of data) {\n          const time = new Date(res.time).toLocaleString();\n\n          _this7.cTemp.push({\n            name: time,\n            value: res.c_graphTemp\n          });\n\n          _this7.fTemp.push({\n            name: time,\n            value: res.f_graphTemp\n          }); // default is Fahrenheit \n\n\n          _this7.sensorTemperature = _this7.fTemp; // format time\n\n          const updateRes = {\n            assetName: _this7.assetID,\n            time: time,\n            c_temperature: res.temperature,\n            f_temperature: Number((res.temperature * 1.8 + 32).toFixed(2)),\n            humidity: res.humidity\n          };\n\n          _this7.sensorData.push(updateRes);\n        }\n\n        _this7.sensorLoading = false;\n\n        _this7.mapper();\n      } else {\n        _this7.sensorLoading = false;\n      }\n    })();\n  }\n  /**\r\n   * Maps the charts with data and configures rendering options.\r\n   */\n\n\n  mapper() {\n    this.chartOptionCelsius = {\n      tooltip: {\n        trigger: 'axis',\n        position: function (pt) {\n          return [pt[0], '10%'];\n        }\n      },\n      title: {\n        left: 'center',\n        text: 'Asset Temperature'\n      },\n      toolbox: {\n        feature: {\n          dataZoom: {\n            yAxisIndex: 'none'\n          },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      // dataZoom: [\n      //   {\n      //     type: 'inside',\n      //     start: 0,\n      //     end: 50\n      //   },\n      //   {\n      //     start: 0,\n      //     end: 50\n      //   }\n      // ],\n      xAxis: {\n        type: 'time',\n        boundaryGap: false\n      },\n      yAxis: {\n        type: 'value',\n        boundaryGap: [0, '100%'],\n        axisLabel: {\n          formatter: '{value} °C'\n        }\n      },\n      series: [{\n        name: 'Temperature',\n        type: 'line',\n        symbol: 'circle',\n        areaStyle: {},\n        data: this.cTemp\n      }]\n    };\n    this.chartOptionFahrenheit = {\n      tooltip: {\n        trigger: 'axis',\n        position: function (pt) {\n          return [pt[0], '10%'];\n        }\n      },\n      title: {\n        left: 'center',\n        text: 'Asset Temperature'\n      },\n      toolbox: {\n        feature: {\n          dataZoom: {\n            yAxisIndex: 'none'\n          },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      // dataZoom: [\n      //   {\n      //     type: 'inside',\n      //     start: 0,\n      //     end: 50\n      //   },\n      //   {\n      //     start: 0,\n      //     end: 50\n      //   }\n      // ],\n      xAxis: {\n        type: 'time',\n        boundaryGap: false\n      },\n      yAxis: {\n        type: 'value',\n        boundaryGap: [0, '100%'],\n        axisLabel: {\n          formatter: '{value} °F'\n        }\n      },\n      series: [{\n        name: 'Temperature',\n        type: 'line',\n        symbol: 'circle',\n        areaStyle: {},\n        data: this.fTemp\n      }]\n    };\n  }\n\n  changeTempMetric(e) {\n    if (e.value === 'F') {\n      this.showFahrenheit = true;\n    } else {\n      this.showFahrenheit = false;\n    }\n  }\n\n}\n\nAssetTrackerComponent.ɵfac = function AssetTrackerComponent_Factory(t) {\n  return new (t || AssetTrackerComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PrimeNGConfig));\n};\n\nAssetTrackerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AssetTrackerComponent,\n  selectors: [[\"app-asset-tracker\"]],\n  viewQuery: function AssetTrackerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(GoogleMap, 5);\n      i0.ɵɵviewQuery(MapInfoWindow, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.googleMap = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.infoWindow = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([MessageService])],\n  decls: 38,\n  vars: 12,\n  consts: [[\"position\", \"top-right\"], [1, \"body\"], [1, \"inner-wrapper\"], [\"role\", \"main\", 1, \"content-body\", \"pr-0\", \"pt-0\", \"pl-0\"], [1, \"page-header\"], [1, \"row\"], [1, \"col\", \"header-title\"], [1, \"mt-0\", \"mb-0\"], [1, \"col\", \"header-buttons\"], [\"pButton\", \"\", \"pTooltip\", \"Show traffic\", \"icon\", \"fas fa-truck-fast\", \"pRipple\", \"\", \"tooltipPosition\", \"left\", \"pTooltip\", \"Show Traffic\", 1, \"mr-1\", 3, \"click\"], [\"id\", \"btnLiveVideo\", \"type\", \"button\", \"pButton\", \"\", \"tooltipPosition\", \"left\", \"icon\", \"pi pi-refresh\", \"pTooltip\", \"Refresh\", 1, \"mr-1\", 3, \"click\"], [1, \"m-2\"], [\"header\", \"Asset Tracker\", 3, \"selected\"], [1, \"row\", \"mb-3\", \"bg-white\"], [1, \"col-lg-4\", \"p-3\"], [\"optionLabel\", \"name\", 1, \"m-1\", 3, \"options\", \"ngModel\", \"ngModelChange\", \"onChange\"], [\"pButton\", \"\", 3, \"click\", 4, \"ngIf\"], [\"columnResizeMode\", \"expand\", \"styleClass\", \"p-datatable-sm p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"columns\", \"resizableColumns\", \"paginator\", \"rows\", \"value\", \"loading\", 4, \"ngIf\"], [\"class\", \"text-center mr-4 alert alert-info\", 4, \"ngIf\"], [1, \"col-lg-8\"], [1, \"p-3\", \"text-dark\"], [3, \"width\", \"height\", \"options\", 4, \"ngIf\"], [\"header\", \"Temperature\"], [\"id\", \"assetRangeDrp\", \"optionLabel\", \"name\", 1, \"m-3\", 3, \"options\", \"ngModel\", \"ngModelChange\", \"onChange\"], [4, \"ngIf\"], [\"pButton\", \"\", 3, \"click\"], [\"columnResizeMode\", \"expand\", \"styleClass\", \"p-datatable-sm p-datatable-gridlines p-datatable-striped\", \"responsiveLayout\", \"scroll\", 3, \"columns\", \"resizableColumns\", \"paginator\", \"rows\", \"value\", \"loading\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptyMessage\"], [\"pResizableColumn\", \"\", \"style\", \"width:10%\", 4, \"ngFor\", \"ngForOf\"], [\"pResizableColumn\", \"\", 2, \"width\", \"10%\"], [\"style\", \"width:10%;cursor: pointer;\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [2, \"width\", \"10%\", \"cursor\", \"pointer\", 3, \"click\"], [1, \"col-lg-12\", \"mt-3\", \"text-center\"], [1, \"text-center\", \"mr-4\", \"alert\", \"alert-info\"], [3, \"width\", \"height\", \"options\"], [3, \"autoRefresh\", 4, \"ngIf\"], [3, \"position\", \"options\", \"mapClick\", 4, \"ngFor\", \"ngForOf\"], [3, \"position\", \"options\"], [3, \"options\"], [1, \"marker-info\", 3, \"innerHTML\"], [3, \"autoRefresh\"], [3, \"position\", \"options\", \"mapClick\"], [\"marker\", \"mapMarker\"], [\"header\", \"Table View\"], [1, \"card\"], [\"id\", \"sensorTable\", \"styleClass\", \"p-datatable-sm p-datatable-gridlines p-datatable-striped\", \"autoLayout\", \"true\", 2, \"height\", \"500px\", 3, \"resizableColumns\", \"columns\", \"paginator\", \"rows\", \"value\", \"loading\"], [\"sensorDT\", \"\"], [\"pTemplate\", \"caption\"], [\"header\", \"Graph View\"], [2, \"height\", \"500px\"], [\"optionLabel\", \"name\", \"optionValue\", \"code\", 3, \"options\", \"ngModel\", \"onChange\", \"ngModelChange\"], [\"echarts\", \"\", \"style\", \"height:500px\", 3, \"options\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-excel\", \"pTooltip\", \"Export to Excel\", \"tooltipPosition\", \"bottom\", 1, \"mr-2\", 3, \"click\"], [\"pResizableColumn\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"pResizableColumn\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"echarts\", \"\", 2, \"height\", \"500px\", 3, \"options\"]],\n  template: function AssetTrackerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\", 0);\n      i0.ɵɵelementStart(1, \"section\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"section\", 3);\n      i0.ɵɵelementStart(4, \"header\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵelementStart(7, \"label\", 7);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelementStart(10, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AssetTrackerComponent_Template_button_click_10_listener() {\n        return ctx.showTrafficLayer();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function AssetTrackerComponent_Template_button_click_11_listener() {\n        return ctx.refreshData();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"section\", 11);\n      i0.ɵɵelementStart(13, \"p-accordion\");\n      i0.ɵɵelementStart(14, \"p-accordionTab\", 12);\n      i0.ɵɵelementStart(15, \"div\", 13);\n      i0.ɵɵelementStart(16, \"div\", 14);\n      i0.ɵɵelementStart(17, \"label\");\n      i0.ɵɵtext(18, \"Duration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p-dropdown\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function AssetTrackerComponent_Template_p_dropdown_ngModelChange_19_listener($event) {\n        return ctx.selectedDuration = $event;\n      })(\"onChange\", function AssetTrackerComponent_Template_p_dropdown_onChange_19_listener() {\n        return ctx.updateAssetData();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, AssetTrackerComponent_button_20_Template, 2, 0, \"button\", 16);\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵtemplate(23, AssetTrackerComponent_p_table_23_Template, 4, 6, \"p-table\", 17);\n      i0.ɵɵtemplate(24, AssetTrackerComponent_div_24_Template, 4, 0, \"div\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 19);\n      i0.ɵɵelementStart(26, \"div\", 20);\n      i0.ɵɵtemplate(27, AssetTrackerComponent_google_map_27_Template, 7, 11, \"google-map\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"p-accordionTab\", 22);\n      i0.ɵɵelementStart(29, \"label\");\n      i0.ɵɵtext(30, \"Duration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"p-dropdown\", 23);\n      i0.ɵɵlistener(\"ngModelChange\", function AssetTrackerComponent_Template_p_dropdown_ngModelChange_31_listener($event) {\n        return ctx.selectedSensorDuration = $event;\n      })(\"onChange\", function AssetTrackerComponent_Template_p_dropdown_onChange_31_listener() {\n        return ctx.updateSensorData();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelement(33, \"br\");\n      i0.ɵɵtemplate(34, AssetTrackerComponent_p_tabView_34_Template, 14, 10, \"p-tabView\", 24);\n      i0.ɵɵelement(35, \"br\");\n      i0.ɵɵelement(36, \"br\");\n      i0.ɵɵtemplate(37, AssetTrackerComponent_div_37_Template, 4, 0, \"div\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\" Asset : \", ctx.assetID, \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"selected\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"options\", ctx.durations)(\"ngModel\", ctx.selectedDuration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.markerPositions.length > 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.locationData.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.locationData.length === 0 && ctx.loading != true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"options\", ctx.durations)(\"ngModel\", ctx.selectedSensorDuration);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.sensorData.length > 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.sensorData.length === 0 && ctx.sensorLoading != true);\n    }\n  },\n  directives: [i4.Toast, i5.ButtonDirective, i6.Tooltip, i7.Ripple, i8.Accordion, i8.AccordionTab, i9.Dropdown, i10.ɵk, i10.ɵe, i11.NgControlStatus, i11.NgModel, i12.NgIf, i13.Table, i2.PrimeTemplate, i12.NgForOf, i13.ResizableColumn, i14.GoogleMap, i14.MapMarker, i14.MapPolyline, i14.MapInfoWindow, i14.MapTrafficLayer, i15.TabView, i15.TabPanel, i16.SelectButton, i17.NgxEchartsDirective],\n  styles: [\"a[_ngcontent-%COMP%]:hover {\\r\\n  text-decoration: none !important;\\r\\n}\"]\n});","map":null,"metadata":{},"sourceType":"module"}