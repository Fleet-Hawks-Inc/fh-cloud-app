{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \".\";\nexport class CountryStateCityService {\n  /**\r\n   * Constructor\r\n   */\n  constructor(apiService) {\n    var _this = this;\n\n    this.apiService = apiService;\n    /** URL for API's */\n\n    this.getAllCountriesUrl = 'address/getAllCountries';\n    this.getSpecificCountryNameByCode = 'address/getSpecificCountryNameByCode';\n    this.getCitiesByStateCodes = 'address/getCitiesByStateCodes';\n    this.getStateName = 'address/getStateName';\n    this.getCitiesByCountryCode = 'address/getCitiesByCountryCode';\n    this.getStateNameFromCode = 'address/getStateNameFromCode';\n    this.getStatesByCountryCode = 'address/getStatesByCountryCode';\n    /**\r\n     * Get All countries\r\n     * @returns Countries\r\n     */\n\n    this.GetAllCountries = /*#__PURE__*/_asyncToGenerator(function* () {\n      let countries = [];\n      countries = yield _this.apiService.getData(_this.getAllCountriesUrl).toPromise();\n      return countries;\n    });\n    /**\r\n     * Get specific countries defined in array\r\n     * @param countryCode Array of country Code\r\n     * @returns countries\r\n     */\n\n    this.GetSpecificCountryNameByCode = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (countryCode) {\n        const response = yield _this.apiService.getData(`${_this.getSpecificCountryNameByCode}/${countryCode}`).toPromise();\n\n        if (response) {\n          return response.name;\n        } else {\n          return 'Others';\n        }\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    /**\r\n     * Get States for specific countryCode\r\n     * @param countryCodes one or more state code\r\n     * @returns\r\n     */\n\n\n    this.GetStatesByCountryCode = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (countryCodes) {\n        let states = [];\n        states = yield _this.apiService.postData(_this.getStatesByCountryCode, {\n          'codes': countryCodes\n        }).toPromise();\n        return states;\n      });\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    /**\r\n      * Get cities by country code and state code\r\n      * @param countryCodes one or more state code\r\n      * @returns\r\n      */\n\n\n    this.GetCitiesByStateCodes = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (countryCode, stateCode) {\n        let cities = [];\n        cities = yield _this.apiService.getData(`${_this.getCitiesByStateCodes}/${countryCode}/${stateCode}`).toPromise();\n        return cities;\n      });\n\n      return function (_x3, _x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    /**\r\n     * Get State Name\r\n     * @param countryCodes one or more state code\r\n     * @returns\r\n     */\n\n\n    this.GetStateName = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (stateCode) {\n        const response = yield _this.apiService.getData(`${_this.getStateName}/${stateCode}`).toPromise();\n\n        if (response) {\n          return response.name;\n        } else {\n          return 'Others';\n        }\n\n        ;\n      });\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    /**\r\n     * Get cities by countryCode\r\n     * @param countryCode\r\n     * @returns cities\r\n     */\n\n\n    this.GetCitiesByCountryCode = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (countryCode) {\n        let cities = [];\n        cities = yield _this.apiService.getData(`${_this.getCitiesByCountryCode}/${countryCode}`).toPromise();\n        return cities;\n      });\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    /**\r\n    * Get State Name\r\n    * @param countryCodes one or more state code\r\n    * @returns\r\n    */\n\n\n    this.GetStateNameFromCode = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator(function* (stateCode, countryCode) {\n        const response = yield _this.apiService.getData(`${_this.getStateNameFromCode}/${stateCode}/${countryCode}`).toPromise();\n\n        if (response) {\n          return response.name;\n        } else {\n          return 'Others';\n        }\n      });\n\n      return function (_x7, _x8) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n  }\n\n}\n\nCountryStateCityService.ɵfac = function CountryStateCityService_Factory(t) {\n  return new (t || CountryStateCityService)(i0.ɵɵinject(i1.ApiService));\n};\n\nCountryStateCityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CountryStateCityService,\n  factory: CountryStateCityService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module"}