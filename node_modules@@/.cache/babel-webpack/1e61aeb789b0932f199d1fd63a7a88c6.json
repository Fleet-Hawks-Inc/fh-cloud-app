{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./activity-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./activity-list.component.css\";\nimport { Component } from '@angular/core';\nimport { ApiService } from '../../../../../services';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HereMapService } from '../../../../../services';\nimport { HttpClient } from '@angular/common/http';\nimport Constants from 'src/app/pages/fleet/constants';\nimport { environment } from '../../../../../../environments/environment';\nimport { OnboardDefaultService } from '../../../../../services/onboard-default.service';\nimport * as _ from 'lodash';\nlet ActivityListComponent = class ActivityListComponent {\n  constructor(apiService, spinner, toastr, httpClient, hereMap, onboard) {\n    this.apiService = apiService;\n    this.spinner = spinner;\n    this.toastr = toastr;\n    this.httpClient = httpClient;\n    this.hereMap = hereMap;\n    this.onboard = onboard;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.assetTypesObjects = {};\n    this.title = 'Assets List';\n    this.mapView = false;\n    this.listView = true;\n    this.visible = true;\n    this.allData = [];\n    this.autoCarrier = [];\n    this.beverageRack = [];\n    this.flatbed = [];\n    this.controlledTemp = [];\n    this.gondola = [];\n    this.hopper = [];\n    this.horseTrailer = [];\n    this.liveStock = [];\n    this.lowboy = [];\n    this.stake = [];\n    this.stepDeck = [];\n    this.tanker = [];\n    this.checked = false;\n    this.isChecked = false;\n    this.headCheckbox = false;\n    this.assetCheckCount = null;\n    this.allOptions = {};\n    this.reeferOptions = {};\n    this.dryboxOptions = {};\n    this.flatbedOptions = {};\n    this.curtainOptions = {};\n    this.closeResult = '';\n    this.disableSearch = false;\n    this.response = '';\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.Error = '';\n    this.Success = '';\n    this.groupsList = {};\n    this.suggestedAssets = [];\n    this.assetID = '';\n    this.assetType = null;\n    this.assetIdentification = '';\n    this.assetTypeList = {};\n    this.totalRecords = 10;\n    this.pageLength = 10;\n    this.lastEvaluatedKey = '';\n    this.manufacturersObjects = {};\n    this.modelsObjects = {};\n    this.assetPrevEvauatedKeys = [''];\n    this.assetStartPoint = 1;\n    this.assetEndPoint = this.pageLength;\n    this.contactsObjects = [];\n    this.loaded = false;\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value != '') {\n        this.apiService.getData(`assets/suggestion/${value}`).subscribe(result => {\n          this.suggestedAssets = result;\n        });\n      } else {\n        this.suggestedAssets = [];\n      }\n    }, 800);\n  }\n\n  ngOnInit() {\n    this.onboard.checkInspectionForms();\n    this.fetchAssetsCount();\n    this.fetchContacts();\n  }\n\n  setAsset(assetID, assetIdentification) {\n    this.assetIdentification = assetIdentification;\n    this.assetID = assetIdentification;\n    this.suggestedAssets = [];\n  }\n\n  fetchContacts() {\n    this.apiService.getData('contacts/get/list/ownerOperator').subscribe(result => {\n      this.contactsObjects = result;\n    });\n  }\n\n  fetchAssetsCount() {\n    this.apiService.getData('assets/get/count?asset=' + this.assetIdentification + '&assetType=' + this.assetType).subscribe({\n      complete: () => {},\n      error: () => {},\n      next: result => {\n        this.totalRecords = result.Count;\n\n        if (this.assetID !== '' || this.assetType != null) {\n          this.assetEndPoint = this.totalRecords;\n        }\n\n        this.initDataTable();\n      }\n    });\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.initDataTable();\n    }\n\n    this.loaded = false;\n  }\n\n  initDataTable() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.lastEvaluatedKey !== 'end') {\n        const result = yield _this.apiService.getData('assets/fetch/records?asset=' + _this.assetIdentification + '&assetType=' + _this.assetType + '&lastKey=' + _this.lastEvaluatedKey).toPromise();\n\n        if (result.Items.length === 0) {\n          _this.disableSearch = false;\n          _this.dataMessage = Constants.NO_RECORDS_FOUND;\n        }\n\n        _this.suggestedAssets = [];\n        result[`Items`].map(v => {\n          v.url = `/reports/fleet/asset/activity/${v.assetID}`;\n          v.assetType = v.assetType.replace(\"_\", \" \");\n        });\n\n        if (result.Items.length > 0) {\n          _this.disableSearch = false;\n\n          if (result.LastEvaluatedKey !== undefined) {\n            _this.lastEvaluatedKey = encodeURIComponent(result.Items[result.Items.length - 1].assetSK);\n          } else {\n            _this.lastEvaluatedKey = 'end';\n          }\n\n          _this.allData = _this.allData.concat(result.Items);\n          _this.loaded = true;\n        }\n\n        if (result.LastEvaluatedKey == undefined) {\n          _this.lastEvaluatedKey = 'end';\n        }\n      }\n    })();\n  }\n\n  searchFilter() {\n    if (this.assetIdentification !== '' || this.assetType !== null) {\n      this.assetIdentification = this.assetIdentification.toLowerCase();\n\n      if (this.assetID == '') {\n        this.assetID = this.assetIdentification;\n      }\n\n      this.disableSearch = true;\n      this.lastEvaluatedKey = '';\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.allData = [];\n      this.suggestedAssets = [];\n      this.fetchAssetsCount();\n    } else {\n      return false;\n    }\n  }\n\n  resetFilter() {\n    if (this.assetIdentification !== '' || this.assetType !== null) {\n      this.disableSearch = true;\n      this.assetID = '';\n      this.assetIdentification = '';\n      this.lastEvaluatedKey = '';\n      this.assetType = null;\n      this.suggestedAssets = [];\n      this.allData = [];\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.fetchAssetsCount();\n    } else {\n      return false;\n    }\n  }\n\n};\n\nActivityListComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: ToastrService\n}, {\n  type: HttpClient\n}, {\n  type: HereMapService\n}, {\n  type: OnboardDefaultService\n}];\n\nActivityListComponent = __decorate([Component({\n  selector: 'app-activity-list',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ActivityListComponent);\nexport { ActivityListComponent };","map":null,"metadata":{},"sourceType":"module"}