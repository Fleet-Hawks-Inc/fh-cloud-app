{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./add-event.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./add-event.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ApiService } from \"../../../../services\";\nimport { from, Subject, throwError } from \"rxjs\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Auth } from \"aws-amplify\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { Router } from \"@angular/router\";\nimport { HereMapService } from \"../../../../services\";\nimport { debounceTime, distinctUntilChanged, switchMap, catchError, map } from \"rxjs/operators\";\nimport { SafetyService } from \"src/app/services/safety.service\";\nlet AddEventComponent = class AddEventComponent {\n  constructor(apiService, safetyService, toastr, spinner, router, hereMap) {\n    var _this = this;\n\n    this.apiService = apiService;\n    this.safetyService = safetyService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.router = router;\n    this.hereMap = hereMap;\n    this.errors = {};\n    this.event = {\n      vehicleID: null,\n      eventDate: \"\",\n      eventTime: \"\",\n      eventType: null,\n      eventSource: \"manual\",\n      createdBy: \"\",\n      location: {\n        label: \"\",\n        cords: \"\"\n      },\n      notes: \"\",\n      status: \"open\"\n    };\n    this.uploadedPhotos = [];\n    this.uploadedVideos = [];\n    this.carrierID = \"\";\n    this.criticalityType = [{\n      value: \"harshBrake\",\n      name: \"Harsh Brake\"\n    }, {\n      value: \"harshAcceleration\",\n      name: \"Harsh Acceleration\"\n    }, {\n      value: \"highSpeed\",\n      name: \"High Speed\"\n    }, {\n      value: \"highSpeed\",\n      name: \"High Speed\"\n    }, {\n      value: \"impactTilt\",\n      name: \"Impact/Tilt\"\n    }];\n    this.severity = [{\n      value: \"high\",\n      name: \"High\"\n    }, {\n      value: \"medium\",\n      name: \"Medium\"\n    }, {\n      value: \"low\",\n      name: \"Low\"\n    }];\n    this.vehicles = [];\n    this.drivers = [];\n    this.users = [];\n    this.trips = [];\n    this.photoSizeError = \"\";\n    this.videoSizeError = \"\";\n    this.isSuggest = false;\n    this.searchTerm = new Subject();\n    this.uploadedDocs = [];\n    this.disableButton = false;\n    /**\r\n     * Get Current User logged in\r\n     */\n\n    this.getCurrentuser = /*#__PURE__*/_asyncToGenerator(function* () {\n      let result = (yield Auth.currentSession()).getIdToken().payload;\n      _this.currentUser = `${result.firstName} ${result.lastName}`;\n      _this.event.createdBy = _this.currentUser;\n    });\n    this.selectedFileNames = new Map();\n    const date = new Date();\n    this.birthDateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.birthDateMaxLimit = {\n      year: date.getFullYear(),\n      month: 12,\n      day: 31\n    };\n  }\n\n  ngOnInit() {\n    this.fetchVehicles(); // this.fetchDrivers();\n\n    this.disabledButton(); // this.fetchTrips();\n\n    this.searchLocation();\n    this.getCurrentuser();\n  }\n\n  fetchVehicles() {\n    this.apiService.getData(\"vehicles\").subscribe(result => {\n      result.Items.forEach(element => {\n        if (element.isDeleted === 0) {\n          this.vehicles.push(element);\n        }\n      });\n    });\n  }\n\n  fetchDrivers() {\n    this.apiService.getData(\"drivers/safety\").subscribe(result => {\n      this.drivers = result.Items;\n    });\n  }\n\n  fetchUsers() {\n    this.apiService.getData(\"common/users/fetch/records\").subscribe(result => {\n      result.Items.map(i => {\n        i.fullName = i.firstName + \" \" + i.lastName;\n        return i;\n      });\n      this.users = result.Items;\n    });\n  }\n\n  fetchTrips() {\n    this.apiService.getData(\"trips\").subscribe(result => {\n      for (let i = 0; i < result.Items.length; i++) {\n        const element = result.Items[i];\n\n        if (element.isDeleted === 0) {\n          this.trips.push(element);\n        }\n      }\n    });\n  }\n\n  addEvent() {\n    if (!this.isSuggest) {\n      this.toastr.error(\"Please select valid location\");\n      return;\n    }\n\n    this.disableButton = true;\n    this.hideErrors(); // create form data instance\n\n    const formData = new FormData(); // append videos if any\n\n    for (let i = 0; i < this.uploadedVideos.length; i++) {\n      formData.append(\"uploadedVideos\", this.uploadedVideos[i]);\n    } // append docs if any\n\n\n    for (let j = 0; j < this.uploadedPhotos.length; j++) {\n      formData.append(\"uploadedPhotos\", this.uploadedPhotos[j]);\n    } // append other fields\n\n\n    formData.append(\"data\", JSON.stringify(this.event));\n    this.safetyService.postData(\"critical-events\", formData, true).subscribe({\n      complete: () => {},\n      error: err => {\n        this.disableButton = false;\n        from(err.error).pipe(map(val => {\n          val.message = val.message.replace(/\".*\"/, \"This Field\");\n          this.errors[val.context.key] = val.message;\n          this.disableButton = false;\n        })).subscribe({\n          complete: () => {\n            this.disableButton = false;\n            this.throwErrors();\n          },\n          error: () => {\n            this.disableButton = false;\n          },\n          next: () => {}\n        });\n      },\n      next: res => {\n        this.spinner.hide();\n        this.toastr.success(\"Critical event added successfully\");\n        this.router.navigateByUrl(\"/safety/critical-events\");\n      }\n    });\n  }\n\n  throwErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      $('[name=\"' + v + '\"]').after('<label id=\"' + v + '-error\" class=\"error\" for=\"' + v + '\">' + this.errors[v] + \"</label>\").addClass(\"error\");\n    });\n  }\n\n  disabledButton() {\n    if (this.event.vehicleID == \"\" || this.event.vehicleID == null || this.event.eventDate == \"\" || this.event.eventDate == null || this.event.eventTime == null || this.event.eventTime == \"\" || this.event.eventType == \"\" || this.event.eventType == null || this.event.createdBy == \"\" || this.event.location.label == \"\" || this.event.status == \"\" || this.event.eventSource == \"\" || this.event.notes.length > 500) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  hideErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      $('[name=\"' + v + '\"]').removeClass(\"error\").next().remove(\"label\");\n    });\n    this.errors = {};\n  }\n\n  searchLocation() {\n    this.searchTerm.pipe(map(e => {\n      $(e.target).closest(\"div\").addClass(\"show-search__result\");\n      return e.target.value;\n    }), debounceTime(400), distinctUntilChanged(), switchMap(term => {\n      return this.hereMap.searchEntries(term);\n    }), catchError(e => {\n      return throwError(e);\n    })).subscribe(res => {\n      this.searchResults = res;\n    });\n  }\n\n  getAddressDetail(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this2.apiService.getData(`pcMiles/detail/${id}`).toPromise();\n      return result;\n    })();\n  }\n\n  assignLocation(item) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this3.getAddressDetail(item.place_id);\n\n      if (result != undefined) {\n        _this3.event.location.cords = `${result.position.lat},${result.position.lng}`;\n        _this3.event.location.label = item.address;\n        _this3.searchResults = false;\n        _this3.isSuggest = true;\n        $(\"div\").removeClass(\"show-search__result\");\n      } else {\n        _this3.event.location.label = item.address;\n        _this3.event.location.cords = \"0,0\";\n      }\n    })();\n  }\n  /*\r\n   * Selecting files before uploading\r\n   */\n\n\n  selectDocuments(event, obj) {\n    let files = [...event.target.files];\n    let filesSize = 0;\n\n    if (files.length > 5) {\n      this.toastr.error(\"files count limit exceeded\");\n\n      if (obj === \"uploadedPhotos\") {\n        this.photoSizeError = \"files should not be more than 5\";\n      } else {\n        this.videoSizeError = \"files should not be more than 5\";\n      }\n\n      return;\n    }\n\n    if (obj === \"uploadedPhotos\") {\n      this.uploadedPhotos = [];\n\n      for (let i = 0; i < files.length; i++) {\n        filesSize += files[i].size / 1024 / 1024;\n\n        if (filesSize > 10) {\n          this.toastr.error(\"files size limit exceeded\");\n          this.photoSizeError = \"Please select file which have size below 10 MB\";\n          return;\n        } else {\n          this.photoSizeError = \"\";\n          let name = files[i].name.split(\".\");\n          let ext = name[name.length - 1].toLowerCase();\n\n          if (ext == \"jpg\" || ext == \"jpeg\" || ext == \"png\") {\n            this.uploadedPhotos.push(files[i]);\n          } else {\n            this.photoSizeError = \"Only .jpg, .jpeg, .png files allowed\";\n          }\n        }\n      }\n    } else {\n      this.uploadedVideos = [];\n\n      for (let i = 0; i < files.length; i++) {\n        filesSize += files[i].size / 1024 / 1024;\n\n        if (filesSize > 30) {\n          this.toastr.error(\"files size limit exceeded\");\n          this.videoSizeError = \"Please select file which have size below 30 MB\";\n          return;\n        } else {\n          this.videoSizeError = \"\";\n          let name = files[i].name.split(\".\");\n          let ext = name[name.length - 1].toLowerCase();\n\n          if (ext == \"mp4\" || ext == \"mov\") {\n            this.uploadedVideos.push(files[i]);\n          } else {\n            this.videoSizeError = \"Only .mp4 and .mov files allowed\";\n          }\n        }\n      }\n    }\n  }\n\n};\n\nAddEventComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: SafetyService\n}, {\n  type: ToastrService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: Router\n}, {\n  type: HereMapService\n}];\n\nAddEventComponent = __decorate([Component({\n  selector: \"app-add-event\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AddEventComponent);\nexport { AddEventComponent };","map":null,"metadata":{},"sourceType":"module"}