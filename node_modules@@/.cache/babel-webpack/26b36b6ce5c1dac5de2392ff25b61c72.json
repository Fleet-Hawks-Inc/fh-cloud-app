{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./incident-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./incident-list.component.css\";\nimport { Component } from '@angular/core';\nimport { ApiService, HereMapService } from '../../../../services';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { SafetyService } from 'src/app/services/safety.service';\nimport Constants from 'src/app/pages/fleet/constants';\nlet IncidentListComponent = class IncidentListComponent {\n  constructor(apiService, hereMapService, safetyService, router, toaster) {\n    this.apiService = apiService;\n    this.hereMapService = hereMapService;\n    this.safetyService = safetyService;\n    this.router = router;\n    this.toaster = toaster;\n    this.events = [];\n    this.newEvents = [];\n    this.lastEvaluatedKey = '';\n    this.totalRecords = 20;\n    this.pageLength = 10;\n    this.coachingStatus = [{\n      value: 'open',\n      name: 'Open'\n    }, {\n      value: 'closed',\n      name: 'Closed'\n    }, {\n      value: 'underReview',\n      name: 'Under Review'\n    }, {\n      value: 'coaching',\n      name: 'Coaching'\n    }, {\n      value: 'investigating',\n      name: 'Investigating'\n    }];\n    this.vehicles = [];\n    this.vehicleID = '';\n    this.serviceUrl = '';\n    this.filter = {\n      date: null,\n      driverID: null\n    };\n    this.suggestions = [];\n    this.vehiclesObject = {};\n    this.driversObject = {};\n    this.usersObject = {};\n    this.status_values = [\"open\", \"investigating\", \"coaching\", \"closed\"];\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.drivers = [];\n    this.lastItemSK = '';\n    const date = new Date();\n    this.birthDateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.birthDateMaxLimit = {\n      year: date.getFullYear(),\n      month: 12,\n      day: 31\n    };\n  }\n\n  ngOnInit() {\n    this.fetchEvents();\n    this.fetchVehicles();\n    this.fetchAllVehiclesIDs();\n    this.fetchAllDriverIDs();\n    this.fetchAllUsersIDs();\n    this.fetchDrivers();\n  }\n\n  changeStatus(incidentID, newValue, i) {\n    var _this = this;\n\n    let data = {\n      incidentID: incidentID,\n      status: newValue\n    };\n    this.safetyService.putData('incidents', data).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (res) {\n        if (res.status == false) {\n          _this.events[i].status = res.oldStatus;\n\n          _this.toaster.error('Please select valid status');\n        } else {\n          _this.toaster.success('Status updated successfully');\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  fetchEvents(refresh) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (refresh === true) {\n        _this2.lastItemSK = '';\n        _this2.events = [];\n      }\n\n      if (_this2.lastItemSK !== 'end') {\n        _this2.safetyService.getData(`incidents?lastKey=${_this2.lastItemSK}`).subscribe( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (result) {\n            if (result.length === 0) {\n              _this2.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            result.map(v => {\n              v.url = `/safety/incidents/incident-details/${v.incidentID}`;\n            });\n\n            if (result.length > 0) {\n              for (let index = 0; index < result.length; index++) {\n                const element = result[index];\n\n                _this2.events.push(element);\n              }\n\n              if (_this2.events[_this2.events.length - 1].sk != undefined) {\n                _this2.lastItemSK = encodeURIComponent(_this2.events[_this2.events.length - 1].sk);\n              } else {\n                _this2.lastItemSK = 'end';\n              }\n\n              _this2.newEvents = _this2.events;\n            }\n          });\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      }\n    })();\n  }\n\n  onScroll() {\n    this.fetchEvents();\n  }\n\n  fetchVehicles() {\n    this.apiService.getData('vehicles').subscribe(result => {\n      this.vehicles = result.Items;\n    });\n  }\n\n  searchEvent() {\n    var _this3 = this;\n\n    this.dataMessage = Constants.FETCHING_DATA;\n\n    if (this.filter.date == '' || this.filter.driverID == '') {\n      this.filter.date = 'null';\n      this.filter.driverID = 'null';\n    }\n\n    this.safetyService.getData(`incidents/paging?driverID=${this.filter.driverID}&date=${this.filter.date}`).subscribe( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (result) {\n        if (result.length == 0) {\n          _this3.dataMessage = Constants.NO_RECORDS_FOUND;\n        }\n\n        _this3.events = result;\n      });\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  }\n\n  fetchTabData(tabType) {\n    if (this.filter.date != '' || this.filter.date != null || this.filter.driverID != '' || this.filter.driverID != null) {\n      this.filter.date = '';\n      this.filter.driverID = null;\n    }\n\n    this.events = this.newEvents;\n    $(\".navtabs\").removeClass('active');\n\n    if (tabType === 'all') {\n      $(\"#allSafetyIncidents-tab\").addClass('active');\n      this.events = this.newEvents;\n    } else if (tabType === 'assigned') {\n      $(\"#assigned-tab\").addClass('active');\n      this.events = this.events.filter(element => {\n        return element.status != 'assigned';\n      });\n    } else if (tabType === 'coaching') {\n      $(\"#coaching-tab\").addClass('active');\n      this.events = this.events.filter(element => {\n        return element.status == 'coaching';\n      });\n    } else if (tabType === 'investigating') {\n      $(\"#under-review-tab\").addClass('active');\n      this.events = this.events.filter(element => {\n        return element.status == 'investigating';\n      });\n    } else if (tabType === 'closed') {\n      $(\"#resolved-tab\").addClass('active');\n      this.events = this.events.filter(element => {\n        return element.status == 'closed';\n      });\n    }\n\n    if (this.events.length == 0) {\n      this.dataMessage = Constants.NO_RECORDS_FOUND;\n    }\n  }\n\n  fetchDrivers() {\n    this.apiService.getData('drivers/safety').subscribe(result => {\n      this.drivers = result.Items;\n    });\n  }\n\n  resetFilter() {\n    if (this.filter.date !== '' || this.filter.driverID !== '') {\n      this.lastItemSK = '';\n      this.events = [];\n      this.fetchEvents();\n      this.filter = {\n        date: null,\n        driverID: null\n      };\n    } else {\n      return false;\n    }\n  }\n\n  fetchAllVehiclesIDs() {\n    this.apiService.getData('vehicles/get/list').subscribe(result => {\n      this.vehiclesObject = result;\n    });\n  }\n\n  fetchAllDriverIDs() {\n    this.apiService.getData('drivers/get/list').subscribe(result => {\n      this.driversObject = result;\n    });\n  }\n\n  fetchAllUsersIDs() {\n    this.apiService.getData('common/users/get/list').subscribe(result => {\n      this.usersObject = result;\n    });\n  }\n\n  convertTimeFormat(time) {\n    // Check correct time format and split into components\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n    if (time.length > 1) {\n      // If time format correct\n      time = time.slice(1); // Remove full string match value\n\n      time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n\n    return time.join(''); // return adjusted time or original string\n  }\n\n  refreshData() {\n    this.lastItemSK = '';\n    this.events = [];\n    this.fetchEvents();\n    this.filter = {\n      date: null,\n      driverID: null\n    };\n  }\n\n};\n\nIncidentListComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: HereMapService\n}, {\n  type: SafetyService\n}, {\n  type: Router\n}, {\n  type: ToastrService\n}];\n\nIncidentListComponent = __decorate([Component({\n  selector: 'app-incident-list',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], IncidentListComponent);\nexport { IncidentListComponent };","map":null,"metadata":{},"sourceType":"module"}