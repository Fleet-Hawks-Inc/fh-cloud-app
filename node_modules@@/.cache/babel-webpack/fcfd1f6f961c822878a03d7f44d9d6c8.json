{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./revenue-detail.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./revenue-detail.component.css\";\nimport { Component } from '@angular/core';\nimport { ApiService, AccountService } from 'src/app/services';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from \"@angular/router\";\nimport * as moment from 'moment';\nimport Constants from 'src/app/pages/fleet/constants';\nlet RevenueDetailComponent = class RevenueDetailComponent {\n  constructor(apiService, accountService, toastr, route) {\n    this.apiService = apiService;\n    this.accountService = accountService;\n    this.toastr = toastr;\n    this.route = route; // vehicleId = null;\n\n    this.start = null;\n    this.end = null;\n    this.allData = [];\n    this.vehicleData = [];\n    this.lastItemSK = '';\n    this.datee = '';\n    this.fuel = [];\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.loaded = false;\n    this.vehicleIdentification = '';\n    this.suggestedVehicles = [];\n    this.totalQty = 0;\n    this.invData = [];\n    this.orderIDs = [];\n  }\n\n  ngOnInit() {\n    this.end = moment().format(\"YYYY-MM-DD\");\n    this.start = moment().subtract(1, 'months').format('YYYY-MM-DD');\n    this.vehicleId = this.route.snapshot.params[`vehicleId`];\n    this.fetchRevenueData(); // this.fetchFuel()\n    // this.fetchVehicleName()\n\n    this.fetchInvoices();\n  }\n\n  fetchVehicleName() {\n    this.apiService.getData(`vehicles/fetch/detail/${this.vehicleId}`).subscribe(result => {\n      this.vehicleData = result.Items;\n    });\n  }\n\n  fetchRevenueData() {\n    this.apiService.getData(`vehicles/fetch/revenue/report?vehicle=${this.vehicleId}&startDate=${this.start}&endDate=${this.end}&lastKey=${this.lastItemSK}&date=${this.datee}`).subscribe(result => {\n      this.allData = this.allData.concat(result.Items);\n\n      if (result.Items.length === 0) {\n        this.dataMessage = Constants.NO_RECORDS_FOUND;\n      } // for (let veh of this.allData) {\n      //   let dataa = veh\n      //   for (let driv of dataa.orderId) {\n      //     this.orderIDs.push(driv)\n      //     console.log(' this.orderIDs====', this.orderIDs)\n      //   }\n      // }\n\n\n      for (let element of this.allData) {\n        for (let elem of element.orderId) {\n          this.orderIDs.push(elem);\n        }\n      }\n\n      if (result.LastEvaluatedKey !== undefined) {\n        this.lastItemSK = encodeURIComponent(result.LastEvaluatedKey.tripSK);\n        this.datee = encodeURIComponent(result.LastEvaluatedKey.dateCreated);\n      } else {\n        this.lastItemSK = 'end';\n      }\n\n      this.loaded = true;\n    });\n  }\n\n  fetchInvoices() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('this.order', _this.orderIDs);\n      const result = yield _this.accountService.getData(`order-invoice/get/invoice/byOrder?orders=${encodeURIComponent(JSON.stringify(_this.orderIDs))}&startDate=${_this.start}&endDate=${_this.end}`).toPromise();\n      _this.invData = result; // console.log('tissinvData',this.invData)\n    })();\n  } // onScroll() {\n  //   if (this.loaded) {\n  //     this.fetchRevenueData();\n  //     // this.fetchFuel();\n  //     // this.fetchVehicleName();\n  //   }\n  //   this.loaded = false;\n  // }\n\n\n  searchFilter() {\n    if (this.start != null && this.end != null) {\n      if (this.start != null && this.end == null) {\n        this.toastr.error('Please select both start and end dates.');\n        return false;\n      } else if (this.start == null && this.end != null) {\n        this.toastr.error('Please select both start and end dates.');\n        return false;\n      } else if (this.start > this.end) {\n        this.toastr.error('Start Date should be less then end date.');\n        return false;\n      } else {\n        this.lastItemSK = '';\n        this.allData = [];\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.fetchRevenueData(); // this.fetchVehicleName();\n      }\n    } else {\n      return false;\n    }\n  }\n\n  fetchFuel() {\n    this.apiService.getData(`fuelEntries/getBy/vehicle/trips/${this.vehicleId}?startDate=${this.start}&endDate=${this.end}`).subscribe(result => {\n      this.fuel = result.Items;\n      let total = 0;\n\n      for (let element of this.fuel) {\n        if (element.data && element.data.qty) {\n          total += parseFloat(element.data.qty);\n        }\n      }\n\n      this.totalQty = total;\n    });\n  }\n\n};\n\nRevenueDetailComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: AccountService\n}, {\n  type: ToastrService\n}, {\n  type: ActivatedRoute\n}];\n\nRevenueDetailComponent = __decorate([Component({\n  selector: 'app-revenue-detail',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RevenueDetailComponent);\nexport { RevenueDetailComponent };","map":null,"metadata":{},"sourceType":"module"}