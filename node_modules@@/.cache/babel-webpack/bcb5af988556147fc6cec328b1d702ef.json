{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./chart-of-accounts-details.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./chart-of-accounts-details.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AccountService, ApiService } from \"../../../../services\";\nimport Constants from \"../../../fleet/constants\";\nimport { ToastrService } from \"ngx-toastr\";\nlet ChartOfAccountsDetailsComponent = class ChartOfAccountsDetailsComponent {\n  constructor(accountService, toaster, route, apiService) {\n    this.accountService = accountService;\n    this.toaster = toaster;\n    this.route = route;\n    this.apiService = apiService;\n    this.dataMsgUsd = Constants.FETCHING_DATA;\n    this.dataMsgCad = Constants.FETCHING_DATA;\n    this.customersObject = {};\n    this.drivers = {};\n    this.categories = {};\n    this.empList = {};\n    this.actID = \"\";\n    this.account = {\n      className: \"\",\n      first: \"\",\n      last: \"\",\n      actName: \"\",\n      actClassID: \"\",\n      actType: \"\",\n      actNo: 0,\n      actDesc: \"\",\n      actDash: false,\n      opnBalCAD: 0,\n      opnBalTypeCAD: \"debit\",\n      actDate: \"\",\n      closingAmtCAD: 0,\n      transactionLogCAD: [],\n      opnBalUSD: 0,\n      opnBalTypeUSD: \"debit\",\n      closingAmtUSD: 0,\n      transactionLogUSD: [],\n      isFeatEnabled: true\n    };\n    this.periodVarianceCAD = 0;\n    this.periodVarianceUSD = 0;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.accountsClassObjects = {};\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.filter = {\n      startDate: null,\n      endDate: null\n    };\n    this.merged = {};\n    this.lastKey = \"\";\n    this.transactionLogCAD = [];\n    this.transactionLogUSD = [];\n    this.currTab = \"CAD\";\n    this.loaded = false;\n    this.lastTimestamp = \"\";\n    this.lastKeyUsd = \"\";\n    this.lastTimestampUsd = \"\";\n    this.isLoad = false;\n    this.isLoadText = \"Load More\";\n    this.closingAmountCad = 0;\n    this.closingAmountUsd = 0;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.route.queryParams.subscribe(params => {\n        if (params.startDate) {\n          _this.filter.startDate = params.startDate;\n          _this.filter.endDate = params.endDate;\n        }\n      });\n\n      _this.actID = _this.route.snapshot.params[`actID`];\n\n      if (_this.actID) {\n        yield _this.fetchAccount();\n        yield _this.logsCADPaging();\n      }\n    })();\n  }\n\n  fetchAccountClassByIDs() {\n    this.accountService.getData(\"chartAc/get/accountClass/list/all\").subscribe(result => {\n      this.accountsClassObjects = result;\n    });\n  }\n\n  getEntityList() {\n    this.apiService.getData(\"contacts/get/list\").subscribe(result => {\n      this.customersObject = result;\n\n      if (result) {\n        this.apiService.getData(`drivers/get/list`).subscribe(result1 => {\n          this.drivers = result1;\n\n          if (result1) {\n            this.accountService.getData(`income/categories/list`).subscribe(res => {\n              this.categories = res;\n\n              if (res) {\n                this.apiService.getData(\"contacts/get/emp/list\").subscribe(empList => {\n                  this.empList = empList;\n                  this.merged = Object.assign(Object.assign(Object.assign(Object.assign({}, this.customersObject), this.drivers), this.categories), this.empList);\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  fetchAccount() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield _this2.accountService.getData(`chartAc/account/${_this2.actID}`).toPromise();\n      _this2.account = res;\n\n      if (!_this2.account.isFeatEnabled) {\n        _this2.fetchAccountClassByIDs();\n\n        _this2.getEntityList();\n\n        _this2.transactionLogCAD = res.transactionLogCAD;\n        _this2.transactionLogUSD = res.transactionLogUSD;\n\n        for (const element of _this2.account.transactionLogCAD) {\n          element.type = element.type.replace(/_/g, \" \");\n        }\n\n        for (const element of _this2.account.transactionLogUSD) {\n          element.type = element.type.replace(/_/g, \" \");\n        }\n      }\n\n      _this2.closingAmountCad = res.closingAmtCAD;\n      _this2.closingAmountUsd = res.closingAmtUSD; // -----\n\n      _this2.account[`first`] = _this2.account.actName.substring(0, _this2.account.actName.indexOf(\" \"));\n      _this2.account[`last`] = _this2.account.actName.substring(_this2.account.actName.indexOf(\" \") + 1, _this2.account.actName.length);\n      _this2.periodVarianceCAD = Math.abs(Math.abs(Number(_this2.account.opnBalCAD)) - Math.abs(Number(_this2.account.closingAmtCAD)));\n      _this2.periodVarianceUSD = Math.abs(Math.abs(Number(_this2.account.opnBalUSD)) - Math.abs(Number(_this2.account.closingAmtUSD)));\n    })();\n  }\n\n  logsCADPaging() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3.lastKey !== \"end\") {\n        const res = yield _this3.accountService.getData(`chartAc/logs/pagination/CAD/${_this3.actID}?lastkey=${_this3.lastKey}&recTime=${_this3.lastTimestamp}&start=${_this3.filter.startDate}&end=${_this3.filter.endDate}`).toPromise();\n        _this3.lastKey = \"end\";\n\n        if (res.length === 0) {\n          _this3.dataMsgCad = Constants.NO_RECORDS_FOUND;\n        }\n\n        if (res.length > 0) {\n          if (res[res.length - 1].sk !== undefined) {\n            _this3.lastKey = encodeURIComponent(res[res.length - 1].sk);\n          }\n\n          if (res[res.length - 1].trxCreated !== undefined) {\n            _this3.lastTimestamp = encodeURIComponent(res[res.length - 1].trxCreated);\n          }\n        }\n\n        res.map(v => {\n          v.entityType = v.entityType.replace(/_/g, \" \");\n          v.desc = v.desc.replace(/_/g, \" \");\n        });\n        _this3.loaded = true;\n        _this3.transactionLogCAD = _this3.transactionLogCAD.concat(res);\n\n        if (_this3.filter.startDate && _this3.filter.startDate !== null && _this3.filter.endDate && _this3.filter.endDate !== null) {\n          _this3.calculateSearchVarianceCAD();\n        }\n      }\n    })();\n  }\n\n  logsUSDPaging() {\n    if (this.lastKeyUsd !== \"end\") {\n      this.accountService.getData(`chartAc/logs/pagination/USD/${this.actID}?lastkey=${this.lastKeyUsd}&recTime=${this.lastTimestampUsd}&start=${this.filter.startDate}&end=${this.filter.endDate}`).subscribe(res => {\n        this.lastKeyUsd = \"end\";\n\n        if (res.length === 0) {\n          this.dataMsgUsd = Constants.NO_RECORDS_FOUND;\n        }\n\n        if (res.length > 0) {\n          if (res[res.length - 1].sk !== undefined) {\n            this.lastKeyUsd = encodeURIComponent(res[res.length - 1].sk);\n          }\n\n          if (res[res.length - 1].trxCreated !== undefined) {\n            this.lastTimestampUsd = encodeURIComponent(res[res.length - 1].trxCreated);\n          }\n        }\n\n        res.map(v => {\n          v.entityType = v.entityType.replace(/_/g, \" \");\n        });\n        this.loaded = true;\n        this.transactionLogUSD = this.transactionLogUSD.concat(res);\n\n        if (this.filter.startDate && this.filter.startDate !== null && this.filter.endDate && this.filter.endDate !== null) {\n          this.calculateSearchVarianceUSD();\n        }\n      });\n    }\n  }\n\n  searchFilter() {\n    if (this.filter.endDate !== null || this.filter.startDate !== null) {\n      if (this.filter.startDate !== \"\" && this.filter.endDate === \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filter.startDate === \"\" && this.filter.endDate !== \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filter.startDate > this.filter.endDate) {\n        this.toaster.error(\"Start date should be less than end date\");\n        return false;\n      } else {\n        if (!this.account.isFeatEnabled) {\n          this.account = {\n            className: \"\",\n            first: \"\",\n            last: \"\",\n            actName: \"\",\n            actType: \"\",\n            actNo: 0,\n            actClassID: \"\",\n            actDash: false,\n            actDesc: \"\",\n            opnBalCAD: 0,\n            opnBalTypeCAD: \"debit\",\n            actDate: \"\",\n            closingAmtCAD: 0,\n            transactionLogCAD: [],\n            opnBalUSD: 0,\n            opnBalTypeUSD: \"debit\",\n            closingAmtUSD: 0,\n            transactionLogUSD: [],\n            isFeatEnabled: false\n          };\n          this.dataMessage = Constants.FETCHING_DATA;\n          this.fetchDetails();\n        } else {\n          if (this.currTab === \"CAD\") {\n            this.lastKey = \"\";\n            this.lastTimestamp = \"\";\n            this.lastKeyUsd = \"\";\n            this.lastTimestampUsd = \"\";\n            this.dataMsgCad = Constants.FETCHING_DATA;\n            this.dataMsgUsd = Constants.FETCHING_DATA;\n            this.transactionLogCAD = [];\n            this.transactionLogUSD = [];\n            this.periodVarianceCAD = 0;\n            this.periodVarianceUSD = 0;\n            this.account.closingAmtCAD = 0;\n            this.account.closingAmtUSD = 0;\n            this.logsCADPaging();\n          } else if (this.currTab === \"USD\") {\n            this.lastKeyUsd = \"\";\n            this.lastTimestampUsd = \"\";\n            this.dataMsgUsd = Constants.FETCHING_DATA;\n            this.dataMsgCad = Constants.FETCHING_DATA;\n            this.lastKey = \"\";\n            this.lastTimestamp = \"\";\n            this.transactionLogUSD = [];\n            this.transactionLogCAD = [];\n            this.periodVarianceCAD = 0;\n            this.periodVarianceUSD = 0;\n            this.account.closingAmtCAD = 0;\n            this.account.closingAmtUSD = 0;\n            this.logsUSDPaging();\n          }\n        }\n      }\n    }\n  }\n\n  resetFilter() {\n    if (!this.account.isFeatEnabled) {\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.filter = {\n        startDate: null,\n        endDate: null\n      };\n      this.fetchAccount();\n    } else {\n      this.filter.startDate = null;\n      this.filter.endDate = null;\n\n      if (this.currTab === \"CAD\") {\n        this.lastKey = \"\";\n        this.lastTimestamp = \"\";\n        this.lastKeyUsd = \"\";\n        this.lastTimestampUsd = \"\";\n        this.dataMsgCad = Constants.FETCHING_DATA;\n        this.dataMsgUsd = Constants.FETCHING_DATA;\n        this.transactionLogCAD = [];\n        this.transactionLogUSD = [];\n        this.periodVarianceCAD = 0;\n        this.periodVarianceUSD = 0;\n        this.account.closingAmtCAD = 0;\n        this.account.closingAmtUSD = 0;\n        this.logsCADPaging();\n      } else if (this.currTab === \"USD\") {\n        this.lastKeyUsd = \"\";\n        this.lastTimestampUsd = \"\";\n        this.dataMsgUsd = Constants.FETCHING_DATA;\n        this.dataMsgCad = Constants.FETCHING_DATA;\n        this.lastKey = \"\";\n        this.lastTimestamp = \"\";\n        this.transactionLogUSD = [];\n        this.transactionLogCAD = [];\n        this.periodVarianceCAD = 0;\n        this.periodVarianceUSD = 0;\n        this.account.closingAmtCAD = 0;\n        this.account.closingAmtUSD = 0;\n        this.logsUSDPaging();\n      }\n\n      this.calculateVariance();\n    }\n  }\n\n  fetchDetails() {\n    this.accountService.getData(`chartAc/search/detail-page?actID=${this.actID}&startDate=${this.filter.startDate}&endDate=${this.filter.endDate}`).subscribe(result => {\n      this.account = result[0];\n      this.periodVarianceCAD = 0;\n\n      for (const element of this.account.transactionLogCAD) {\n        element.type = element.type.replace(/_/g, \" \");\n      }\n\n      if (this.account.closingAmtCAD > this.account.opnBalCAD) {\n        this.periodVarianceCAD = +(this.account.closingAmtCAD - this.account.opnBalCAD).toFixed(2);\n      } else if (this.account.opnBalCAD > this.account.closingAmtCAD && this.account.closingAmtCAD > 0) {\n        this.periodVarianceCAD = +(this.account.opnBalCAD - this.account.closingAmtCAD).toFixed(2);\n      } else if (this.account.opnBalCAD > this.account.closingAmtCAD && this.account.closingAmtCAD === 0) {\n        this.periodVarianceCAD = +(this.account.opnBalCAD - this.account.closingAmtCAD).toFixed(2);\n      } else if (this.account.opnBalCAD === this.account.closingAmtCAD) {\n        this.periodVarianceCAD = +(this.account.closingAmtCAD - this.account.opnBalCAD).toFixed(2);\n      } else if (this.account.closingAmtCAD < 0 && this.account.opnBalCAD > 0) {\n        this.periodVarianceCAD = +(this.account.opnBalCAD + this.account.closingAmtCAD).toFixed(2);\n      } else if (this.account.opnBalCAD === 0 && this.account.closingAmtCAD < 0) {\n        this.periodVarianceCAD = -1 * +this.account.closingAmtCAD.toFixed(2);\n      }\n\n      this.periodVarianceUSD = 0;\n\n      for (const element of this.account.transactionLogUSD) {\n        element.type = element.type.replace(/_/g, \" \");\n      }\n\n      if (this.account.closingAmtUSD > this.account.opnBalUSD) {\n        this.periodVarianceUSD = +(this.account.closingAmtUSD - this.account.opnBalUSD).toFixed(2);\n      } else if (this.account.opnBalUSD > this.account.closingAmtUSD && this.account.closingAmtUSD > 0) {\n        this.periodVarianceUSD = +(this.account.opnBalUSD - this.account.closingAmtUSD).toFixed(2);\n      } else if (this.account.opnBalUSD > this.account.closingAmtUSD && this.account.closingAmtUSD === 0) {\n        this.periodVarianceUSD = +(this.account.opnBalUSD - this.account.closingAmtUSD).toFixed(2);\n      } else if (this.account.opnBalUSD === this.account.closingAmtUSD) {\n        this.periodVarianceUSD = +(this.account.closingAmtUSD - this.account.opnBalUSD).toFixed(2);\n      } else if (this.account.closingAmtUSD < 0 && this.account.opnBalUSD > 0) {\n        this.periodVarianceUSD = +(this.account.opnBalUSD + this.account.closingAmtUSD).toFixed(2);\n      } else if (this.account.opnBalUSD === 0 && this.account.closingAmtUSD < 0) {\n        this.periodVarianceUSD = -1 * +this.account.closingAmtUSD.toFixed(2);\n      }\n    });\n  }\n\n  onScroll() {\n    if (this.loaded && this.account.isFeatEnabled) {\n      this.isLoad = true;\n      this.isLoadText = \"Loading\";\n\n      if (this.currTab === \"CAD\") {\n        this.logsCADPaging();\n      } else if (this.currTab === \"USD\") {\n        this.logsUSDPaging();\n      }\n    }\n\n    this.loaded = false;\n  }\n\n  changeTab(type) {\n    this.currTab = type;\n\n    if (this.currTab === \"CAD\") {\n      if (this.transactionLogCAD.length == 0) {\n        this.logsCADPaging();\n      }\n    } else if (this.currTab === \"USD\") {\n      if (this.transactionLogUSD.length == 0) {\n        this.logsUSDPaging();\n      }\n    }\n  }\n\n  calculateSearchVarianceCAD() {\n    let amount = this.account.opnBalTypeCAD === \"debit\" ? this.account.opnBalCAD : -this.account.opnBalCAD;\n\n    for (const element of this.transactionLogCAD) {\n      if (element.trxType === \"debit\") {\n        amount += Number(element.amount);\n      } else if (element.trxType === \"credit\") {\n        amount -= Number(element.amount);\n      }\n    }\n\n    this.account.closingAmtCAD = amount;\n    this.periodVarianceCAD = Math.abs(Number(this.account.opnBalCAD) - Number(this.account.closingAmtCAD));\n  }\n\n  calculateSearchVarianceUSD() {\n    let amount = this.account.opnBalTypeUSD === \"debit\" ? this.account.opnBalUSD : -this.account.opnBalUSD;\n\n    for (const element of this.transactionLogUSD) {\n      if (element.trxType === \"debit\") {\n        amount += Number(element.amount);\n      } else if (element.trxType === \"credit\") {\n        amount -= Number(element.amount);\n      }\n    }\n\n    this.account.closingAmtUSD = amount;\n    this.periodVarianceUSD = Math.abs(Number(this.account.opnBalUSD) - Number(this.account.closingAmtUSD));\n  }\n\n  calculateVariance() {\n    this.account.closingAmtCAD = this.closingAmountCad;\n    this.account.closingAmtUSD = this.closingAmountUsd;\n    this.periodVarianceCAD = Math.abs(Number(this.account.opnBalCAD) - Number(this.account.closingAmtCAD));\n    this.periodVarianceUSD = Math.abs(Number(this.account.opnBalUSD) - Number(this.account.closingAmtUSD));\n  }\n\n};\n\nChartOfAccountsDetailsComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ToastrService\n}, {\n  type: ActivatedRoute\n}, {\n  type: ApiService\n}];\n\nChartOfAccountsDetailsComponent = __decorate([Component({\n  selector: \"app-chart-of-accounts-details\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ChartOfAccountsDetailsComponent);\nexport { ChartOfAccountsDetailsComponent };","map":null,"metadata":{},"sourceType":"module"}