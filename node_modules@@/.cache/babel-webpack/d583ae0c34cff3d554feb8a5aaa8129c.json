{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./general-ledger-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./general-ledger-list.component.css\";\nimport { Component } from \"@angular/core\";\nimport * as _ from \"lodash\";\nimport { AccountService } from \"../../../../../services\";\nimport Constants from \"../../../../fleet/constants\";\nlet GeneralLedgerListComponent = class GeneralLedgerListComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.lastItemSK = \"\";\n    this.actName = null;\n    this.actType = null;\n    this.disableSearch = false;\n    this.loaded = false;\n    this.accounts = [];\n    this.filter = {\n      actType: null,\n      actName: null,\n      startDate: null,\n      endDate: null\n    };\n    this.start = null;\n    this.end = null;\n    this.isLoadText = \"Load More...\";\n    this.isLoad = false;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n  }\n\n  ngOnInit() {\n    this.fetchAccounts();\n  }\n\n  searchAccounts() {\n    if (this.filter.actType !== \"\" || this.filter.actType !== null || this.filter.actName !== null || this.filter.actName !== \"\" || this.filter.startDate !== null || this.filter.endDate !== null) {\n      this.disableSearch = true;\n      this.start = this.filter.startDate;\n      this.end = this.filter.endDate;\n      this.accounts = [];\n      this.lastItemSK = \"\";\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.fetchAccounts();\n    }\n  }\n\n  resetFilter() {\n    this.disableSearch = true;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.filter = {\n      actType: null,\n      actName: null,\n      startDate: null,\n      endDate: null\n    };\n    this.start = null;\n    this.end = null;\n    this.lastItemSK = \"\";\n    this.accounts = [];\n    this.fetchAccounts();\n  }\n\n  fetchAccounts(refresh) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (refresh === true) {\n        _this.lastItemSK = \"\";\n        _this.accounts = [];\n      }\n\n      if (_this.lastItemSK !== \"end\") {\n        let name = null;\n        let type = null;\n\n        if (_this.filter.actType !== null || _this.filter.actName !== null) {\n          if (_this.filter.actType !== null && _this.filter.actType !== \"\") {\n            type = _this.filter.actType;\n          }\n\n          if (_this.filter.actName !== null && _this.filter.actName !== \"\") {\n            name = _this.filter.actName.toLowerCase();\n          }\n\n          _this.dataMessage = Constants.FETCHING_DATA;\n        }\n\n        _this.accountService.getData(`chartAc/ledger/report/paging?actName=${name}&actType=${type}&lastKey=${_this.lastItemSK}&start=${_this.start}&end=${_this.end}`).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (result) {\n            if (result.length === 0) {\n              _this.disableSearch = false;\n              _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            }\n\n            if (result.length > 0) {\n              _this.disableSearch = false;\n              result.map(v => {\n                v.first = v.actName.substring(0, v.actName.indexOf(\" \"));\n                v.last = v.actName.substring(v.actName.indexOf(\" \") + 1, v.actName.length);\n\n                _this.accounts.push(v);\n              });\n\n              if (_this.accounts[_this.accounts.length - 1].sk !== undefined) {\n                _this.lastItemSK = encodeURIComponent(_this.accounts[_this.accounts.length - 1].sk);\n              } else {\n                _this.lastItemSK = \"end\";\n              }\n\n              const newArray = _.sortBy(_this.accounts, [\"actNo\"]); // sort by account number\n\n\n              _this.accounts = newArray;\n              _this.loaded = true;\n            }\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    })();\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.isLoad = true;\n      this.isLoadText = \"Loading\";\n      this.fetchAccounts();\n    }\n\n    this.loaded = false;\n  }\n\n};\n\nGeneralLedgerListComponent.ctorParameters = () => [{\n  type: AccountService\n}];\n\nGeneralLedgerListComponent = __decorate([Component({\n  selector: \"app-general-ledger-list\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], GeneralLedgerListComponent);\nexport { GeneralLedgerListComponent };","map":null,"metadata":{},"sourceType":"module"}