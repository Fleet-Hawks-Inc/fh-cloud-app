{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./receipts-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./receipts-list.component.css\";\nimport { Component } from \"@angular/core\";\nimport { AccountService, ApiService } from \"./../../../../services\";\nimport { ToastrService } from \"ngx-toastr\";\nimport Constants from \"../../../fleet/constants\";\nlet ReceiptsListComponent = class ReceiptsListComponent {\n  constructor(accountService, toaster, toastr, apiService) {\n    this.accountService = accountService;\n    this.toaster = toaster;\n    this.toastr = toastr;\n    this.apiService = apiService;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.receipts = [];\n    this.customersObjects = {};\n    this.accountsObject = {};\n    this.lastItemSK = \"\";\n    this.filter = {\n      startDate: null,\n      endDate: null,\n      recNo: null,\n      customer: null\n    };\n    this.loaded = false;\n    this.disableSearch = false;\n    this.recTotal = {\n      cadTotal: 0,\n      usdTotal: 0\n    };\n    this.storeTotal = {\n      cadTotal: 0,\n      usdTotal: 0\n    };\n  }\n\n  ngOnInit() {\n    this.lastItemSK = \"\";\n    this.receipts = [];\n    this.getReceiptTotal();\n    this.fetchReceipts();\n    this.fetchCustomersByIDs();\n    this.fetchAccounts();\n  }\n\n  fetchReceipts(refresh) {\n    var _this = this;\n\n    let searchParam = null;\n\n    if (refresh === true) {\n      this.lastItemSK = \"\";\n      this.receipts = [];\n    }\n\n    if (this.lastItemSK !== \"end\") {\n      if (this.filter.recNo !== null && this.filter.recNo !== \"\") {\n        searchParam = encodeURIComponent(`\"${this.filter.recNo}\"`);\n      } else {\n        searchParam = null;\n      }\n\n      this.accountService.getData(`receipts/paging?recNo=${searchParam}&startDate=${this.filter.startDate}&endDate=${this.filter.endDate}&customer=${this.filter.customer}&lastKey=${this.lastItemSK}`).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (result) {\n          if (result.length === 0) {\n            _this.dataMessage = Constants.NO_RECORDS_FOUND;\n            _this.disableSearch = false;\n          }\n\n          if (result.length > 0) {\n            _this.disableSearch = false;\n\n            for (const element of result) {\n              _this.receipts.push(element);\n            }\n\n            _this.calculateSearchTotal();\n\n            if (_this.receipts[_this.receipts.length - 1].sk !== undefined) {\n              _this.lastItemSK = encodeURIComponent(_this.receipts[_this.receipts.length - 1].sk);\n            } else {\n              _this.lastItemSK = \"end\";\n            }\n\n            _this.loaded = true;\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n\n  calculateSearchTotal() {\n    if (this.filter.recNo !== null || this.filter.startDate !== null || this.filter.endDate !== null || this.filter.customer !== null) {\n      this.receipts.forEach(element => {\n        if (element.recAmountCur == \"CAD\") {\n          this.recTotal.cadTotal += element.recAmount;\n        } else if (element.recAmountCur == \"USD\") {\n          this.recTotal.usdTotal += element.recAmount;\n        }\n      });\n    }\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.fetchReceipts();\n    }\n\n    this.loaded = false;\n  }\n\n  deleteReceipt(recID) {\n    this.accountService.deleteData(`receipts/delete/${recID}`).subscribe(res => {\n      if (res !== undefined) {\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.receipts = [];\n        this.lastItemSK = \"\";\n        this.fetchReceipts();\n        this.toastr.success(\"Receipt Deleted Successfully.\");\n      }\n    });\n  }\n  /*\r\n   * Get all customers's IDs of names from api\r\n   */\n\n\n  fetchCustomersByIDs() {\n    this.apiService.getData(\"contacts/get/list\").subscribe(result => {\n      this.customersObjects = result;\n    });\n  }\n\n  fetchAccounts() {\n    this.accountService.getData(`chartAc/get/list/all`).subscribe(result => {\n      this.accountsObject = result;\n    });\n  }\n\n  searchFilter() {\n    this.lastItemSK = \"\";\n\n    if (this.filter.endDate !== null || this.filter.startDate !== null || this.filter.recNo !== null || this.filter.customer !== null) {\n      this.disableSearch = true;\n      this.dataMessage = Constants.FETCHING_DATA;\n\n      if (this.filter.startDate !== \"\" && this.filter.endDate === \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filter.startDate === \"\" && this.filter.endDate !== \"\") {\n        this.toaster.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.filter.startDate > this.filter.endDate) {\n        this.toaster.error(\"Start date should be less than end date\");\n        return false;\n      } else {\n        this.receipts = [];\n        this.lastItemSK = \"\";\n        this.recTotal.cadTotal = 0;\n        this.recTotal.usdTotal = 0;\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.fetchReceipts();\n      }\n    }\n  }\n\n  resetFilter() {\n    this.disableSearch = true;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.filter = {\n      startDate: null,\n      endDate: null,\n      recNo: null,\n      customer: null\n    };\n    this.receipts = [];\n    this.lastItemSK = \"\";\n    this.recTotal = this.storeTotal;\n    this.fetchReceipts();\n  }\n\n  refreshData() {\n    this.disableSearch = true;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.filter = {\n      startDate: null,\n      endDate: null,\n      recNo: null,\n      customer: null\n    };\n    this.receipts = [];\n    this.lastItemSK = \"\";\n    this.fetchReceipts();\n    this.getReceiptTotal();\n  }\n\n  getReceiptTotal() {\n    this.accountService.getData(`receipts/get/total`).subscribe(res => {\n      this.recTotal = res;\n      this.storeTotal = {\n        cadTotal: res.cadTotal,\n        usdTotal: res.usdTotal\n      };\n    });\n  }\n\n};\n\nReceiptsListComponent.ctorParameters = () => [{\n  type: AccountService\n}, {\n  type: ToastrService\n}, {\n  type: ToastrService\n}, {\n  type: ApiService\n}];\n\nReceiptsListComponent = __decorate([Component({\n  selector: \"app-receipts-list\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ReceiptsListComponent);\nexport { ReceiptsListComponent };","map":null,"metadata":{},"sourceType":"module"}