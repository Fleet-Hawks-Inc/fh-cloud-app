{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Optional, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\n\nclass InputText {\n  constructor(el, ngModel, cd) {\n    this.el = el;\n    this.ngModel = ngModel;\n    this.cd = cd;\n  }\n\n  ngAfterViewInit() {\n    this.updateFilledState();\n    this.cd.detectChanges();\n  }\n\n  ngDoCheck() {\n    this.updateFilledState();\n  }\n\n  onInput(e) {\n    this.updateFilledState();\n  }\n\n  updateFilledState() {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length || this.ngModel && this.ngModel.model;\n  }\n\n}\n\nInputText.ɵfac = function InputText_Factory(t) {\n  return new (t || InputText)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NgModel, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nInputText.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: InputText,\n  selectors: [[\"\", \"pInputText\", \"\"]],\n  hostAttrs: [1, \"p-inputtext\", \"p-component\", \"p-element\"],\n  hostVars: 2,\n  hostBindings: function InputText_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function InputText_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-filled\", ctx.filled);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputText, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputText]',\n      host: {\n        'class': 'p-inputtext p-component p-element',\n        '[class.p-filled]': 'filled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.NgModel,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\n\nclass InputTextModule {}\n\nInputTextModule.ɵfac = function InputTextModule_Factory(t) {\n  return new (t || InputTextModule)();\n};\n\nInputTextModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputTextModule\n});\nInputTextModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputText],\n      declarations: [InputText]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InputText, InputTextModule }; //# sourceMappingURL=primeng-inputtext.mjs.map","map":null,"metadata":{},"sourceType":"module"}