{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./driver-summary.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./driver-summary.component.css\";\nimport { Component, ViewChild, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services';\nimport { environment } from 'src/environments/environment';\nimport Constants from 'src/app/pages/fleet/constants';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HereMapService } from 'src/app/services/here-map.service';\nimport * as _ from 'lodash';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { OnboardDefaultService } from 'src/app/services/onboard-default.service';\nlet DriverSummaryComponent = class DriverSummaryComponent {\n  constructor(apiService, router, toastr, spinner, hereMap, onboard) {\n    var _this = this;\n\n    this.apiService = apiService;\n    this.router = router;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.hereMap = hereMap;\n    this.onboard = onboard;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.drivers = [];\n    this.title = \"Driver Summary\";\n    this.driverID = '';\n    this.driversCount = {\n      total: '',\n      active: '',\n      inactive: ''\n    };\n    this.driverStatus = null;\n    this.driverName = '';\n    this.fullExportDriver = [];\n    this.lastItemSK = '';\n    this.suggestedDrivers = [];\n    this.disableSearch = false;\n    this.loaded = false;\n    this.loadMsg = Constants.NO_LOAD_DATA;\n    this.isSearch = false;\n    this.listView = true;\n    this.visible = true;\n    this.get = _.get;\n    this.dataColumns = [{\n      field: 'firstName',\n      header: 'First Name',\n      type: \"text\"\n    }, {\n      field: 'lastName',\n      header: 'Last Name',\n      type: \"text\"\n    }, {\n      field: 'email',\n      header: 'Email',\n      type: \"text\"\n    }, {\n      field: 'userName',\n      header: 'Username',\n      type: \"text\"\n    }, {\n      field: 'driverType',\n      header: 'Driver Type',\n      type: \"text\"\n    }, {\n      field: 'startDate',\n      header: 'Start Date',\n      type: \"text\"\n    }, {\n      field: 'DOB',\n      header: 'Date of Birth',\n      type: \"text\"\n    }, {\n      field: 'CDL_Number',\n      header: 'CDL#',\n      type: \"text\"\n    }, {\n      field: 'licenceExpiry',\n      header: 'Licence Expiry',\n      type: \"text\"\n    }, {\n      field: 'licStateName',\n      header: 'Licence Province',\n      type: \"text\"\n    }, {\n      field: 'phone',\n      header: 'Phone',\n      type: \"text\"\n    }, {\n      field: \"driverStatus\",\n      header: 'Status',\n      type: 'text'\n    }];\n\n    this.onScroll = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        if (_this.loaded) {\n          _this.fetchPagination();\n        }\n\n        _this.loaded = false;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value != \"\") {\n        this.loadMsg = Constants.LOAD_DATA;\n        this.apiService.getData(`drivers/get/suggestions/${value}`).subscribe(result => {\n          if (result.length === 0) {\n            this.suggestedDrivers = [];\n            this.loadMsg = Constants.NO_LOAD_FOUND;\n          }\n\n          if (result.length > 0) {\n            result.map(v => {\n              if (v.middleName != undefined && v.middleName != '') {\n                v.fullName = `${v.firstName} ${v.middleName} ${v.lastName}`;\n              } else {\n                v.fullName = `${v.firstName} ${v.lastName}`;\n              }\n\n              return v;\n            });\n            this.suggestedDrivers = result;\n          } else {}\n        });\n      } else {\n        this.suggestedDrivers = [];\n      }\n    }, 800);\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.fetchDriversCount();\n\n      _this2.fetchPagination();\n\n      _this2.setToggleOptions();\n\n      _this2.setDriverOptions();\n    })();\n  }\n\n  setToggleOptions() {\n    this.selectedColumns = this.dataColumns;\n  }\n\n  setDriverOptions() {\n    this.driverOptions = [{\n      \"value\": \"active\",\n      \"name\": \"Active\"\n    }, {\n      \"value\": \"inActive\",\n      \"name\": \"InActive\"\n    }];\n  }\n\n  get selectedColumns() {\n    return this._selectedColumns;\n  }\n\n  set selectedColumns(val) {\n    //restore original order\n    this._selectedColumns = this.dataColumns.filter(col => val.includes(col));\n  }\n\n  fetchPagination(refresh) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (refresh === true) {\n        _this3.lastItemSK = '';\n        _this3.drivers = [];\n      }\n\n      if (_this3.lastItemSK !== 'end') {\n        const result = yield _this3.apiService.getData(`drivers/fetch/records?driver=${_this3.driverID}&driverStatus=${_this3.driverStatus}&lastKey=${_this3.lastItemSK}`).toPromise();\n\n        if (result.data.length === 0) {\n          _this3.dataMessage = Constants.NO_RECORDS_FOUND;\n        }\n\n        _this3.suggestedDrivers = [];\n\n        if (result.nextPage !== undefined) {\n          _this3.lastItemSK = encodeURIComponent(result.nextPage);\n        } else {\n          _this3.lastItemSK = 'end';\n        }\n\n        _this3.drivers = _this3.drivers.concat(result.data);\n        _this3.loaded = true;\n        _this3.isSearch = false;\n      }\n    })();\n  }\n\n  fetchDriversCount() {\n    this.apiService.getData(`drivers/fetch/driverCount`).subscribe(result => {\n      this.driversCount = result;\n    });\n  }\n\n  setDriver(driverID) {\n    if (driverID != undefined && driverID != '') {\n      this.driverID = driverID;\n    }\n\n    this.loadMsg = Constants.NO_LOAD_DATA;\n  }\n\n  searchDriver() {\n    if (this.driverID !== '' || this.driverStatus !== null) {\n      this.isSearch = true;\n      this.drivers = []; // this.suggestedDrivers = [];\n\n      this.lastItemSK = '';\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.fetchPagination();\n    } else {\n      return false;\n    }\n  }\n\n  clearInput() {\n    this.suggestedDrivers = null;\n  }\n\n  clearSuggestions() {\n    this.driverName = '';\n  }\n\n  resetDriver() {\n    if (this.driverID !== '' || this.driverStatus !== null || this.lastItemSK !== '') {\n      //this.ngSelectComponent.handleClearClick();\n      this.driverName = '';\n      this.isSearch = true;\n      this.driverID = '';\n      this.driverStatus = null;\n      this.lastItemSK = '';\n      this.drivers = [];\n      this.loaded = false;\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.suggestedDrivers = null;\n      this.fetchPagination();\n    } else {\n      return false;\n    }\n  }\n\n  refreshData() {\n    this.drivers = [];\n    this.driverID = '';\n    this.driverStatus = null;\n    this.driverName = '';\n    this.lastItemSK = '';\n    this.loaded = false;\n    this.fetchPagination();\n    this.dataMessage = Constants.FETCHING_DATA;\n  }\n  /**\r\n   * Clears the table filters\r\n   * @param table Table\r\n   */\n\n\n  clear(table) {\n    table.clear();\n  }\n\n};\n\nDriverSummaryComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: Router\n}, {\n  type: ToastrService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: HereMapService\n}, {\n  type: OnboardDefaultService\n}];\n\nDriverSummaryComponent.propDecorators = {\n  table: [{\n    type: ViewChild,\n    args: ['dt']\n  }],\n  ngSelectComponent: [{\n    type: ViewChild,\n    args: [NgSelectComponent]\n  }],\n  selectedColumns: [{\n    type: Input\n  }]\n};\nDriverSummaryComponent = __decorate([Component({\n  selector: 'app-driver-summary',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], DriverSummaryComponent);\nexport { DriverSummaryComponent };","map":null,"metadata":{},"sourceType":"module"}