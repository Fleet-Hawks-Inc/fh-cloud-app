{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./asset-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./asset-list.component.css\";\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { ApiService } from '../../../../services';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HereMapService } from '../../../../services';\nimport { HttpClient } from '@angular/common/http';\nimport Constants from '../../constants';\nimport { environment } from '../../../../../environments/environment';\nimport { OnboardDefaultService } from '../../../../services/onboard-default.service';\nimport * as _ from 'lodash';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nlet AssetListComponent = class AssetListComponent {\n  constructor(apiService, spinner, toastr, httpClient, hereMap, onboard) {\n    var _this = this;\n\n    this.apiService = apiService;\n    this.spinner = spinner;\n    this.toastr = toastr;\n    this.httpClient = httpClient;\n    this.hereMap = hereMap;\n    this.onboard = onboard;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.assetTypesObjects = {};\n    this.title = 'Assets List';\n    this.mapView = false;\n    this.listView = true;\n    this.visible = true;\n    this.allData = [];\n    this.autoCarrier = [];\n    this.beverageRack = [];\n    this.flatbed = [];\n    this.controlledTemp = [];\n    this.gondola = [];\n    this.hopper = [];\n    this.horseTrailer = [];\n    this.liveStock = [];\n    this.lowboy = [];\n    this.stake = [];\n    this.stepDeck = [];\n    this.tanker = [];\n    this.checked = false;\n    this.isChecked = false;\n    this.headCheckbox = false;\n    this.assetCheckCount = null;\n    this.allOptions = {};\n    this.reeferOptions = {};\n    this.dryboxOptions = {};\n    this.flatbedOptions = {};\n    this.curtainOptions = {};\n    this.closeResult = '';\n    this.response = '';\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.Error = '';\n    this.Success = '';\n    this.hideShow = {\n      vin: true,\n      assetName: true,\n      type: true,\n      plateNo: true,\n      lastLocation: true,\n      year: true,\n      make: true,\n      model: false,\n      ownership: true,\n      currentStatus: true,\n      group: false,\n      aceID: false,\n      aciID: false,\n      gvwr: false,\n      gawr: false,\n      companyName: true,\n      safetyDate: true\n    };\n    this.groupsList = {};\n    this.suggestedAssets = [];\n    this.assetID = '';\n    this.assetType = null;\n    this.assetIdentification = '';\n    this.assetTypeList = {};\n    this.totalRecords = 10;\n    this.pageLength = 10;\n    this.lastEvaluatedKey = '';\n    this.manufacturersObjects = {};\n    this.modelsObjects = {};\n    this.assetNext = false;\n    this.assetPrev = true;\n    this.assetDraw = 0;\n    this.assetPrevEvauatedKeys = [''];\n    this.assetStartPoint = 1;\n    this.assetEndPoint = this.pageLength;\n    this.contactsObjects = [];\n    this.loaded = false;\n    this.lastItemSK = '';\n    this.loadMsg = Constants.NO_LOAD_DATA;\n    this.get = _.get;\n    this.isSearch = false;\n    this.dataColumns = [{\n      width: '10%',\n      field: 'assetIdentification',\n      header: 'Asset Name/Number',\n      type: \"text\"\n    }, {\n      width: '8%',\n      field: 'VIN',\n      header: 'VIN',\n      type: \"text\"\n    }, {\n      width: '8%',\n      field: 'assetType',\n      header: 'Asset Type',\n      type: \"text\"\n    }, {\n      width: '8%',\n      field: 'manufacturer',\n      header: 'Make',\n      type: \"text\"\n    }, {\n      width: '10%',\n      field: 'licencePlateNumber',\n      header: 'Licence Plate Number',\n      type: \"text\"\n    }, {\n      width: '6%',\n      field: 'year',\n      header: 'Year',\n      type: \"text\"\n    }, {\n      width: '8%',\n      field: 'ownerShip',\n      header: 'Ownership',\n      type: \"text\"\n    }, {\n      width: '10%',\n      field: 'ownCname',\n      header: 'Company Name',\n      type: \"text\"\n    }, {\n      width: '11%',\n      field: 'annualSafetyDate',\n      header: 'Annual Safety Date',\n      type: \"text\"\n    }, {\n      width: '6%',\n      field: \"currentStatus\",\n      header: 'Status',\n      type: 'text'\n    }, {\n      width: '8%',\n      field: 'isImport',\n      header: 'Added By',\n      type: \"text\"\n    }];\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value != '') {\n        this.loadMsg = Constants.LOAD_DATA;\n        this.apiService.getData(`assets/suggestion/${value}`).subscribe(result => {\n          if (result.length === 0) {\n            this.suggestedAssets = [];\n            this.loadMsg = Constants.NO_LOAD_FOUND;\n          }\n\n          if (result.length > 0) {\n            this.suggestedAssets = result;\n          } else {\n            this.suggestedAssets = [];\n          }\n        });\n      } else {\n        this.suggestedAssets = [];\n      }\n    }, 800);\n\n    this.onScroll = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        if (_this.loaded) {\n          _this.initDataTable();\n        }\n\n        _this.loaded = false;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.setToggleOptions();\n\n      _this2.setAssetOptions();\n\n      _this2.onboard.checkInspectionForms();\n\n      _this2.fetchGroups();\n\n      yield _this2.initDataTable();\n\n      _this2.fetchContacts();\n    })();\n  }\n\n  setToggleOptions() {\n    this.selectedColumns = this.dataColumns;\n  }\n\n  setAssetOptions() {\n    this.assetOptions = [{\n      \"value\": \"container\",\n      \"name\": \"Container\"\n    }, {\n      \"value\": \"double_drop\",\n      \"name\": \"Double Drop\"\n    }, {\n      \"value\": \"dump_trailer\",\n      \"name\": \"Dump Trailer\"\n    }, {\n      \"value\": \"flat_bed\",\n      \"name\": \"Flat bed\"\n    }, {\n      \"value\": \"lowboy\",\n      \"name\": \"Lowboy\"\n    }, {\n      \"value\": \"stepDeck\",\n      \"name\": \"StepDeck\"\n    }, {\n      \"value\": \"removable_gooseneck\",\n      \"name\": \"Removable Gooseneck\"\n    }, {\n      \"value\": \"dry_van\",\n      \"name\": \"Dry Van\"\n    }, {\n      \"value\": \"reefer\",\n      \"name\": \"Reefer\"\n    }, {\n      \"value\": \"power_only\",\n      \"name\": \"Power Only\"\n    }, {\n      \"value\": \"conestoga_trailer\",\n      \"name\": \"Conestoga Trailer\"\n    }, {\n      \"value\": \"side_kit_trailer\",\n      \"name\": \"Side Kit Trailer\"\n    }, {\n      \"value\": \"enclosed_trailer\",\n      \"name\": \"Enclosed Trailer\"\n    }, {\n      \"value\": \"scrap_trailer\",\n      \"name\": \"Scrap Trailer\"\n    }, {\n      \"value\": \"semi_trailer\",\n      \"name\": \"Semi Trailer\"\n    }, {\n      \"value\": \"chassis\",\n      \"name\": \"Chassis\"\n    }, {\n      \"value\": \"tank_trailer\",\n      \"name\": \"Tank Trailer\"\n    }];\n  }\n\n  get selectedColumns() {\n    return this._selectedColumns;\n  }\n\n  set selectedColumns(val) {\n    //restore original order\n    this._selectedColumns = this.dataColumns.filter(col => val.includes(col));\n  }\n\n  setAsset(assetIdentification) {\n    if (assetIdentification != undefined && assetIdentification != '') {\n      this.assetIdentification = assetIdentification;\n    }\n\n    this.loadMsg = Constants.NO_LOAD_DATA; //this.suggestedAssets = [];\n  }\n\n  fetchGroups() {\n    this.apiService.getData('groups/get/list').subscribe(result => {\n      this.groupsList = result;\n    });\n  } // fetchManufacturesByIDs() {\n  //   this.apiService.getData('assetManufacturers/get/list').subscribe((result: any) => {\n  //     this.manufacturersObjects = result;\n  //   });\n  // }\n  // fetchModalsByIDs() {\n  //   this.apiService.getData('assetModels/get/list').subscribe((result: any) => {\n  //     this.modelsObjects = result;\n  //   });\n  // }\n\n\n  fetchContacts() {\n    this.apiService.getData('contacts/get/list/ownerOperator').subscribe(result => {\n      this.contactsObjects = result;\n    });\n  }\n\n  someClickHandler(info) {\n    this.message = info.id + ' - ' + info.firstName;\n  }\n\n  deleteAsset(eventData) {\n    ; // }\n\n    if (confirm('Are you sure you want to delete?') === true) {\n      // let record = {\n      //   date: eventData.createdDate,\n      //   time: eventData.createdTime,\n      //   eventID: eventData.assetID,\n      //   status: eventData.currentStatus\n      // }\n      this.apiService.deleteData(`assets/delete/${eventData.assetID}/${eventData.assetIdentification}`).subscribe(result => {\n        this.allData = [];\n        this.assetDraw = 0;\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.lastEvaluatedKey = '';\n        this.initDataTable();\n        this.toastr.success('Asset Deleted Successfully!');\n      });\n    }\n  }\n\n  mapShow() {\n    this.mapView = true;\n    this.listView = false;\n    setTimeout(() => {\n      this.hereMap.mapInit();\n    }, 500);\n  }\n\n  valuechange() {\n    this.visible = !this.visible;\n  }\n\n  initDataTable() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3.lastEvaluatedKey !== 'end') {\n        let result = yield _this3.apiService.getData('assets/fetch/records?asset=' + _this3.assetIdentification + '&assetType=' + _this3.assetType + '&lastKey=' + _this3.lastEvaluatedKey).toPromise();\n\n        if (result.data.length === 0) {\n          _this3.dataMessage = Constants.NO_RECORDS_FOUND;\n          _this3.loaded = true;\n        }\n\n        result.data.map(v => {\n          v.url = `/fleet/assets/detail/${v.assetID}`;\n        });\n\n        if (result.nextPage !== undefined) {\n          _this3.lastEvaluatedKey = encodeURIComponent(result.nextPage);\n        } else {\n          _this3.lastEvaluatedKey = 'end';\n        }\n\n        _this3.allData = _this3.allData.concat(result.data);\n        _this3.loaded = true;\n        _this3.isSearch = false;\n      }\n    })();\n  }\n\n  searchFilter() {\n    if (this.assetIdentification !== '' || this.assetType !== null) {\n      this.assetIdentification = this.assetIdentification.toLowerCase();\n\n      if (this.assetID == '') {\n        this.assetID = this.assetIdentification;\n      }\n\n      this.isSearch = true;\n      this.allData = [];\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.lastEvaluatedKey = '';\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  clearInput() {\n    this.suggestedAssets = null;\n  }\n\n  clearSuggestions() {\n    this.assetIdentification = '';\n  }\n\n  resetFilter() {\n    if (this.assetIdentification !== '' || this.assetType !== null) {\n      this.assetID = '';\n      this.assetIdentification = '';\n      this.assetType = null;\n      this.suggestedAssets = [];\n      this.allData = [];\n      this.isSearch = true;\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.lastEvaluatedKey = '';\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  refreshData() {\n    this.allData = [];\n    this.assetID = '';\n    this.assetIdentification = '';\n    this.assetType = [];\n    this.suggestedAssets = [];\n    this.lastEvaluatedKey = '';\n    this.loaded = false;\n    this.initDataTable();\n    this.dataMessage = Constants.FETCHING_DATA;\n  }\n\n  clear(table) {\n    table.clear();\n  }\n\n};\n\nAssetListComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: ToastrService\n}, {\n  type: HttpClient\n}, {\n  type: HereMapService\n}, {\n  type: OnboardDefaultService\n}];\n\nAssetListComponent.propDecorators = {\n  table: [{\n    type: ViewChild,\n    args: ['dt']\n  }],\n  ngSelectComponent: [{\n    type: ViewChild,\n    args: [NgSelectComponent]\n  }],\n  selectedColumns: [{\n    type: Input\n  }]\n};\nAssetListComponent = __decorate([Component({\n  selector: 'app-asset-list',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AssetListComponent);\nexport { AssetListComponent };","map":null,"metadata":{},"sourceType":"module"}