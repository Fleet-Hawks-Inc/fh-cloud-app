{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./vehicle-setting.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./vehicle-setting.component.css\";\nimport { Component } from '@angular/core';\nimport { environment } from '../../../../../environments/environment';\nimport Constants from '../../constants';\nimport { ApiService } from '../../../../services';\nimport * as _ from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nlet VehicleSettingComponent = class VehicleSettingComponent {\n  constructor(apiService, toastr) {\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.lastEvaluatedKey = '';\n    this.vehicleID = '';\n    this.currentStatus = null;\n    this.vehicleIdentification = '';\n    this.vehicles = [];\n    this.loaded = false;\n    this.suggestedVehicles = [];\n    this.driversList = {};\n    this.vehicleModelList = {};\n    this.vehicleManufacturersList = {};\n    this.getSuggestions = _.debounce(function (value) {\n      value = value.toLowerCase();\n\n      if (value !== '') {\n        this.apiService.getData(`vehicles/deleted/suggestion/${value}`).subscribe(result => {\n          this.suggestedVehicles = result;\n        });\n      } else {\n        this.suggestedVehicles = [];\n      }\n    }, 800);\n  }\n\n  ngOnInit() {\n    this.initDataTable();\n    this.fetchDriversList();\n  }\n\n  fetchDriversList() {\n    this.apiService.getData('drivers/get/list').subscribe(result => {\n      this.driversList = result;\n    });\n  }\n\n  setVehicle(vehicleID, vehicleIdentification) {\n    this.vehicleIdentification = vehicleIdentification;\n    this.vehicleID = vehicleIdentification;\n    this.suggestedVehicles = [];\n  }\n\n  initDataTable() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.lastEvaluatedKey !== 'end') {\n        const result = yield _this.apiService.getData('vehicles/fetch/deleted/records?vehicle=' + _this.vehicleID + '&lastKey=' + _this.lastEvaluatedKey).toPromise();\n\n        if (result.Items.length === 0) {\n          _this.dataMessage = Constants.NO_RECORDS_FOUND;\n        }\n\n        _this.suggestedVehicles = [];\n\n        if (result.Items.length > 0) {\n          if (result.LastEvaluatedKey !== undefined) {\n            _this.lastEvaluatedKey = encodeURIComponent(result.Items[result.Items.length - 1].vehicleSK);\n          } else {\n            _this.lastEvaluatedKey = 'end';\n          }\n\n          _this.vehicles = _this.vehicles.concat(result.Items);\n          _this.loaded = true;\n        }\n      }\n    })();\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.initDataTable();\n    }\n\n    this.loaded = false;\n  }\n\n  searchFilter() {\n    if (this.vehicleIdentification !== '') {\n      this.vehicleIdentification = this.vehicleIdentification.toLowerCase();\n\n      if (this.vehicleID === '') {\n        this.vehicleID = this.vehicleIdentification;\n      }\n\n      this.dataMessage = Constants.FETCHING_DATA;\n      this.vehicles = [];\n      this.lastEvaluatedKey = '';\n      this.initDataTable();\n      this.suggestedVehicles = [];\n    } else {\n      return false;\n    }\n  }\n\n  restoreVehicle(eventData) {\n    if (confirm('Are you sure you want to restore?') === true) {\n      this.apiService.deleteData(`vehicles/restore/${eventData.vehicleID}/${eventData.vehicleIdentification}`).subscribe(result => {\n        this.vehicles = [];\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.lastEvaluatedKey = '';\n        this.initDataTable();\n        this.toastr.success('Vehicle restored successfully!');\n      });\n    }\n  }\n\n  resetFilter() {\n    if (this.vehicleIdentification !== '') {\n      this.vehicleID = '';\n      this.suggestedVehicles = [];\n      this.vehicleIdentification = '';\n      this.lastEvaluatedKey = '';\n      this.currentStatus = null;\n      this.vehicles = [];\n      this.initDataTable();\n      this.dataMessage = Constants.FETCHING_DATA;\n    } else {\n      return false;\n    }\n  }\n\n  refreshData() {\n    this.vehicleID = '';\n    this.suggestedVehicles = [];\n    this.vehicleIdentification = '';\n    this.currentStatus = null;\n    this.vehicles = [];\n    this.lastEvaluatedKey = '';\n    this.dataMessage = Constants.FETCHING_DATA;\n  }\n\n};\n\nVehicleSettingComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ToastrService\n}];\n\nVehicleSettingComponent = __decorate([Component({\n  selector: 'app-vehicle-setting',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], VehicleSettingComponent);\nexport { VehicleSettingComponent };","map":null,"metadata":{},"sourceType":"module"}