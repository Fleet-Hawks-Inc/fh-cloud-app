{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Constants from '../../constants';\nimport CSVFileValidator from 'csv-file-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/api.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"primeng/table\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/dialog\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/tooltip\";\nconst _c0 = [\"dt\"];\nconst _c1 = [\"myInput\"];\n\nfunction ImportDriversComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"h3\", 33);\n    i0.ɵɵtext(3, \" Import Drivers \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 34);\n    i0.ɵɵelementStart(5, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function ImportDriversComponent_ng_template_16_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.refreshData();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ImportDriversComponent_ng_template_16_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.openModal();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ImportDriversComponent_ng_template_16_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(15);\n\n      return ctx_r12.clear(_r0);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ImportDriversComponent_ng_template_16_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r10);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(15);\n\n      return _r0.exportCSV();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDriversComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"th\", 39);\n    i0.ɵɵtext(2, \"File Name \");\n    i0.ɵɵelement(3, \"p-sortIcon\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\", 41);\n    i0.ɵɵtext(5, \"Uploaded on \");\n    i0.ɵɵelement(6, \"p-sortIcon\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 43);\n    i0.ɵɵtext(8, \"Module \");\n    i0.ɵɵelement(9, \"p-sortIcon\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 45);\n    i0.ɵɵtext(11, \"Status \");\n    i0.ɵɵelement(12, \"p-sortIcon\", 46);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImportDriversComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelementStart(8, \"span\", 47);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const driver_r14 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(driver_r14.displayName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(driver_r14.timeCreated);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(driver_r14.module);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(driver_r14.fileStatus);\n  }\n}\n\nfunction ImportDriversComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 48);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.dataMessage, \" \");\n  }\n}\n\nfunction ImportDriversComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Total Records: \", ctx_r5.importDrivers.length, \"\");\n  }\n}\n\nfunction ImportDriversComponent_div_50_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"span\", 51);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r18 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", error_r18, \".\");\n  }\n}\n\nfunction ImportDriversComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵelementStart(3, \"b\");\n    i0.ɵɵtext(4, \"Below are the errors in the uploaded file. Please rectify them and upload the file again.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ul\");\n    i0.ɵɵtemplate(6, ImportDriversComponent_div_50_li_6_Template, 3, 1, \"li\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.inValidMessages);\n  }\n}\n\nfunction ImportDriversComponent_ng_template_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function ImportDriversComponent_ng_template_53_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      ctx_r19.display = false;\n      return ctx_r19.cancel();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function ImportDriversComponent_ng_template_53_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.uploadImport();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r8.submitDisabled);\n  }\n}\n\nconst _c2 = function () {\n  return {\n    width: \"40vw\"\n  };\n};\n\nexport class ImportDriversComponent {\n  constructor(apiService, toastr) {\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.display = false;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.loaded = false;\n    this.validData = [];\n    this.importDrivers = [];\n    this.isFileValid = false;\n    this.inValidMessages = [];\n    this.importDocs = [];\n    this.importData = {\n      module: 'driver'\n    };\n    this.check = false;\n    this.submitDisabled = true; // columns of data table\n\n    this.dataColumns = [{\n      field: 'displayName',\n      header: 'File Name',\n      type: \"text\"\n    }, {\n      field: 'timeCreated',\n      header: 'Uploaded',\n      type: \"text\"\n    }, {\n      field: \"module\",\n      header: 'Module',\n      type: 'text'\n    }, {\n      field: 'fileStatus',\n      header: 'Status',\n      type: \"text\"\n    }];\n    this.statuses = [{\n      label: 'Uploaded',\n      value: 'uploaded'\n    }, {\n      label: 'Partially Processed',\n      value: 'partially_processed'\n    }, {\n      label: 'Processed',\n      value: 'processed'\n    }];\n\n    this.isStatusValid = status => {\n      return status == 'active' || status == 'inActive';\n    };\n  }\n\n  ngOnInit() {\n    this.setToggleOptions();\n    this.fetchDriverImport();\n  }\n\n  setToggleOptions() {\n    this.selectedColumns = this.dataColumns;\n  }\n\n  get selectedColumns() {\n    return this._selectedColumns;\n  }\n\n  set selectedColumns(val) {\n    //restore original order\n    this._selectedColumns = this.dataColumns.filter(col => val.includes(col));\n  }\n\n  validateCSV($event) {\n    const data = {\n      headers: [{\n        name: 'employee_id',\n        inputName: 'employeeId',\n        required: true,\n        unique: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        }\n      }, {\n        name: 'username',\n        inputName: 'username',\n        required: true,\n        unique: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        },\n        validate: function (name) {\n          const nameformat = /^(?=[a-zA-Z0-9.]{6,20}$)(?!.*[.]{2})[^.].*[^.]$/;\n          return nameformat.test(name);\n        }\n      }, {\n        name: 'first_name',\n        inputName: 'firstName',\n        required: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        }\n      }, {\n        name: 'last_name',\n        inputName: 'lastName',\n        required: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        }\n      }, {\n        name: 'birth_date',\n        inputName: 'birthDate',\n        required: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        },\n        validate: function (date) {\n          const dateformat = /^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;\n          return dateformat.test(date);\n        }\n      }, {\n        name: 'phone',\n        inputName: 'phone',\n        required: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        },\n        validate: function (phoneno) {\n          const phoneformat = /^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/;\n          return phoneformat.test(phoneno);\n        }\n      }, {\n        name: 'email',\n        inputName: 'email',\n        required: true,\n        unique: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        },\n        validate: function (email) {\n          const reqExp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n          return reqExp.test(email);\n        }\n      }, {\n        name: 'start_date',\n        inputName: 'startDate',\n        required: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        },\n        validate: function (date) {\n          const dateformat = /^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;\n          return dateformat.test(date);\n        }\n      }, {\n        name: 'cdl',\n        inputName: 'cdl',\n        required: true,\n        unique: true,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column.`;\n        }\n      }, {\n        name: 'status',\n        inputName: 'status',\n        required: true,\n        validate: this.isStatusValid,\n        requiredError: function (headerName, rowNumber, columnNumber) {\n          return `${headerName} is required in the ${rowNumber} row / ${columnNumber} column`;\n        }\n      }]\n    };\n    CSVFileValidator($event.srcElement.files[0], data).then(csvData => {\n      console.log('csvData.data', csvData);\n\n      if (csvData.data.length !== 0 && csvData.data.length < 200) {\n        if (csvData.inValidMessages.length === 0) {\n          this.validData = csvData.data;\n          this.check = true;\n          this.submitDisabled = false;\n        } else {\n          this.isFileValid = false;\n          this.check = false;\n          this.submitDisabled = true;\n\n          for (let item of csvData.inValidMessages) {\n            let joinStr = '';\n\n            if (item.includes('birth_date') || item.includes('start_date')) {\n              joinStr = item + '. Please enter the date in the format: YYYY-MM-DD';\n              this.inValidMessages.push(joinStr);\n            } else if (item.includes('status')) {\n              joinStr = item + '.  Status should be active or inActive';\n              this.inValidMessages.push(joinStr);\n            } else {\n              this.inValidMessages.push(item);\n            }\n          }\n        }\n\n        csvData.data;\n      } else if (csvData.data.length == 0) {\n        this.submitDisabled = true;\n        this.toastr.error(\"There are no records in the file uploaded\");\n      } else {\n        this.submitDisabled = true;\n        this.toastr.error(\"'The file should contain a maximum of 200 records'\");\n      }\n    }).catch(err => {});\n  }\n\n  chooseFile(event) {\n    let files = event.target.files;\n    let condition = true;\n\n    if (condition) {\n      this.importDocs = [];\n      this.importDocs = files;\n      this.inValidMessages = [];\n      const reader = new FileReader();\n      reader.addEventListener('load', event => {\n        let csvdata = event.target.result;\n      });\n      reader.readAsBinaryString(event.target.files[0]);\n    }\n  }\n\n  pwdModalClose() {\n    $('#importDocs').val('');\n    this.inValidMessages = [];\n  }\n\n  uploadImport() {\n    if (this.check == true) {\n      if (this.importDocs.length > 0) {\n        const formData = new FormData();\n\n        for (let i = 0; i < this.importDocs.length; i++) {\n          formData.append(\"importDocs\", this.importDocs[i]);\n        } //append other fields\n\n\n        formData.append(\"data\", JSON.stringify(this.importData));\n        this.submitDisabled = true;\n        this.apiService.postData('importer', formData, true).subscribe({\n          complete: () => {},\n          error: err => {\n            this.submitDisabled = true;\n            $('#importDocs').val('');\n          },\n          next: res => {\n            this.submitDisabled = false;\n            this.toastr.success(\"The file has been scheduled for processing and you will be notified via email once it is completed.\");\n            $('#importDocs').val('');\n            this.display = false;\n            this.fetchDriverImport();\n          }\n        });\n      }\n    }\n  }\n\n  fetchDriverImport() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this.apiService.getData('importer/get?type=driver').toPromise();\n\n      if (result.length === 0) {\n        _this.dataMessage = Constants.NO_RECORDS_FOUND;\n        _this.loaded = true;\n      }\n\n      if (result && result.length > 0) {\n        _this.importDrivers = result;\n      }\n\n      _this.loaded = true;\n    })();\n  }\n\n  openModal() {\n    this.display = true;\n  }\n\n  cancel() {\n    this.inValidMessages = [];\n    this.myInputVariable.nativeElement.value = \"\";\n  }\n  /**\r\n     * Clears the table filters\r\n     * @param table Table\r\n     */\n\n\n  clear(table) {\n    table.clear();\n  }\n\n  refreshData() {\n    this.importDrivers = [];\n    this.fetchDriverImport();\n    this.dataMessage = Constants.FETCHING_DATA;\n  }\n\n}\n\nImportDriversComponent.ɵfac = function ImportDriversComponent_Factory(t) {\n  return new (t || ImportDriversComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\n\nImportDriversComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImportDriversComponent,\n  selectors: [[\"app-import-drivers\"]],\n  viewQuery: function ImportDriversComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myInputVariable = _t.first);\n    }\n  },\n  inputs: {\n    selectedColumns: \"selectedColumns\"\n  },\n  decls: 54,\n  vars: 8,\n  consts: [[1, \"body\"], [1, \"inner-wrapper\"], [\"role\", \"main\", 1, \"content-body\", \"pl-1\", \"pr-0\", \"pt-0\"], [1, \"page-header\", \"pr27\", \"pl18\"], [1, \"row\"], [1, \"col-md-4\", \"col-lg-4\", \"font-weight-bold\", \"text-4\", \"text-dark\"], [1, \"font-weight-bold\", \"pl-0\"], [1, \"m-2\"], [1, \"row\", \"mb-3\"], [1, \"col-lg-12\"], [1, \"bg-white\", \"p-3\", \"text-dark\"], [1, \"form-group\", \"row\", \"pt-3\"], [1, \"col-lg-12\", 2, \"height\", \"calc(100vh - 149px)\", \"overflow-y\", \"scroll\"], [1, \"text-capitalize\", 3, \"loading\", \"columns\", \"value\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [\"pTemplate\", \"summary\"], [\"header\", \"Import Driver\", \"position\", \"top\", 3, \"visible\", \"onHide\", \"visibleChange\"], [2, \"margin\", \"0px\"], [\"href\", \"assets/driver_import_template.csv\", 1, \"text-success\"], [1, \"form-group\", \"col-lg-11\", \"mt-5\", \"mb-3\"], [1, \"control-label\", \"font-weight-bold\", \"label\", \"mb\", \"text-3\", \"text-dark\"], [1, \"mandfield\", \"text-2\", \"ml-1\"], [\"accept\", \".csv\", \"id\", \"importDocs\", \"type\", \"file\", 1, \"form-control\", \"choosefileLH\", 3, \"change\"], [\"myInput\", \"\"], [4, \"ngIf\"], [1, \"form-group\", \"col-lg-1\", \"mt-5\", \"mb-3\"], [1, \"pi\", \"pi-refresh\", \"mt-4\", \"pt-2\", 2, \"font-size\", \"1.5rem\", 3, \"click\"], [\"pTemplate\", \"footer\"], [1, \"p-d-flex\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"m-0\"], [1, \"text-right\"], [\"type\", \"button\", \"pButton\", \"\", \"pTooltip\", \"Refresh\", \"icon\", \"fas fa-sync\", 1, \"p-button-outlined\", \"mr-2\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pTooltip\", \"Import Driver\", \"icon\", \"pi pi-plus\", 1, \"p-button-outlined\", \"mr-2\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"pTooltip\", \"Clear Filter\", \"icon\", \"pi pi-filter-slash\", 1, \"p-button-outlined\", \"mr-2\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file\", \"pTooltip\", \"CSV\", \"tooltipPosition\", \"bottom\", 1, \"mr-2\", 3, \"click\"], [\"pSortableColumn\", \"displayName\"], [\"field\", \"displayName\"], [\"pSortableColumn\", \"timeCreated\"], [\"field\", \"timeCreated\"], [\"pSortableColumn\", \"module\"], [\"field\", \"module\"], [\"pSortableColumn\", \"status\"], [\"field\", \"status\"], [1, \"badge\", \"badge-dark\"], [\"colspan\", \"4\", 1, \"text-center\"], [1, \"col-lg-12\", \"mt-3\", \"text-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-danger\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancel\", 1, \"p-button-outlined\", 3, \"click\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Submit\", 3, \"disabled\", \"click\"]],\n  template: function ImportDriversComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"section\", 2);\n      i0.ɵɵelementStart(3, \"header\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"h2\", 6);\n      i0.ɵɵtext(7, \"Import Drivers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"section\", 7);\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵelementStart(11, \"div\", 10);\n      i0.ɵɵelementStart(12, \"div\", 11);\n      i0.ɵɵelementStart(13, \"div\", 12);\n      i0.ɵɵelementStart(14, \"p-table\", 13, 14);\n      i0.ɵɵtemplate(16, ImportDriversComponent_ng_template_16_Template, 9, 0, \"ng-template\", 15);\n      i0.ɵɵtemplate(17, ImportDriversComponent_ng_template_17_Template, 13, 0, \"ng-template\", 16);\n      i0.ɵɵtemplate(18, ImportDriversComponent_ng_template_18_Template, 10, 4, \"ng-template\", 17);\n      i0.ɵɵtemplate(19, ImportDriversComponent_ng_template_19_Template, 3, 1, \"ng-template\", 18);\n      i0.ɵɵtemplate(20, ImportDriversComponent_ng_template_20_Template, 2, 1, \"ng-template\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"p-dialog\", 20);\n      i0.ɵɵlistener(\"onHide\", function ImportDriversComponent_Template_p_dialog_onHide_21_listener() {\n        return ctx.cancel();\n      })(\"visibleChange\", function ImportDriversComponent_Template_p_dialog_visibleChange_21_listener($event) {\n        return ctx.display = $event;\n      });\n      i0.ɵɵelementStart(22, \"div\", 4);\n      i0.ɵɵelementStart(23, \"div\", 9);\n      i0.ɵɵelementStart(24, \"span\");\n      i0.ɵɵtext(25, \"To successfully import driver data please make sure your file confirms following:\\u200B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \" \\u200B\");\n      i0.ɵɵelementStart(27, \"ul\", 21);\n      i0.ɵɵelementStart(28, \"li\");\n      i0.ɵɵtext(29, \" File must have all the headers. \");\n      i0.ɵɵelementStart(30, \"strong\");\n      i0.ɵɵelementStart(31, \"a\", 22);\n      i0.ɵɵelementStart(32, \"u\");\n      i0.ɵɵtext(33, \"Click Here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" to download the template file.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"li\");\n      i0.ɵɵtext(36, \" File must be comma seperated.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"li\");\n      i0.ɵɵtext(38, \" File must have all the predefined header with valid data.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"li\");\n      i0.ɵɵtext(40, \" File must not contain more than 200 records. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 4);\n      i0.ɵɵelementStart(42, \"div\", 23);\n      i0.ɵɵelementStart(43, \"label\", 24);\n      i0.ɵɵtext(44, \"Choose File \");\n      i0.ɵɵelementStart(45, \"span\", 25);\n      i0.ɵɵelementStart(46, \"sup\");\n      i0.ɵɵtext(47, \"*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"input\", 26, 27);\n      i0.ɵɵlistener(\"change\", function ImportDriversComponent_Template_input_change_48_listener($event) {\n        return ctx.chooseFile($event);\n      })(\"change\", function ImportDriversComponent_Template_input_change_48_listener($event) {\n        return ctx.validateCSV($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(50, ImportDriversComponent_div_50_Template, 7, 1, \"div\", 28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"div\", 29);\n      i0.ɵɵelementStart(52, \"i\", 30);\n      i0.ɵɵlistener(\"click\", function ImportDriversComponent_Template_i_click_52_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(53, ImportDriversComponent_ng_template_53_Template, 2, 1, \"ng-template\", 31);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"loading\", !ctx.loaded)(\"columns\", ctx.selectedColumns)(\"value\", ctx.importDrivers);\n      i0.ɵɵadvance(7);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c2));\n      i0.ɵɵproperty(\"visible\", ctx.display);\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngIf\", ctx.inValidMessages.length > 0);\n    }\n  },\n  directives: [i3.Table, i4.PrimeTemplate, i5.Dialog, i6.NgIf, i7.ButtonDirective, i8.Tooltip, i3.SortableColumn, i3.SortIcon, i6.NgForOf],\n  styles: [\"\"]\n});","map":null,"metadata":{},"sourceType":"module"}