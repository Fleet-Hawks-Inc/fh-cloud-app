{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./trip-list.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./trip-list.component.css\";\nimport { Component } from \"@angular/core\";\nimport { ApiService, DashboardUtilityService } from \"../../../../services\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport Constants from \"../../../fleet/constants\";\nimport { environment } from \"src/environments/environment\";\nlet TripListComponent = class TripListComponent {\n  constructor(apiService, toastr, spinner, dashboardUtilityService) {\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.dashboardUtilityService = dashboardUtilityService;\n    this.environment = environment.isFeatureEnabled;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.dataMessageConfirm = Constants.NO_RECORDS_FOUND;\n    this.dataMessageDispatch = Constants.NO_RECORDS_FOUND;\n    this.dataMessageStart = Constants.NO_RECORDS_FOUND;\n    this.dataMessageEnroute = Constants.NO_RECORDS_FOUND;\n    this.dataMessageCancel = Constants.NO_RECORDS_FOUND;\n    this.dataMessageDeliver = Constants.NO_RECORDS_FOUND;\n    this.dataMessageTonu = Constants.NO_RECORDS_FOUND;\n    this.title = \"Trips\";\n    this.tripID = \"\";\n    this.tripStatus = \"\";\n    this.prevStatus = \"\";\n    this.tripNumber = \"\";\n    this.bolNumber = \"\";\n    this.tripData = {\n      tripID: \"\",\n      tripStatus: \"\"\n    };\n    this.dummyTrips = [];\n    this.trips = [];\n    this.tempTrips = [];\n    this.confirmedTrips = [];\n    this.dispatchedTrips = [];\n    this.startedTrips = [];\n    this.enrouteTrips = [];\n    this.cancelledTrips = [];\n    this.deliveredTrips = [];\n    this.tonuTrips = [];\n    this.allTripsCount = 0;\n    this.statusData = [{\n      name: \"Confirmed\",\n      value: \"confirmed\"\n    }, {\n      name: \"Dispatched\",\n      value: \"dispatched\"\n    }, {\n      name: \"Started\",\n      value: \"started\"\n    }, {\n      name: \"En-route\",\n      value: \"enroute\"\n    }, {\n      name: \"Delivered\",\n      value: \"delivered\"\n    }, {\n      name: \"TONU\",\n      value: \"tonu\"\n    }, {\n      name: \"Cancelled\",\n      value: \"cancelled\"\n    }, {\n      name: \"Settled\",\n      value: \"settled\"\n    }];\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.Error = \"\";\n    this.Success = \"\";\n    this.errors = {};\n    this.lastEvaluated = {\n      value1: \"\"\n    };\n    this.totalRecords = 20;\n    this.suggestions = [];\n    this.confirmedTotalRecords = 20;\n    this.categoryFilter = [{\n      name: \"Trip Number\",\n      value: \"tripNo\"\n    }, {\n      name: \"Trip Type\",\n      value: \"tripType\"\n    }, {\n      name: \"Order Number\",\n      value: \"orderNo\"\n    }, {\n      name: \"Driver\",\n      value: \"driver\"\n    }, {\n      name: \"Vehicle\",\n      value: \"vehicle\"\n    }, {\n      name: \"Asset\",\n      value: \"asset\"\n    }, {\n      name: \"Location\",\n      value: \"location\"\n    }, {\n      name: \"Trip Status\",\n      value: \"tripStatus\"\n    }];\n    this.pageLength = 10;\n    this.serviceUrl = \"\";\n    this.tripsFiltr = {\n      searchValue: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      category: null,\n      start: \"\",\n      end: \"\"\n    };\n    this.orderValue = null;\n    this.loaded = false;\n    this.isLoad = false;\n    this.isLoadText = \"Load More...\";\n    this.vehiclesObject = {};\n    this.assetsObject = {};\n    this.carriersObject = {};\n    this.driversObject = {};\n    this.ordersObject = {};\n    this.activeTab = \"all\"; // manual pagination\n\n    this.lastEvaluatedKey = \"\";\n    this.driversIDSObject = [];\n    this.tripDate = \"\";\n    this.tripTime = \"\";\n    this.recIndex = \"\";\n    this.records = false;\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.fetchedRecordsCount = 0;\n    this.lastFetched = {\n      draw: 0,\n      status: false\n    };\n    this.cancelOrd = \"no\";\n    this.statDisabled = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.initDataTable();\n\n      _this.driversObject = yield _this.dashboardUtilityService.getDrivers();\n      _this.assetsObject = yield _this.dashboardUtilityService.getAssets();\n      _this.vehiclesObject = yield _this.dashboardUtilityService.getVehicles();\n    })();\n  }\n\n  fetchTrips(result, type = null) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      for (let i = 0; i < result.Items.length; i++) {\n        result.Items[i].pickupLocation = \"\";\n        result.Items[i].pickupLocationCount = 0;\n        result.Items[i].dropLocation = \"\";\n        result.Items[i].dropLocationCount = 0;\n        result.Items[i].driverId = \"\";\n        result.Items[i].driverCount = 0;\n        result.Items[i].vehicleId = \"\";\n        result.Items[i].vehicleCount = 0;\n        result.Items[i].assetId = \"\";\n        result.Items[i].assetCount = 0;\n        result.Items[i].planCarrierId = \"\";\n        result.Items[i].carrierIdCount = 0;\n        const element = result.Items[i];\n        element.newStatus = element.tripStatus;\n        element.canRecall = false;\n        element.disabledEdit = false;\n\n        if (element.settlmnt) {\n          element.newStatus = \"Settled\";\n          element.canRecall = false;\n          element.disabledEdit = true;\n        } else {\n          if (element.recall) {\n            element.newStatus = `${element.tripStatus} (R)`;\n            element.canRecall = true;\n          } else {\n            element.newStatus = element.tripStatus;\n\n            if (element.tripStatus === \"delivered\") {\n              element.canRecall = true;\n            }\n          }\n        } // if sub trip is settled then user cannot edit trip\n\n\n        if (result.Items[i].split && result.Items[i].split.length > 0) {\n          for (const iterator of result.Items[i].split.length) {\n            if (iterator.settlmnt) {\n              element.canRecall = false;\n              element.disabledEdit = true;\n            }\n          }\n        }\n\n        for (let j = 0; j < result.Items[i].tripPlanning.length; j++) {\n          const element2 = result.Items[i].tripPlanning[j];\n\n          if (element2.type == \"Pickup\") {\n            result.Items[i].pickupLocationCount += 1;\n\n            if (result.Items[i].pickupLocation == \"\") {\n              result.Items[i].pickupLocation = element2.location;\n            }\n          } else if (element2.type == \"Delivery\") {\n            result.Items[i].dropLocationCount += 1;\n\n            if (result.Items[i].dropLocation == \"\") {\n              result.Items[i].dropLocation = element2.location;\n            }\n          }\n\n          if (element2.carrierID !== \"\" && element2.carrierID !== undefined && element2.carrierID !== null) {\n            if (result.Items[i].planCarrierId == \"\") {\n              result.Items[i].planCarrierId = element2.carrierID;\n            }\n\n            if (element.carrierIDs) {\n              result.Items[i].carrierIdCount = element.carrierIDs.length;\n            }\n          }\n\n          if (element2.driverID !== \"\" && element2.driverID !== undefined) {\n            if (result.Items[i].driverId == \"\") {\n              result.Items[i].driverId = element2.driverID;\n            }\n\n            result.Items[i].driverCount = element.driverIDs.length;\n          }\n\n          if (element2.coDriverID !== \"\" && element2.coDriverID !== undefined) {\n            if (result.Items[i].driverId == \"\") {\n              result.Items[i].driverId = element2.coDriverID;\n            }\n          }\n\n          if (element2.vehicleID !== \"\" && element2.vehicleID !== undefined) {\n            if (result.Items[i].vehicleId == \"\") {\n              result.Items[i].vehicleId = element2.vehicleID;\n            }\n\n            result.Items[i].vehicleCount = element.vehicleIDs.length;\n          }\n\n          for (let l = 0; l < element2.assetID.length; l++) {\n            const element3 = element2.assetID[l];\n\n            if (element3 !== \"\" && element3 !== undefined) {\n              if (result.Items[i].assetId == \"\") {\n                result.Items[i].assetId = element3;\n              }\n\n              result.Items[i].assetCount = element.assetIDs.length;\n            }\n          }\n        }\n\n        if (!element.stlLink) {\n          element.stlLink = false;\n        }\n\n        if (element.tripStatus == \"delivered\" || element.tripStatus == \"cancelled\" || element.tripStatus == \"tonu\" || element.stlLink) {\n          element.canEdit = true;\n        } else {\n          element.canEdit = false;\n        }\n\n        if (element.tripStatus == \"cancelled\" || element.tripStatus == \"tonu\" || element.stlLink) {\n          element.disabledEdit = true;\n        } // else {\n        //   element.disabledEdit = false;\n        // }\n\n\n        if (element.tripStatus == \"confirmed\") {\n          element.showStatus = true;\n\n          _this2.confirmedTrips.push(result.Items[i]);\n        } else if (element.tripStatus == \"dispatched\") {\n          element.showStatus = true;\n\n          _this2.dispatchedTrips.push(result.Items[i]);\n        } else if (element.tripStatus == \"started\") {\n          element.showStatus = true;\n\n          _this2.startedTrips.push(result.Items[i]);\n        } else if (element.tripStatus == \"enroute\") {\n          element.showStatus = true;\n\n          _this2.enrouteTrips.push(result.Items[i]);\n        } else if (element.tripStatus == \"cancelled\") {\n          element.showStatus = false;\n\n          _this2.cancelledTrips.push(result.Items[i]);\n        } else if (element.tripStatus == \"delivered\") {\n          element.showStatus = false;\n\n          _this2.deliveredTrips.push(result.Items[i]);\n        } else if (element.tripStatus == \"tonu\") {\n          element.tripStatus = element.tripStatus.toUpperCase();\n          element.showStatus = false;\n\n          _this2.tonuTrips.push(result.Items[i]);\n        }\n\n        _this2.trips.push(result.Items[i]);\n      }\n    })();\n  }\n\n  openStatusModal(tripId, index) {\n    this.tripID = tripId;\n    this.recIndex = index;\n    this.fetchTripDetail();\n  }\n\n  deleteTrip(eventData) {\n    if (confirm(\"Are you sure you want to delete?\") === true) {\n      let record = {\n        eventID: eventData.tripID,\n        status: eventData.tripStatus,\n        stl: eventData.settlmnt\n      };\n      this.apiService.deleteData(`trips/delete/${eventData.tripID}/${eventData.tripNo}/${eventData.settlmnt}/${eventData.tripStatus}`).subscribe({\n        complete: () => {},\n        error: () => {},\n        next: result => {\n          this.trips = [];\n          this.confirmedTrips = [];\n          this.dispatchedTrips = [];\n          this.startedTrips = [];\n          this.enrouteTrips = [];\n          this.cancelledTrips = [];\n          this.deliveredTrips = [];\n          this.tonuTrips = [];\n          this.hasSuccess = true;\n          this.lastEvaluatedKey = \"\";\n          this.records = false;\n          this.toastr.success(\"Trip deleted successfully\");\n        }\n      });\n    }\n  }\n\n  fetchTripDetail() {\n    this.apiService.getData(\"trips/updateDetail/\" + this.tripID).subscribe(result => {\n      result = result.Items[0];\n      this.prevStatus = result.tripStatus;\n      this.tripStatus = result.tripStatus;\n      this.tripNumber = result.tripNo;\n      this.bolNumber = result.bol;\n      this.tripDate = result.createdDate;\n      this.tripTime = result.createdTime;\n      this.settlement = result.settlmnt;\n\n      if (result.driverIDs.length > 0 || result.carrierIDs.length > 0) {\n        // show change status acc to trip\n        if (this.tripStatus == \"confirmed\") {\n          this.statusData = [{\n            name: \"Confirmed\",\n            value: \"confirmed\"\n          }, {\n            name: \"Dispatched\",\n            value: \"dispatched\"\n          }];\n        } else if (this.tripStatus == \"dispatched\") {\n          this.statusData = [{\n            name: \"Dispatched\",\n            value: \"dispatched\"\n          }, {\n            name: \"Started\",\n            value: \"started\"\n          }, {\n            name: \"En-route\",\n            value: \"enroute\"\n          }, {\n            name: \"Delivered\",\n            value: \"delivered\"\n          }, {\n            name: \"TONU\",\n            value: \"tonu\"\n          }, {\n            name: \"Cancelled\",\n            value: \"cancelled\"\n          }];\n        } else if (this.tripStatus == \"started\") {\n          this.statusData = [{\n            name: \"Started\",\n            value: \"started\"\n          }, {\n            name: \"En-route\",\n            value: \"enroute\"\n          }, {\n            name: \"Delivered\",\n            value: \"delivered\"\n          }, {\n            name: \"TONU\",\n            value: \"tonu\"\n          }, {\n            name: \"Cancelled\",\n            value: \"cancelled\"\n          }];\n        } else if (this.tripStatus == \"enroute\") {\n          this.statusData = [{\n            name: \"En-route\",\n            value: \"enroute\"\n          }, {\n            name: \"Delivered\",\n            value: \"delivered\"\n          }, {\n            name: \"TONU\",\n            value: \"tonu\"\n          }, {\n            name: \"Cancelled\",\n            value: \"cancelled\"\n          }];\n        }\n\n        $(\"#tripStatusModal\").modal(\"show\");\n      } else {\n        this.toastr.error(\"Please assign driver(s)/carrier(s) to the trip first.\");\n      }\n    });\n  }\n\n  updateTripStatus() {\n    this.errors = {};\n    this.hasError = false;\n    this.hasSuccess = false;\n\n    if (this.tripStatus === \"\") {\n      this.toastr.error(\"Please select trip status\");\n      return false;\n    }\n\n    if (this.tripStatus === this.prevStatus) {\n      $(\"#tripStatusModal\").modal(\"hide\");\n      return false;\n    }\n\n    let allowedStatus = [];\n\n    switch (this.prevStatus) {\n      case \"confirmed\":\n        allowedStatus = [\"dispatched\", \"started\", \"enroute\", \"cancelled\", \"delivered\", \"tonu\"];\n        break;\n\n      case \"dispatched\":\n        allowedStatus = [\"started\", \"enroute\", \"cancelled\", \"delivered\", \"tonu\"];\n        break;\n\n      case \"started\":\n        allowedStatus = [\"enroute\", \"cancelled\", \"delivered\", \"tonu\"];\n        break;\n\n      case \"enroute\":\n        allowedStatus = [\"cancelled\", \"delivered\", \"tonu\"];\n        break;\n\n      case \"cancelled\":\n        allowedStatus = [];\n        break;\n\n      case \"delivered\":\n        allowedStatus = [];\n        break;\n\n      case \"tonu\":\n        allowedStatus = [];\n        break;\n    }\n\n    if (!allowedStatus.includes(this.tripStatus)) {\n      this.toastr.error(\"Please select a valid status\");\n      return false;\n    }\n\n    this.cancelOrd = \"no\";\n\n    if (this.tripStatus === \"cancelled\" && this.tripStatus != this.prevStatus) {\n      $(\"#assignConfirmationModal\").modal(\"show\");\n    } else {\n      this.updateTrip();\n    }\n  }\n\n  cancelOrder(status) {\n    this.cancelOrd = status;\n    this.updateTrip();\n  }\n\n  updateTrip() {\n    var _this3 = this;\n\n    let tripObj = {\n      entryID: this.tripID,\n      status: this.tripStatus,\n      settlement: this.settlement,\n      cancelOrder: this.cancelOrd\n    };\n    this.statDisabled = true;\n    this.apiService.postData(\"trips/updateStatus\", tripObj).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (result) {\n        _this3.statDisabled = false;\n\n        if (result) {\n          if (_this3.tripStatus === \"cancelled\" || _this3.tripStatus === \"delivered\" || _this3.tripStatus === \"tonu\") {\n            _this3.trips[_this3.recIndex].canEdit = true;\n          }\n\n          if (_this3.activeTab == \"all\") {\n            _this3.trips[_this3.recIndex].newStatus = _this3.tripStatus;\n\n            if (_this3.tripStatus === \"tonu\") {\n              _this3.trips[_this3.recIndex].newStatus = _this3.trips[_this3.recIndex].newStatus.toUpperCase();\n            } // this.trips[this.tripDraw][this.recIndex].showStatus = false;\n\n\n            _this3.resetMainTabValues();\n          } else {\n            if (_this3.activeTab == \"confirmed\") {\n              _this3.confirmedTrips[_this3.recIndex].newStatus = _this3.tripStatus;\n            } else if (_this3.activeTab == \"dispatched\") {\n              _this3.dispatchedTrips[_this3.recIndex].newStatus = _this3.tripStatus;\n            } else if (_this3.activeTab == \"started\") {\n              _this3.startedTrips[_this3.recIndex].newStatus = _this3.tripStatus;\n            } else if (_this3.activeTab == \"enroute\") {\n              _this3.enrouteTrips[_this3.recIndex].newStatus = _this3.tripStatus;\n            } else if (_this3.activeTab == \"cancelled\") {\n              _this3.cancelledTrips[_this3.recIndex].newStatus = _this3.tripStatus;\n            } else if (_this3.activeTab == \"delivered\") {\n              _this3.deliveredTrips[_this3.recIndex].canEdit = true;\n              _this3.deliveredTrips[_this3.recIndex].newStatus = _this3.tripStatus;\n            } else if (_this3.activeTab == \"tonu\") {\n              _this3.tonuTrips[_this3.recIndex].newStatus = _this3.tripStatus;\n              _this3.tonuTrips[_this3.recIndex].newStatus = _this3.tonuTrips[_this3.recIndex].newStatus.toUpperCase();\n            }\n\n            _this3.resetMainTabValues();\n          }\n\n          $(\"#tripStatusModal\").modal(\"hide\");\n          $(\"#assignConfirmationModal\").modal(\"hide\");\n\n          _this3.toastr.success(\"Trip status updated successfully\");\n        } else {\n          _this3.statDisabled = false;\n\n          _this3.toastr.error(\"Internal Server error\");\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  throwErrors() {\n    this.form.showErrors(this.errors);\n  }\n\n  initDataTable(refresh) {\n    if (refresh === true) {\n      this.lastEvaluatedKey = \"\";\n      this.trips = [];\n    }\n\n    this.spinner.show(); // this.orders = [];\n\n    if (this.lastEvaluatedKey !== \"end\") {\n      this.tripsFiltr.searchValue = this.tripsFiltr.searchValue.trim();\n      this.apiService.getData(\"trips/fetch/records/all?searchValue=\" + this.tripsFiltr.searchValue + \"&startDate=\" + this.tripsFiltr.start + \"&endDate=\" + this.tripsFiltr.end + \"&category=\" + this.tripsFiltr.category + \"&lastKey=\" + this.lastEvaluatedKey).subscribe(result => {\n        // this.trips = [];\n        if (result.Items.length == 0) {\n          this.dataMessage = Constants.NO_RECORDS_FOUND;\n          this.records = false;\n        } else {\n          this.records = true;\n        }\n\n        result.Items.map(v => {\n          v.url = `/dispatch/trips/trip-details/${v.tripID}`;\n        });\n        this.fetchedRecordsCount += result.Count;\n        this.fetchTrips(result, \"all\");\n        this.loaded = true;\n\n        if (result[\"LastEvaluatedKey\"] !== undefined) {\n          let lastEvalKey = result[`LastEvaluatedKey`].tripSK.replace(/#/g, \"--\");\n          this.lastEvaluatedKey = lastEvalKey;\n        } else {\n          this.lastEvaluatedKey = \"end\";\n        }\n\n        this.isLoad = false;\n        this.spinner.hide();\n      }, err => {\n        this.spinner.hide();\n      });\n    }\n  }\n\n  filterTrips() {\n    if (this.tripsFiltr.startDate === null) this.tripsFiltr.startDate = \"\";\n    if (this.tripsFiltr.endDate === null) this.tripsFiltr.endDate = \"\";\n\n    if (this.tripsFiltr.searchValue !== \"\" || this.tripsFiltr.startDate !== \"\" || this.tripsFiltr.endDate !== \"\" || this.tripsFiltr.category !== null || this.orderValue !== null) {\n      if (this.tripsFiltr.category === \"orderNo\" && (this.tripsFiltr.searchValue == null || this.tripsFiltr.searchValue == \"\")) {\n        this.toastr.error(\"Please enter order number\");\n        return false;\n      }\n\n      if (this.tripsFiltr.startDate != \"\" && this.tripsFiltr.endDate == \"\") {\n        this.toastr.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.tripsFiltr.startDate == \"\" && this.tripsFiltr.endDate != \"\") {\n        this.toastr.error(\"Please select both start and end dates.\");\n        return false;\n      } else if (this.tripsFiltr.startDate > this.tripsFiltr.endDate) {\n        this.toastr.error(\"Start Date should be less then end date.\");\n        return false;\n      } else if (this.tripsFiltr.category !== null && this.tripsFiltr.searchValue == \"\") {\n        this.toastr.error(\"Please enter search value.\");\n        return false;\n      } else {\n        if (this.tripsFiltr.category == \"location\") {\n          this.tripsFiltr.searchValue = this.tripsFiltr.searchValue.toLowerCase();\n        }\n\n        this.trips = [];\n        this.confirmedTrips = [];\n        this.dispatchedTrips = [];\n        this.startedTrips = [];\n        this.enrouteTrips = [];\n        this.cancelledTrips = [];\n        this.deliveredTrips = [];\n        this.tonuTrips = [];\n        this.records = false;\n        this.trips = [];\n\n        if (this.tripsFiltr.startDate !== \"\") {\n          this.tripsFiltr.start = this.tripsFiltr.startDate;\n        }\n\n        if (this.tripsFiltr.endDate !== \"\") {\n          this.tripsFiltr.end = this.tripsFiltr.endDate;\n        }\n\n        this.totalRecords = this.allTripsCount;\n        this.dataMessage = Constants.FETCHING_DATA;\n        this.activeTab = \"all\";\n        this.lastEvaluatedKey = \"\";\n        this.initDataTable();\n      }\n    } else {\n      return false;\n    }\n  }\n\n  resetFilter() {\n    if (this.tripsFiltr.startDate !== \"\" || this.tripsFiltr.endDate !== \"\" || this.tripsFiltr.searchValue !== \"\" || this.orderValue !== null) {\n      this.trips = [];\n      this.tripsFiltr = {\n        searchValue: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        category: null,\n        start: \"\",\n        end: \"\"\n      };\n      this.records = false;\n      this.dataMessage = Constants.FETCHING_DATA;\n      $(\"#categorySelect\").text(\"Search by category\");\n      this.orderValue = null;\n      this.activeTab = \"all\";\n      this.confirmedTrips = [];\n      this.dispatchedTrips = [];\n      this.startedTrips = [];\n      this.enrouteTrips = [];\n      this.cancelledTrips = [];\n      this.deliveredTrips = [];\n      this.tonuTrips = [];\n      this.lastEvaluatedKey = \"\";\n      this.initDataTable();\n    } else {\n      return false;\n    }\n  }\n\n  setActiveDiv(type) {\n    this.activeTab = type;\n  }\n\n  categoryChange(event) {\n    if (event == \"driver\" || event == \"vehicle\" || event == \"asset\" || event == \"tripType\" || event == \"orderNo\" || event == \"tripStatus\") {\n      this.tripsFiltr.searchValue = null;\n      this.orderValue = null;\n    } else {\n      this.tripsFiltr.searchValue = \"\";\n    }\n  }\n\n  resetMainTabValues() {\n    this.confirmedTrips = [];\n    this.dispatchedTrips = [];\n    this.startedTrips = [];\n    this.enrouteTrips = [];\n    this.cancelledTrips = [];\n    this.deliveredTrips = [];\n\n    for (let i = 0; i < this.trips.length; i++) {\n      const element = this.trips[i];\n\n      for (let x = 0; x < element.length; x++) {\n        if (this.tripID == element[x].tripID) {\n          element[x].tripStatus = this.tripStatus;\n        }\n\n        if (element[x].tripStatus == \"confirmed\") {\n          this.confirmedTrips.push(element[x]);\n        } else if (element[x].tripStatus == \"dispatched\") {\n          this.dispatchedTrips.push(element[x]);\n        } else if (element[x].tripStatus == \"started\") {\n          this.startedTrips.push(element[x]);\n        } else if (element[x].tripStatus == \"enroute\") {\n          this.enrouteTrips.push(element[x]);\n        } else if (element[x].tripStatus == \"cancelled\") {\n          element[x].showStatus = false;\n          this.cancelledTrips.push(element[x]);\n        } else if (element[x].tripStatus == \"delivered\") {\n          element[x].showStatus = false;\n          this.deliveredTrips.push(element[x]);\n        } else if (element[x].tripStatus == \"tonu\") {\n          element[x].showStatus = false;\n          element[x].tripStatus = element[x].tripStatus.toUpperCase();\n          this.tonuTrips.push(element[x]);\n        }\n      }\n    }\n  }\n\n  refreshData() {\n    this.trips = [];\n    this.tripsFiltr = {\n      searchValue: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      category: null,\n      start: \"\",\n      end: \"\"\n    };\n    this.records = false;\n    this.dataMessage = Constants.FETCHING_DATA;\n    this.lastEvaluatedKey = \"\";\n    $(\"#categorySelect\").text(\"Search by category\");\n    this.activeTab = \"all\";\n    this.confirmedTrips = [];\n    this.dispatchedTrips = [];\n    this.startedTrips = [];\n    this.enrouteTrips = [];\n    this.cancelledTrips = [];\n    this.deliveredTrips = [];\n    this.tonuTrips = [];\n    this.initDataTable();\n  }\n\n  onScroll() {\n    if (this.loaded) {\n      this.tripsFiltr.searchValue = \"\";\n      this.tripsFiltr.startDate = \"\";\n      this.tripsFiltr.endDate = \"\";\n      this.tripsFiltr.category = null;\n      this.isLoad = true;\n      this.isLoadText = \"Loading\";\n      this.initDataTable();\n    }\n\n    this.loaded = false;\n  }\n\n};\n\nTripListComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ToastrService\n}, {\n  type: NgxSpinnerService\n}, {\n  type: DashboardUtilityService\n}];\n\nTripListComponent = __decorate([Component({\n  selector: \"app-trip-list\",\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TripListComponent);\nexport { TripListComponent };","map":null,"metadata":{},"sourceType":"module"}