{"ast":null,"code":"import _asyncToGenerator from \"C:/FH/fh-cloud-app/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"!C:\\\\FH\\\\fh-cloud-app\\\\node_modules\\\\@ngtools\\\\webpack\\\\src\\\\loaders\\\\direct-resource.js!./add-vehicle.component.html\";\nimport __NG_CLI_RESOURCE__1 from \"./add-vehicle.component.css\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ApiService, DashboardUtilityService } from \"../../../../services\";\nimport { Router } from \"@angular/router\";\nimport { map } from \"rxjs/operators\";\nimport { from } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { ListService } from \"../../../../services\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport * as moment from 'moment';\nimport * as _ from \"lodash\";\nimport { CountryStateCityService } from \"src/app/services/country-state-city.service\";\nimport { RouteManagementServiceService } from \"src/app/services/route-management-service.service\";\nlet AddVehicleComponent = class AddVehicleComponent {\n  constructor(apiService, route, location, toastr, router, httpClient, listService, domSanitizer, countryStateCity, dashboardUtilityService, routerMgmtService) {\n    this.apiService = apiService;\n    this.route = route;\n    this.location = location;\n    this.toastr = toastr;\n    this.router = router;\n    this.httpClient = httpClient;\n    this.listService = listService;\n    this.domSanitizer = domSanitizer;\n    this.countryStateCity = countryStateCity;\n    this.dashboardUtilityService = dashboardUtilityService;\n    this.routerMgmtService = routerMgmtService;\n    this.showDriverModal = false;\n    this.createdDate = \"\";\n    this.createdTime = \"\";\n    this.title = \"Add Vehicle\";\n    this.Asseturl = this.apiService.AssetUrl;\n    this.activeTab = 1;\n    this.modalImage = \"\";\n    this.pdfSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(\"\");\n    /**\r\n     * Quantum prop\r\n     */\n\n    this.quantumsList = [];\n    this.quantum = \"\";\n    this.quantumSelected = \"\";\n    this.quantumcurrentStatus = \"\";\n    /**\r\n     *Group Properties\r\n     */\n\n    this.groupData = {\n      groupType: \"vehicles\",\n      groupName: \"\",\n      groupMembers: [],\n      description: \"\"\n    };\n    this.vehicles = [];\n    this.hasBasic = false;\n    this.hasLife = false;\n    this.hasSpecs = false;\n    this.hasFluids = false;\n    this.vehicleTypeList = [];\n    this.vehicleIdentification = \"\";\n    this.vehicleType = null;\n    this.VIN = \"\";\n    this.DOT = \"\";\n    this.year = null;\n    this.manufacturerID = null;\n    this.modelID = null;\n    this.plateNumber = \"\";\n    this.countryCode = null;\n    this.stateCode = null;\n    this.driverID = null;\n    this.teamDriverID = null;\n    this.servicePrograms = null;\n    this.repeatByTime = \"\";\n    this.repeatByTimeUnit = \"\";\n    this.reapeatbyOdometerMiles = \"\";\n    this.annualSafetyDate = null;\n    this.annualSafetyReminder = true;\n    this.currentStatus = null;\n    this.ownership = null;\n    this.ownerOperatorID = null;\n    this.groupID = null;\n    this.aceID = \"\";\n    this.aciID = \"\";\n    this.iftaReporting = false;\n    this.vehicleColor = \"\";\n    this.bodyType = \"\";\n    this.bodySubType = \"\";\n    this.msrp = \"\";\n    this.inspectionFormID = null;\n    this.lifeCycle = {\n      inServiceDate: \"\",\n      startDate: null,\n      inServiceOdometer: \"\",\n      estimatedServiceYears: \"\",\n      estimatedServiceMonths: \"\",\n      estimatedServiceMiles: \"\",\n      estimatedResaleValue: \"\",\n      outOfServiceDate: null,\n      outOfServiceOdometer: \"\"\n    };\n    this.specifications = {\n      height: null,\n      heightUnit: \"Feet\",\n      length: \"\",\n      lengthUnit: \"\",\n      width: \"\",\n      widthUnit: \"\",\n      interiorVolume: \"\",\n      passangerVolume: \"\",\n      groundClearnce: \"\",\n      groundClearnceUnit: \"Feet\",\n      bedLength: \"\",\n      bedLengthUnit: \"\",\n      cargoVolume: \"\",\n      tareWeight: \"\",\n      grossVehicleWeightRating: \"\",\n      towingCapacity: \"\",\n      maxPayload: \"\",\n      EPACity: \"\",\n      EPACombined: \"\",\n      EPAHighway: \"\"\n    };\n    this.insurance = {\n      dateOfIssue: null,\n      premiumAmount: \"\",\n      premiumCurrency: null,\n      vendorID: null,\n      dateOfExpiry: null,\n      reminder: \"\",\n      remiderEvery: null,\n      policyNumber: \"\",\n      amount: 0,\n      amountCurrency: null\n    };\n    this.fluid = {\n      fuelType: null,\n      fuelTankOneCapacity: \"\",\n      fuelTankOneType: \"\",\n      fuelQuality: \"\",\n      fuelTankTwoCapacity: \"\",\n      fuelTankTwoType: \"\",\n      oilCapacity: null,\n      oilCapacityType: \"\",\n      def: null,\n      defType: \"\"\n    };\n    this.wheelsAndTyres = {\n      numberOfTyres: \"\",\n      driveType: \"\",\n      brakeSystem: \"\",\n      wheelbase: \"\",\n      rearAxle: \"\",\n      frontTyreType: \"\",\n      rearTyreType: \"\",\n      frontTrackWidth: \"\",\n      rearTrackWidth: \"\",\n      frontWheelDiameter: \"\",\n      rearWheelDiameter: \"\",\n      frontTyrePSI: \"\",\n      rearTyrePSI: \"\"\n    };\n    this.engine = {\n      engineSummary: \"\",\n      engineBrand: \"\",\n      aspiration: \"\",\n      blockType: \"\",\n      bore: \"\",\n      camType: \"\",\n      stroke: \"\",\n      valves: \"\",\n      compression: \"\",\n      cylinders: \"\",\n      displacement: \"\",\n      fuelIndication: \"\",\n      fuelQuality: \"\",\n      maxHP: \"\",\n      maxTorque: 0,\n      readlineRPM: \"\",\n      transmissionSummary: \"\",\n      transmissionType: \"\",\n      transmissonBrand: \"\",\n      transmissionGears: \"\"\n    };\n    this.purchase = {\n      purchaseVendorID: null,\n      warrantyExpirationDate: null,\n      warrantyExpirationDateReminder: false,\n      purchasePrice: \"\",\n      purchasePriceCurrency: null,\n      warrantyExpirationMeter: \"\",\n      purchaseDate: null,\n      purchaseComments: \"\",\n      purchaseOdometer: \"\",\n      gstInc: true\n    };\n    this.loan = {\n      loanVendorID: null,\n      amountOfLoan: \"\",\n      amountOfLoanCurrency: null,\n      aspiration: \"\",\n      annualPercentageRate: \"\",\n      gstInc: true,\n      downPayment: \"\",\n      downPaymentCurrency: null,\n      dateOfLoan: null,\n      monthlyPayment: \"\",\n      monthlyPaymentCurrency: null,\n      firstPaymentDate: \"\",\n      numberOfPayments: \"\",\n      loadEndDate: null,\n      accountNumber: \"\",\n      generateExpenses: \"\",\n      notes: \"\",\n      loanDueDate: null,\n      lReminder: true\n    };\n    this.settings = {\n      primaryMeter: \"miles\",\n      fuelUnit: \"gallons(CA)\",\n      hardBreakingParams: 0,\n      hardAccelrationParams: 0,\n      turningParams: 0,\n      measurmentUnit: \"imperial\"\n    };\n    this.ownerOperators = [];\n    this.serviceProgramss = [];\n    this.inspectionForms = [];\n    this.manufacturers = [];\n    this.models = [];\n    this.states = [];\n    this.groups = [];\n    this.uploadedPhotos = [];\n    this.uploadedDocs = [];\n    this.purchaseDocs = [];\n    this.loanDocs = [];\n    this.existingPhotos = [];\n    this.existingDocs = [];\n    this.existPDocs = [];\n    this.existLDocs = [];\n    this.programs = [];\n    this.vendors = [];\n    this.errors = {};\n    this.response = \"\";\n    this.hasError = false;\n    this.hasSuccess = false;\n    this.Error = \"\";\n    this.Success = \"\";\n    this.manufacturerDataSource = [];\n    this.modals = [];\n    this.slides = [];\n    this.pDocs = [];\n    this.lDocs = [];\n    this.years = [];\n    this.documentSlides = [];\n    this.localPhotos = [];\n    this.slideConfig = {\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      dots: true,\n      infinite: true,\n      autoplay: true,\n      autoplaySpeed: 1500\n    };\n    this.vendorModalStatus = false;\n    this.submitDisabled = false;\n    this.groupSubmitDisabled = false;\n    this.countryName = \"\";\n    this.stateName = \"\";\n    this.dateMinLimit = {\n      year: 1950,\n      month: 1,\n      day: 1\n    };\n    this.date = new Date();\n    this.futureDatesLimit = {\n      year: this.date.getFullYear() + 30,\n      month: 12,\n      day: 31\n    };\n    this.editDisabled = false;\n    this.currentYear = '';\n    this.groupsData = [];\n    this.selectedFileNames = new Map();\n    $(document).ready(() => {// this.vehicleForm = $('#vehicleForm').validate();\n    });\n    this.sessionID = this.routerMgmtService.vehicleUpdateSessionID;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.getYears();\n\n      _this.currentYear = moment().format('YYYY');\n\n      _this.fetchInspectionForms();\n\n      _this.fetchVehicles();\n\n      _this.fetchManufacturers();\n\n      _this.listService.fetchVendors();\n\n      _this.listService.fetchOwnerOperators();\n\n      _this.listService.fetchServicePrograms();\n\n      _this.listService.fetchDrivers();\n\n      _this.vehicleID = _this.route.snapshot.params[`vehicleID`];\n\n      if (_this.vehicleID) {\n        _this.title = \"Edit Vehicle\";\n        yield _this.fetchVehicleByID();\n      } else {\n        _this.title = \"Add Vehicle\";\n      }\n\n      _this.httpClient.get(\"assets/vehicleType.json\").subscribe(data => {\n        _this.vehicleTypeList = data;\n      });\n\n      _this.settings.hardBreakingParams = 6;\n      _this.settings.hardAccelrationParams = 6;\n      _this.settings.turningParams = 6;\n      $(\"#hardBreakingParametersValue\").html(6);\n      $(\"#hardAccelrationParametersValue\").html(6);\n      $(\"#turningParametersValue\").html(6);\n      let vendorList = new Array();\n\n      _this.getValidVendors(vendorList);\n\n      _this.vendors = vendorList;\n      let programList = new Array();\n\n      _this.getValidPrograms(programList);\n\n      _this.serviceProgramss = programList;\n      console.log('service', _this.serviceProgramss);\n      let operatorList = new Array();\n\n      _this.getValidOperators(operatorList);\n\n      _this.ownerOperators = operatorList;\n      let driverList = new Array();\n\n      _this.getValidDrivers(driverList);\n\n      _this.drivers = driverList;\n\n      _this.fetchGroupsList();\n    })();\n  }\n\n  getYears() {\n    var max = new Date().getFullYear() + 1,\n        min = 1980,\n        max = max;\n\n    for (var i = max; i >= min; i--) {\n      this.years.push(i);\n    }\n  }\n\n  getValidVendors(vendorList) {\n    let ids = [];\n    this.listService.vendorList.forEach(element => {\n      element.forEach(element2 => {\n        if (element2.isDeleted === 0 && !ids.includes(element2.contactID)) {\n          vendorList.push(element2);\n          ids.push(element2.contactID);\n        }\n\n        if (element2.isDeleted === 1) {\n          if (element2.contactID === this.insurance.vendorID) {\n            this.insurance.vendorID = null;\n          }\n\n          if (element2.contactID === this.purchase.purchaseVendorID) {\n            this.purchase.purchaseVendorID = null;\n          }\n\n          if (element2.contactID === this.loan.loanVendorID) {\n            this.loan.loanVendorID = null;\n          }\n        }\n      });\n    });\n  }\n\n  getValidPrograms(programsList) {\n    let ids = [];\n    this.listService.serviceProgramList.forEach(element => {\n      console.log('elemet--', element);\n      element.forEach(element2 => {\n        console.log('element2-----', element2); // if (element2.isDeleted === 0 && !ids.includes(element2.programID)) {\n\n        if (element2.isDeleted === 0) {\n          programsList.push(element2);\n          console.log('programLsit--', programsList); // ids.push(element2.programID);\n\n          console.log('ids---', ids);\n        }\n\n        if (element2.isDeleted === 1 && this.servicePrograms.includes(element2.programID)) {\n          let ind = this.servicePrograms.indexOf(this.servicePrograms[element2.programID]);\n          this.servicePrograms.splice(ind, 1);\n        }\n      });\n    });\n  }\n\n  getValidOperators(operatorsList) {\n    let ids = [];\n    this.listService.ownerOperatorList.forEach(element => {\n      element.forEach(element2 => {\n        if (element2.isDeleted === 0 && !ids.includes(element2.contactID)) {\n          operatorsList.push(element2);\n          ids.push(element2.contactID);\n        }\n\n        if (element2.isDeleted === 1 && this.ownerOperatorID === element2.contactID) {\n          this.ownerOperatorID = null;\n        }\n      });\n    });\n  }\n\n  getValidDrivers(driverList) {\n    let ids = [];\n    this.listService.driversList.forEach(element => {\n      element.forEach(element2 => {\n        if (element2.isDeleted === 0 && !ids.includes(element2.driverID)) {\n          driverList.push(element2);\n          ids.push(element2.driverID);\n        }\n\n        if (element2.isDeleted === 1 && this.driverID === element2.driverID) {\n          this.driverID = null;\n        }\n      });\n    });\n  }\n\n  getInspectionForms() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.fetchInspectionForms();\n    })();\n  }\n\n  fetchDrivers() {\n    this.apiService.getData(\"drivers\").subscribe(result => {\n      this.drivers = result.Items;\n    });\n  }\n\n  fetchManufacturers() {\n    this.httpClient.get(\"assets/jsonFiles/vehicles/trucks.json\").subscribe(data => {\n      data.forEach(element => {\n        this.manufacturerDataSource.push(Object.keys(element)[0].toUpperCase());\n      });\n    });\n  }\n\n  fetchModels() {\n    this.modals = [];\n    let manufacturer = \"\";\n\n    if (this.manufacturerID !== null) {\n      manufacturer = this.manufacturerID.toLowerCase();\n    }\n\n    this.httpClient.get(\"assets/jsonFiles/vehicles/trucks.json\").subscribe(data => {\n      data.forEach(element => {\n        let output = [];\n\n        if (element[manufacturer]) {\n          element[manufacturer].forEach(element => {\n            output.push(element.toUpperCase());\n          });\n          this.modals = output;\n        }\n      });\n    });\n  }\n\n  getStates(event) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const countryCode = event;\n      _this3.stateCode = \"\";\n      _this3.states = yield _this3.countryStateCity.GetStatesByCountryCode([countryCode]);\n    })();\n  }\n\n  resetModel() {\n    this.fetchModels();\n    this.modelID = null;\n    $(\"#vehicleSelect\").val(\"\");\n  }\n\n  cancel() {\n    this.location.back(); // <-- go back to previous location on cancel\n  }\n\n  gotoVehiclePage() {\n    $(\"#addDriverModelVehicle\").modal(\"show\");\n  }\n\n  getGroups() {\n    this.fetchGroupsList();\n  }\n\n  openProgram(value) {\n    this.listService.separateModals(value);\n  }\n\n  fetchInspectionForms() {\n    this.apiService.getData(\"inspectionForms/type/vehicle\").subscribe(result => {\n      this.inspectionForms = result.Items;\n    });\n  }\n\n  onAddVehicle() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.hasError = false;\n      _this4.hasSuccess = false;\n      _this4.Error = \"\";\n      _this4.submitDisabled = true;\n\n      _this4.hideErrors();\n\n      const data = {\n        vehicleIdentification: _this4.vehicleIdentification,\n        vehicleType: _this4.vehicleType,\n        VIN: _this4.VIN,\n        DOT: _this4.DOT,\n        year: _this4.year,\n        manufacturerID: _this4.manufacturerID,\n        modelID: _this4.modelID,\n        plateNumber: _this4.plateNumber,\n        countryID: _this4.countryCode,\n        stateID: _this4.stateCode,\n        countryName: _this4.countryName,\n        stateName: _this4.stateName,\n        driverID: _this4.driverID,\n        teamDriverID: _this4.teamDriverID,\n        servicePrograms: Array.isArray(_this4.servicePrograms) ? _this4.servicePrograms : [],\n        annualSafetyDate: _this4.annualSafetyDate,\n        annualSafetyReminder: _this4.annualSafetyReminder,\n        currentStatus: _this4.currentStatus,\n        ownership: _this4.ownership,\n        ownerOperatorID: _this4.ownerOperatorID,\n        groupID: _this4.groupID,\n        aceID: _this4.aceID,\n        aciID: _this4.aciID,\n        vehicleColor: _this4.vehicleColor,\n        bodyType: _this4.bodyType,\n        bodySubType: _this4.bodySubType,\n        msrp: _this4.msrp,\n        iftaReporting: _this4.iftaReporting,\n        inspectionFormID: _this4.inspectionFormID,\n        createdDate: _this4.createdDate,\n        createdTime: _this4.createdTime,\n        lifeCycle: {\n          inServiceDate: _this4.lifeCycle.inServiceDate,\n          startDate: _this4.lifeCycle.startDate,\n          inServiceOdometer: _this4.lifeCycle.inServiceOdometer,\n          estimatedServiceYears: _this4.lifeCycle.estimatedServiceYears,\n          estimatedServiceMonths: _this4.lifeCycle.estimatedServiceMonths,\n          estimatedServiceMiles: _this4.lifeCycle.estimatedServiceMiles,\n          estimatedResaleValue: _this4.lifeCycle.estimatedResaleValue,\n          outOfServiceDate: _this4.lifeCycle.outOfServiceDate,\n          outOfServiceOdometer: _this4.lifeCycle.outOfServiceOdometer\n        },\n        specifications: {\n          height: _this4.specifications.height,\n          heightUnit: _this4.specifications.heightUnit,\n          length: _this4.specifications.length,\n          lengthUnit: _this4.specifications.lengthUnit,\n          width: _this4.specifications.width,\n          widthUnit: _this4.specifications.widthUnit,\n          interiorVolume: _this4.specifications.interiorVolume,\n          passangerVolume: _this4.specifications.passangerVolume,\n          groundClearnce: _this4.specifications.groundClearnce,\n          groundClearnceUnit: _this4.specifications.groundClearnceUnit,\n          bedLength: _this4.specifications.bedLength,\n          bedLengthUnit: _this4.specifications.bedLengthUnit,\n          cargoVolume: _this4.specifications.cargoVolume,\n          tareWeight: _this4.specifications.tareWeight,\n          grossVehicleWeightRating: _this4.specifications.grossVehicleWeightRating,\n          towingCapacity: _this4.specifications.towingCapacity,\n          maxPayload: _this4.specifications.maxPayload,\n          EPACity: _this4.specifications.EPACity,\n          EPACombined: _this4.specifications.EPACombined,\n          EPAHighway: _this4.specifications.EPAHighway\n        },\n        insurance: {\n          dateOfIssue: _this4.insurance.dateOfIssue,\n          premiumAmount: _this4.insurance.premiumAmount,\n          premiumCurrency: _this4.insurance.premiumCurrency,\n          vendorID: _this4.insurance.vendorID,\n          dateOfExpiry: _this4.insurance.dateOfExpiry,\n          reminder: _this4.insurance.reminder,\n          remiderEvery: _this4.insurance.remiderEvery,\n          policyNumber: _this4.insurance.policyNumber,\n          amount: _this4.insurance.amount,\n          amountCurrency: _this4.insurance.amountCurrency\n        },\n        fluid: {\n          fuelType: _this4.fluid.fuelType,\n          fuelTankOneCapacity: _this4.fluid.fuelTankOneCapacity,\n          fuelTankOneType: _this4.fluid.fuelTankOneType,\n          fuelQuality: _this4.fluid.fuelQuality,\n          fuelTankTwoCapacity: _this4.fluid.fuelTankTwoCapacity,\n          fuelTankTwoType: _this4.fluid.fuelTankOneType,\n          oilCapacity: _this4.fluid.oilCapacity,\n          oilCapacityType: _this4.fluid.oilCapacityType,\n          def: _this4.fluid.def,\n          defType: _this4.fluid.defType\n        },\n        wheelsAndTyres: {\n          numberOfTyres: _this4.wheelsAndTyres.numberOfTyres,\n          driveType: _this4.wheelsAndTyres.driveType,\n          brakeSystem: _this4.wheelsAndTyres.brakeSystem,\n          wheelbase: _this4.wheelsAndTyres.wheelbase,\n          rearAxle: _this4.wheelsAndTyres.rearAxle,\n          frontTyreType: _this4.wheelsAndTyres.frontTyreType,\n          rearTyreType: _this4.wheelsAndTyres.rearTyreType,\n          frontTrackWidth: _this4.wheelsAndTyres.frontTrackWidth,\n          rearTrackWidth: _this4.wheelsAndTyres.rearTrackWidth,\n          frontWheelDiameter: _this4.wheelsAndTyres.frontWheelDiameter,\n          rearWheelDiameter: _this4.wheelsAndTyres.rearWheelDiameter,\n          frontTyrePSI: _this4.wheelsAndTyres.frontTyrePSI,\n          rearTyrePSI: _this4.wheelsAndTyres.rearTyrePSI\n        },\n        engine: {\n          engineSummary: _this4.engine.engineSummary,\n          engineBrand: _this4.engine.engineBrand,\n          aspiration: _this4.engine.aspiration,\n          blockType: _this4.engine.blockType,\n          bore: _this4.engine.bore,\n          camType: _this4.engine.camType,\n          stroke: _this4.engine.stroke,\n          valves: _this4.engine.valves,\n          compression: _this4.engine.compression,\n          cylinders: _this4.engine.cylinders,\n          displacement: _this4.engine.displacement,\n          fuelIndication: _this4.engine.fuelIndication,\n          fuelQuality: _this4.engine.fuelQuality,\n          maxHP: _this4.engine.maxHP,\n          maxTorque: _this4.engine.maxTorque,\n          readlineRPM: _this4.engine.readlineRPM,\n          transmissionSummary: _this4.engine.transmissionSummary,\n          transmissionType: _this4.engine.transmissionType,\n          transmissonBrand: _this4.engine.transmissonBrand,\n          transmissionGears: _this4.engine.transmissionGears\n        },\n        purchase: {\n          purchaseVendorID: _this4.purchase.purchaseVendorID,\n          warrantyExpirationDate: _this4.purchase.warrantyExpirationDate,\n          warrantyExpirationDateReminder: _this4.purchase.warrantyExpirationDateReminder,\n          purchasePrice: _this4.purchase.purchasePrice,\n          purchasePriceCurrency: _this4.purchase.purchasePriceCurrency,\n          warrantyExpirationMeter: _this4.purchase.warrantyExpirationMeter,\n          purchaseDate: _this4.purchase.purchaseDate,\n          purchaseComments: _this4.purchase.purchaseComments,\n          purchaseOdometer: _this4.purchase.purchaseOdometer,\n          gstInc: _this4.purchase.gstInc\n        },\n        loan: {\n          loanVendorID: _this4.loan.loanVendorID,\n          amountOfLoan: _this4.loan.amountOfLoan,\n          amountOfLoanCurrency: _this4.loan.amountOfLoanCurrency,\n          aspiration: _this4.loan.aspiration,\n          annualPercentageRate: _this4.loan.annualPercentageRate,\n          gstInc: _this4.loan.gstInc,\n          downPayment: _this4.loan.downPayment,\n          downPaymentCurrency: _this4.loan.downPaymentCurrency,\n          dateOfLoan: _this4.loan.dateOfLoan,\n          monthlyPayment: _this4.loan.monthlyPayment,\n          monthlyPaymentCurrency: _this4.loan.monthlyPaymentCurrency,\n          firstPaymentDate: _this4.loan.firstPaymentDate,\n          numberOfPayments: _this4.loan.numberOfPayments,\n          loadEndDate: _this4.loan.loadEndDate,\n          accountNumber: _this4.loan.accountNumber,\n          generateExpenses: _this4.loan.generateExpenses,\n          notes: _this4.loan.notes,\n          loanDueDate: _this4.loan.loanDueDate,\n          lReminder: _this4.loan.lReminder\n        },\n        settings: {\n          primaryMeter: _this4.settings.primaryMeter,\n          fuelUnit: _this4.settings.fuelUnit,\n          hardBreakingParams: _this4.settings.hardBreakingParams,\n          hardAccelrationParams: _this4.settings.hardAccelrationParams,\n          turningParams: _this4.settings.turningParams,\n          measurmentUnit: _this4.settings.measurmentUnit\n        },\n        activeTab: _this4.activeTab\n      }; // create form data instance\n\n      const formData = new FormData(); // append photos if any\n\n      for (let i = 0; i < _this4.uploadedPhotos.length; i++) {\n        formData.append(\"uploadedPhotos\", _this4.uploadedPhotos[i]);\n      } // append docs if any\n\n\n      for (let j = 0; j < _this4.uploadedDocs.length; j++) {\n        formData.append(\"uploadedDocs\", _this4.uploadedDocs[j]);\n      } // append purchase docs if any\n\n\n      for (let j = 0; j < _this4.purchaseDocs.length; j++) {\n        formData.append(\"purchaseDocs\", _this4.purchaseDocs[j]);\n      } // append loan docs if any\n\n\n      for (let j = 0; j < _this4.loanDocs.length; j++) {\n        formData.append(\"loanDocs\", _this4.loanDocs[j]);\n      } // append other fields\n\n\n      formData.append(\"data\", JSON.stringify(data));\n\n      try {\n        return yield new Promise((resolve, reject) => {\n          _this4.apiService.postData(\"vehicles\", formData, true).subscribe({\n            complete: () => {},\n            error: err => {\n              from(err.error).pipe(map(val => {\n                // val.message = val.message.replace(/\".*\"/, 'This Field');\n                _this4.errors[val.context.label] = val.message;\n              })).subscribe({\n                complete: () => {\n                  _this4.throwErrors();\n\n                  _this4.hasError = true;\n                  _this4.submitDisabled = false;\n                  if (err) return reject(err);\n                },\n                error: () => {\n                  _this4.submitDisabled = false;\n                },\n                next: () => {}\n              });\n            },\n            next: res => {\n              _this4.response = res;\n              _this4.Success = \"\";\n              _this4.submitDisabled = false;\n\n              _this4.toastr.success(\"Vehicle Added Successfully\");\n\n              _this4.router.navigateByUrl(\"/fleet/vehicles/list\");\n\n              _this4.dashboardUtilityService.refreshVehicles = true;\n\n              _this4.router.navigateByUrl(`/fleet/vehicles/list/${_this4.routerMgmtService.vehicleUpdated()}`); // this.location.back();\n\n            }\n          });\n        });\n      } catch (error) {\n        _this4.submitDisabled = false;\n        return \"error found\";\n      }\n    })();\n  }\n\n  throwErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      if (v == \"vehicleIdentification\" || v == \"VIN\") {\n        $('[name=\"' + v + '\"]').after('<label id=\"' + v + '-error\" class=\"error\" for=\"' + v + '\">' + this.errors[v] + \"</label>\").addClass(\"error\");\n      }\n    });\n  }\n\n  hideErrors() {\n    from(Object.keys(this.errors)).subscribe(v => {\n      $('[name=\"' + v + '\"]').removeClass(\"error\").next().remove(\"label\");\n    });\n    this.errors = {};\n  }\n\n  scrollError() {\n    let errorList;\n    setTimeout(() => {\n      errorList = document.getElementsByClassName(\"error\").length;\n\n      if (errorList > 0) {\n        let topPosition = $(\".error\").parent(\"div\").offset().top;\n        window.scrollTo({\n          top: topPosition - 200,\n          left: 0,\n          behavior: \"smooth\"\n        });\n      }\n    }, 1500);\n  }\n  /*\r\n   * Selecting files before uploading\r\n   */\n\n\n  selectDocuments(event, obj) {\n    let files = [...event.target.files];\n\n    if (obj === \"uploadedDocs\") {\n      for (let i = 0; i < files.length; i++) {\n        this.uploadedDocs.push(files[i]);\n      }\n    } else if (obj === \"purchase\") {\n      for (let i = 0; i < files.length; i++) {\n        this.purchaseDocs.push(files[i]);\n      }\n    } else if (obj === \"loan\") {\n      for (let i = 0; i < files.length; i++) {\n        this.loanDocs.push(files[i]);\n      }\n    } else {\n      for (let i = 0; i < files.length; i++) {\n        this.uploadedPhotos.push(files[i]);\n      }\n\n      for (let i = 0; i < files.length; i++) {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          this.slides.push(e.target.result);\n        };\n\n        reader.readAsDataURL(files[i]);\n      }\n    }\n  } // EDIT\n\n\n  fetchVehicleByID() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let result = yield _this5.apiService.getData(\"vehicles/\" + _this5.vehicleID).toPromise(); // .subscribe((result: any) => {\n\n      _this5.editDisabled = true;\n      result = result.Items[0];\n      _this5.vehicleIdentification = result.vehicleIdentification;\n      _this5.vehicleType = result.vehicleType;\n      _this5.VIN = result.VIN;\n      _this5.DOT = result.DOT;\n      _this5.year = result.year;\n      _this5.manufacturerID = result.manufacturerID;\n      _this5.modelID = result.modelID;\n      _this5.plateNumber = result.plateNumber;\n      _this5.countryCode = result.countryID;\n\n      _this5.getStates(result.countryID);\n\n      _this5.stateCode = result.stateID;\n      _this5.countryName = result.countryName;\n      _this5.stateName = result.stateName;\n      _this5.driverID = result.driverID;\n      _this5.teamDriverID = result.teamDriverID;\n      _this5.servicePrograms = result.servicePrograms;\n      _this5.annualSafetyDate = _.isEmpty(result.annualSafetyDate) ? null : result.annualSafetyDate, _this5.annualSafetyReminder = result.annualSafetyReminder, _this5.currentStatus = result.currentStatus;\n      _this5.ownership = result.ownership;\n      _this5.ownerOperatorID = result.ownerOperatorID;\n      _this5.groupID = result.groupID;\n      _this5.aceID = result.aceID;\n      _this5.aciID = result.aciID;\n      _this5.iftaReporting = result.iftaReporting, _this5.vehicleColor = result.vehicleColor;\n      _this5.bodyType = result.bodyType;\n      _this5.bodySubType = result.bodySubType;\n      _this5.msrp = result.msrp;\n      _this5.inspectionFormID = result.inspectionFormID;\n      _this5.createdDate = result.createdDate;\n      _this5.createdTime = result.createdTime;\n      _this5.lifeCycle = {\n        inServiceDate: _.isEmpty(result.lifeCycle.inServiceDate) ? null : result.lifeCycle.inServiceDate,\n        inServiceOdometer: result.lifeCycle.inServiceOdometer,\n        startDate: _.isEmpty(result.lifeCycle.startDate) ? null : result.lifeCycle.startDate,\n        estimatedServiceYears: result.lifeCycle.estimatedServiceYears,\n        estimatedServiceMonths: result.lifeCycle.estimatedServiceMonths,\n        estimatedServiceMiles: result.lifeCycle.estimatedServiceMiles,\n        estimatedResaleValue: result.lifeCycle.estimatedResaleValue,\n        outOfServiceDate: _.isEmpty(result.lifeCycle.outOfServiceDate) ? null : result.lifeCycle.outOfServiceDate,\n        outOfServiceOdometer: result.lifeCycle.outOfServiceOdometer\n      };\n      _this5.specifications = {\n        height: result.specifications.height,\n        heightUnit: result.specifications.heightUnit,\n        width: result.specifications.width,\n        widthUnit: result.specifications.widthUnit,\n        length: result.specifications.length,\n        lengthUnit: result.specifications.lengthUnit,\n        interiorVolume: result.specifications.interiorVolume,\n        passangerVolume: result.specifications.passangerVolume,\n        groundClearnce: result.specifications.groundClearnce,\n        groundClearnceUnit: result.specifications.groundClearnceUnit,\n        bedLength: result.specifications.bedLength,\n        bedLengthUnit: result.specifications.bedLengthUnit,\n        cargoVolume: result.specifications.cargoVolume,\n        tareWeight: result.specifications.tareWeight,\n        grossVehicleWeightRating: result.specifications.grossVehicleWeightRating,\n        towingCapacity: result.specifications.towingCapacity,\n        maxPayload: result.specifications.maxPayload,\n        EPACity: result.specifications.EPACity,\n        EPACombined: result.specifications.EPACombined,\n        EPAHighway: result.specifications.EPAHighway\n      };\n      _this5.insurance = {\n        dateOfIssue: _.isEmpty(result.insurance.dateOfIssue) ? null : result.insurance.dateOfIssue,\n        premiumAmount: result.insurance.premiumAmount,\n        premiumCurrency: result.insurance.premiumCurrency,\n        vendorID: result.insurance.vendorID,\n        dateOfExpiry: _.isEmpty(result.insurance.dateOfExpiry) ? null : result.insurance.dateOfExpiry,\n        reminder: result.insurance.reminder,\n        remiderEvery: result.insurance.remiderEvery,\n        policyNumber: result.insurance.policyNumber,\n        amount: result.insurance.amount,\n        amountCurrency: result.insurance.amountCurrency\n      };\n      _this5.fluid = {\n        fuelType: result.fluid.fuelType,\n        fuelTankOneCapacity: result.fluid.fuelTankOneCapacity,\n        fuelTankOneType: result.fluid.fuelTankOneType,\n        fuelQuality: result.fluid.fuelQuality,\n        fuelTankTwoCapacity: result.fluid.fuelTankTwoCapacity,\n        fuelTankTwoType: result.fluid.fuelTankTwoType,\n        oilCapacity: result.fluid.oilCapacity,\n        oilCapacityType: result.fluid.oilCapacityType,\n        def: result.fluid.def,\n        defType: result.fluid.defType\n      };\n      _this5.wheelsAndTyres = {\n        numberOfTyres: result.wheelsAndTyres.numberOfTyres,\n        driveType: result.wheelsAndTyres.driveType,\n        brakeSystem: result.wheelsAndTyres.brakeSystem,\n        wheelbase: result.wheelsAndTyres.wheelbase,\n        rearAxle: result.wheelsAndTyres.rearAxle,\n        frontTyreType: result.wheelsAndTyres.frontTyreType,\n        rearTyreType: result.wheelsAndTyres.rearTyreType,\n        frontTrackWidth: result.wheelsAndTyres.frontTrackWidth,\n        rearTrackWidth: result.wheelsAndTyres.rearTrackWidth,\n        frontWheelDiameter: result.wheelsAndTyres.frontWheelDiameter,\n        rearWheelDiameter: result.wheelsAndTyres.rearWheelDiameter,\n        frontTyrePSI: result.wheelsAndTyres.frontTyrePSI,\n        rearTyrePSI: result.wheelsAndTyres.rearTyrePSI\n      };\n      _this5.engine = {\n        engineSummary: result.engine.engineSummary,\n        engineBrand: result.engine.engineBrand,\n        aspiration: result.engine.aspiration,\n        blockType: result.engine.blockType,\n        bore: result.engine.bore,\n        camType: result.engine.camType,\n        stroke: result.engine.stroke,\n        valves: result.engine.valves,\n        compression: result.engine.compression,\n        cylinders: result.engine.cylinders,\n        displacement: result.engine.displacement,\n        fuelIndication: result.engine.fuelIndication,\n        fuelQuality: result.engine.fuelQuality,\n        maxHP: result.engine.maxHP,\n        maxTorque: result.engine.maxTorque,\n        readlineRPM: result.engine.readlineRPM,\n        transmissionSummary: result.engine.transmissionSummary,\n        transmissionType: result.engine.transmissionType,\n        transmissonBrand: result.engine.transmissonBrand,\n        transmissionGears: result.engine.transmissionGears\n      };\n      _this5.purchase = {\n        purchaseVendorID: result.purchase.purchaseVendorID,\n        warrantyExpirationDate: _.isEmpty(result.purchase.warrantyExpirationDate) ? null : result.purchase.warrantyExpirationDate,\n        warrantyExpirationDateReminder: result.purchase.warrantyExpirationDateReminder,\n        purchasePrice: result.purchase.purchasePrice,\n        purchasePriceCurrency: result.purchase.purchasePriceCurrency,\n        warrantyExpirationMeter: result.purchase.warrantyExpirationMeter,\n        purchaseDate: _.isEmpty(result.purchase.purchaseDate) ? null : result.purchase.purchaseDate,\n        purchaseComments: result.purchase.purchaseComments,\n        purchaseOdometer: result.purchase.purchaseOdometer,\n        gstInc: result.purchase.gstInc\n      };\n      _this5.loan = {\n        loanVendorID: result.loan.loanVendorID,\n        amountOfLoan: result.loan.amountOfLoan,\n        amountOfLoanCurrency: result.loan.amountOfLoanCurrency,\n        aspiration: result.loan.aspiration,\n        annualPercentageRate: result.loan.annualPercentageRate,\n        gstInc: result.loan.gstInc,\n        downPayment: result.loan.downPayment,\n        downPaymentCurrency: result.loan.downPaymentCurrency,\n        dateOfLoan: _.isEmpty(result.loan.dateOfLoan) ? null : result.loan.dateOfLoan,\n        monthlyPayment: result.loan.monthlyPayment,\n        monthlyPaymentCurrency: result.loan.monthlyPaymentCurrency,\n        firstPaymentDate: _.isEmpty(result.loan.firstPaymentDate) ? null : result.loan.firstPaymentDate,\n        numberOfPayments: result.loan.numberOfPayments,\n        loadEndDate: _.isEmpty(result.loan.loadEndDate) ? null : result.loan.loadEndDate,\n        accountNumber: result.loan.accountNumber,\n        generateExpenses: result.loan.generateExpenses,\n        notes: result.loan.notes,\n        loanDueDate: result.loan.loanDueDate,\n        lReminder: result.loan.lReminder\n      };\n      _this5.settings = {\n        primaryMeter: result.settings.primaryMeter,\n        fuelUnit: result.settings.fuelUnit,\n        hardBreakingParams: result.settings.hardBreakingParams,\n        hardAccelrationParams: result.settings.hardAccelrationParams,\n        turningParams: result.settings.turningParams,\n        measurmentUnit: result.settings.measurmentUnit\n      };\n      _this5.existingPhotos = result.uploadedPhotos;\n      _this5.existingDocs = result.uploadedDocs;\n      _this5.existPDocs = result.purchaseDocs;\n      _this5.existLDocs = result.loanDocs;\n\n      if (result.uploadedPhotos != undefined && result.uploadedPhotos.length > 0) {\n        //  this.slides = result.uploadedPhotos.map(\n        //  (x) => `${this.Asseturl}/${result.carrierID}/${x}`\n        //  );\n        _this5.slides = result.uploadedPics;\n      }\n\n      if (result.purchaseDocs != undefined && result.purchaseDocs.length > 0) {\n        //  result.purchaseDocs.map((x) => {\n        //    let obj = {\n        //      name: x,\n        //      path: `${this.Asseturl}/${result.carrierID}/${x}`,\n        //    };\n        //    this.pDocs.push(obj);\n        //  });\n        _this5.pDocs = result.purchaseDocsUpload;\n      }\n\n      if (result.loanDocs != undefined && result.loanDocs.length > 0) {\n        //  result.loanDocs.map((x) => {\n        //    let obj = {\n        //      name: x,\n        //      path: `${this.Asseturl}/${result.carrierID}/${x}`,\n        //    };\n        //    this.lDocs.push(obj);\n        //  });\n        _this5.lDocs = result.loanDocsUpload;\n      }\n\n      if (result.uploadedDocs != undefined && result.uploadedDocs.length > 0) {\n        //  result.uploadedDocs.map((x) => {\n        //    let obj = {\n        //      name: x,\n        //      path: `${this.Asseturl}/${result.carrierID}/${x}`,\n        //    };\n        //    this.documentSlides.push(obj);\n        //  });\n        // this.documentSlides = result.uploadedDocs.map(x => `${this.Asseturl}/${result.carrierID}/${x}`);\n        _this5.documentSlides = result.uploadDocument;\n      }\n\n      _this5.timeCreated = result.timeCreated;\n      $(\"#hardBreakingParametersValue\").html(_this5.settings.hardBreakingParams);\n      $(\"#hardAccelrationParametersValue\").html(_this5.settings.hardAccelrationParams);\n      $(\"#turningParametersValue\").html(_this5.settings.turningParams); // });\n    })();\n  }\n\n  onUpdateVehicle() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      _this6.hasError = false;\n      _this6.hasSuccess = false;\n      _this6.Error = \"\";\n      _this6.submitDisabled = true;\n\n      _this6.hideErrors();\n\n      const data = {\n        vehicleID: _this6.vehicleID,\n        vehicleIdentification: _this6.vehicleIdentification,\n        vehicleType: _this6.vehicleType,\n        VIN: _this6.VIN,\n        DOT: _this6.DOT,\n        year: _this6.year,\n        manufacturerID: _this6.manufacturerID,\n        modelID: _this6.modelID,\n        plateNumber: _this6.plateNumber,\n        countryID: _this6.countryCode,\n        stateID: _this6.stateCode,\n        countryName: _this6.countryName,\n        stateName: _this6.stateName,\n        driverID: _this6.driverID,\n        teamDriverID: _this6.teamDriverID,\n        servicePrograms: _this6.servicePrograms,\n        annualSafetyDate: _this6.annualSafetyDate,\n        annualSafetyReminder: _this6.annualSafetyReminder,\n        currentStatus: _this6.currentStatus,\n        ownership: _this6.ownership,\n        ownerOperatorID: _this6.ownerOperatorID,\n        groupID: _this6.groupID,\n        aceID: _this6.aceID,\n        aciID: _this6.aciID,\n        iftaReporting: _this6.iftaReporting,\n        vehicleColor: _this6.vehicleColor,\n        bodyType: _this6.bodyType,\n        bodySubType: _this6.bodySubType,\n        msrp: _this6.msrp,\n        inspectionFormID: _this6.inspectionFormID,\n        createdTime: _this6.createdTime,\n        createdDate: _this6.createdDate,\n        lifeCycle: {\n          inServiceDate: _this6.lifeCycle.inServiceDate,\n          startDate: _this6.lifeCycle.startDate,\n          inServiceOdometer: _this6.lifeCycle.inServiceOdometer,\n          estimatedServiceYears: _this6.lifeCycle.estimatedServiceYears,\n          estimatedServiceMonths: _this6.lifeCycle.estimatedServiceMonths,\n          estimatedServiceMiles: _this6.lifeCycle.estimatedServiceMiles,\n          estimatedResaleValue: _this6.lifeCycle.estimatedResaleValue,\n          outOfServiceDate: _this6.lifeCycle.outOfServiceDate,\n          outOfServiceOdometer: _this6.lifeCycle.outOfServiceOdometer\n        },\n        specifications: {\n          height: _this6.specifications.height,\n          heightUnit: _this6.specifications.heightUnit,\n          length: _this6.specifications.length,\n          lengthUnit: _this6.specifications.lengthUnit,\n          width: _this6.specifications.width,\n          widthUnit: _this6.specifications.widthUnit,\n          interiorVolume: _this6.specifications.interiorVolume,\n          passangerVolume: _this6.specifications.passangerVolume,\n          groundClearnce: _this6.specifications.groundClearnce,\n          groundClearnceUnit: _this6.specifications.groundClearnceUnit,\n          bedLength: _this6.specifications.bedLength,\n          bedLengthUnit: _this6.specifications.bedLengthUnit,\n          cargoVolume: _this6.specifications.cargoVolume,\n          tareWeight: _this6.specifications.tareWeight,\n          grossVehicleWeightRating: _this6.specifications.grossVehicleWeightRating,\n          towingCapacity: _this6.specifications.towingCapacity,\n          maxPayload: _this6.specifications.maxPayload,\n          EPACity: _this6.specifications.EPACity,\n          EPACombined: _this6.specifications.EPACombined,\n          EPAHighway: _this6.specifications.EPAHighway\n        },\n        insurance: {\n          dateOfIssue: _this6.insurance.dateOfIssue,\n          premiumAmount: _this6.insurance.premiumAmount,\n          premiumCurrency: _this6.insurance.premiumCurrency,\n          vendorID: _this6.insurance.vendorID,\n          dateOfExpiry: _this6.insurance.dateOfExpiry,\n          reminder: _this6.insurance.reminder,\n          remiderEvery: _this6.insurance.remiderEvery,\n          policyNumber: _this6.insurance.policyNumber,\n          amount: _this6.insurance.amount,\n          amountCurrency: _this6.insurance.amountCurrency\n        },\n        fluid: {\n          fuelType: _this6.fluid.fuelType,\n          fuelTankOneCapacity: _this6.fluid.fuelTankOneCapacity,\n          fuelTankOneType: _this6.fluid.fuelTankOneType,\n          fuelQuality: _this6.fluid.fuelQuality,\n          fuelTankTwoCapacity: _this6.fluid.fuelTankTwoCapacity,\n          fuelTankTwoType: _this6.fluid.fuelTankTwoType,\n          oilCapacity: _this6.fluid.oilCapacity,\n          oilCapacityType: _this6.fluid.oilCapacityType,\n          def: _this6.fluid.def,\n          defType: _this6.fluid.defType\n        },\n        wheelsAndTyres: {\n          numberOfTyres: _this6.wheelsAndTyres.numberOfTyres,\n          driveType: _this6.wheelsAndTyres.driveType,\n          brakeSystem: _this6.wheelsAndTyres.brakeSystem,\n          wheelbase: _this6.wheelsAndTyres.wheelbase,\n          rearAxle: _this6.wheelsAndTyres.rearAxle,\n          frontTyreType: _this6.wheelsAndTyres.frontTyreType,\n          rearTyreType: _this6.wheelsAndTyres.rearTyreType,\n          frontTrackWidth: _this6.wheelsAndTyres.frontTrackWidth,\n          rearTrackWidth: _this6.wheelsAndTyres.rearTrackWidth,\n          frontWheelDiameter: _this6.wheelsAndTyres.frontWheelDiameter,\n          rearWheelDiameter: _this6.wheelsAndTyres.rearWheelDiameter,\n          frontTyrePSI: _this6.wheelsAndTyres.frontTyrePSI,\n          rearTyrePSI: _this6.wheelsAndTyres.rearTyrePSI\n        },\n        engine: {\n          engineSummary: _this6.engine.engineSummary,\n          engineBrand: _this6.engine.engineBrand,\n          aspiration: _this6.engine.aspiration,\n          blockType: _this6.engine.blockType,\n          bore: _this6.engine.bore,\n          camType: _this6.engine.camType,\n          stroke: _this6.engine.stroke,\n          valves: _this6.engine.valves,\n          compression: _this6.engine.compression,\n          cylinders: _this6.engine.cylinders,\n          displacement: _this6.engine.displacement,\n          fuelIndication: _this6.engine.fuelIndication,\n          fuelQuality: _this6.engine.fuelQuality,\n          maxHP: _this6.engine.maxHP,\n          maxTorque: _this6.engine.maxTorque,\n          readlineRPM: _this6.engine.readlineRPM,\n          transmissionSummary: _this6.engine.transmissionSummary,\n          transmissionType: _this6.engine.transmissionType,\n          transmissonBrand: _this6.engine.transmissonBrand,\n          transmissionGears: _this6.engine.transmissionGears\n        },\n        purchase: {\n          purchaseVendorID: _this6.purchase.purchaseVendorID,\n          warrantyExpirationDate: _this6.purchase.warrantyExpirationDate,\n          warrantyExpirationDateReminder: _this6.purchase.warrantyExpirationDateReminder,\n          purchasePrice: _this6.purchase.purchasePrice,\n          purchasePriceCurrency: _this6.purchase.purchasePriceCurrency,\n          warrantyExpirationMeter: _this6.purchase.warrantyExpirationMeter,\n          purchaseDate: _this6.purchase.purchaseDate,\n          purchaseComments: _this6.purchase.purchaseComments,\n          purchaseOdometer: _this6.purchase.purchaseOdometer,\n          gstInc: _this6.purchase.gstInc\n        },\n        loan: {\n          loanVendorID: _this6.loan.loanVendorID,\n          amountOfLoan: _this6.loan.amountOfLoan,\n          amountOfLoanCurrency: _this6.loan.amountOfLoanCurrency,\n          aspiration: _this6.loan.aspiration,\n          annualPercentageRate: _this6.loan.annualPercentageRate,\n          downPayment: _this6.loan.downPayment,\n          downPaymentCurrency: _this6.loan.downPaymentCurrency,\n          dateOfLoan: _this6.loan.dateOfLoan,\n          monthlyPayment: _this6.loan.monthlyPayment,\n          monthlyPaymentCurrency: _this6.loan.monthlyPaymentCurrency,\n          firstPaymentDate: _this6.loan.firstPaymentDate,\n          numberOfPayments: _this6.loan.numberOfPayments,\n          loadEndDate: _this6.loan.loadEndDate,\n          accountNumber: _this6.loan.accountNumber,\n          generateExpenses: _this6.loan.generateExpenses,\n          notes: _this6.loan.notes,\n          loanDueDate: _this6.loan.loanDueDate,\n          lReminder: _this6.loan.lReminder,\n          gstInc: _this6.loan.gstInc\n        },\n        settings: {\n          primaryMeter: _this6.settings.primaryMeter,\n          fuelUnit: _this6.settings.fuelUnit,\n          hardBreakingParams: _this6.settings.hardBreakingParams,\n          hardAccelrationParams: _this6.settings.hardAccelrationParams,\n          turningParams: _this6.settings.turningParams,\n          measurmentUnit: _this6.settings.measurmentUnit\n        },\n        uploadedPhotos: _this6.existingPhotos,\n        uploadedDocs: _this6.existingDocs,\n        purchaseDocs: _this6.existPDocs,\n        loanDocs: _this6.existLDocs,\n        activeTab: _this6.activeTab\n      }; // create form data instance\n\n      const formData = new FormData(); //append photos if any\n\n      for (let i = 0; i < _this6.uploadedPhotos.length; i++) {\n        formData.append(\"uploadedPhotos\", _this6.uploadedPhotos[i]);\n      } //append docs if any\n\n\n      for (let j = 0; j < _this6.uploadedDocs.length; j++) {\n        formData.append(\"uploadedDocs\", _this6.uploadedDocs[j]);\n      } // append purchase docs if any\n\n\n      for (let j = 0; j < _this6.purchaseDocs.length; j++) {\n        formData.append(\"purchaseDocs\", _this6.purchaseDocs[j]);\n      } // append loan docs if any\n\n\n      for (let j = 0; j < _this6.loanDocs.length; j++) {\n        formData.append(\"loanDocs\", _this6.loanDocs[j]);\n      } //append other fields\n\n\n      formData.append(\"data\", JSON.stringify(data));\n\n      try {\n        return yield new Promise((resolve, reject) => {\n          _this6.apiService.putData(\"vehicles\", formData, true).subscribe({\n            complete: () => {},\n            error: err => {\n              from(err.error).pipe(map(val => {\n                //val.message = val.message.replace(/\".*\"/, 'This Field');\n                _this6.errors[val.context.label] = val.message;\n              })).subscribe({\n                complete: () => {\n                  _this6.throwErrors();\n\n                  if (err) return reject(err);\n                  _this6.submitDisabled = false;\n                },\n                error: () => {\n                  _this6.submitDisabled = false;\n                },\n                next: () => {}\n              });\n            },\n            next: res => {\n              _this6.submitDisabled = false;\n              _this6.response = res;\n              _this6.Success = \"\";\n\n              _this6.toastr.success(\"Vehicle Updated successfully\");\n\n              _this6.dashboardUtilityService.refreshVehicles = true;\n\n              _this6.cancel();\n            }\n          });\n        });\n      } catch (error) {\n        _this6.submitDisabled = false;\n      }\n    })();\n  }\n\n  onChangePrimaryMeter(value) {\n    this.settings.primaryMeter = value;\n  }\n\n  onChangeFuelUnit(value) {\n    this.settings.fuelUnit = value;\n  }\n\n  onChangeMeasurementUnit(value) {\n    this.settings.measurmentUnit = value;\n  }\n\n  onChangeHardBreakingParameters(value) {\n    this.settings.hardBreakingParams = value;\n    $(\"#hardBreakingParametersValue\").html(value);\n  }\n\n  onChangeAccelrationParameters(value) {\n    this.settings.hardAccelrationParams = value;\n    $(\"#hardAccelrationParametersValue\").html(value);\n  }\n\n  onChangeturningParameters(value) {\n    this.settings.turningParams = value;\n    $(\"#turningParametersValue\").html(value);\n  }\n\n  quantumModal() {\n    $(document).ready(function () {\n      $(\"#quantumModal\").modal(\"show\");\n    });\n  }\n\n  onChange(newValue) {\n    this.quantum = newValue;\n    this.quantumSelected = newValue;\n  }\n\n  fetchVehicles() {\n    this.apiService.getData(\"vehicles\").subscribe(result => {\n      // this.vehicles = result.Items;\n      result.Items.forEach(element => {\n        if (element.isDeleted === 0) {\n          this.vehicles.push(element);\n        }\n      });\n    });\n  } // GROUP MODAL\n\n\n  addGroup() {\n    this.groupSubmitDisabled = true;\n    this.apiService.postData(\"groups\", this.groupData).subscribe({\n      complete: () => {},\n      error: err => {\n        from(err.error).pipe(map(val => {\n          val.message = val.message.replace(/\".*\"/, \"This Field\");\n          this.errors[val.context.key] = val.message;\n        })).subscribe({\n          complete: () => {\n            this.groupSubmitDisabled = false;\n            this.throwErrors();\n          },\n          error: () => {\n            this.groupSubmitDisabled = false;\n          },\n          next: () => {}\n        });\n      },\n      next: res => {\n        this.groupSubmitDisabled = false;\n        this.response = res;\n        this.hasSuccess = true;\n        this.fetchGroupsList();\n        this.toastr.success(\"Group added successfully\");\n        $(\"#addGroupModal\").modal(\"hide\");\n        this.fetchGroupsList();\n      }\n    });\n  }\n\n  openImageModal(slide) {\n    this.modalImage = slide;\n    $(\"#imageModal\").modal(\"show\");\n  }\n\n  deleteUploadedImage(index) {\n    this.slides.splice(index, 1);\n    this.existingPhotos.splice(index, 1);\n  }\n\n  deleteLocalImage(index) {\n    this.localPhotos.splice(index, 1);\n    this.uploadedPhotos.splice(index, 1);\n  }\n\n  driverChange(driverType) {\n    if (driverType == \"main\" && this.driverID != null && this.driverID == this.teamDriverID) {\n      alert(\"Both drivers cant be same.\");\n      this.driverID = null;\n      $(\"#main_driver\").val(null);\n    } else if (driverType == \"team\" && this.teamDriverID != null && this.driverID == this.teamDriverID) {\n      alert(\"Both drivers cant be same.\");\n      this.teamDriverID = null;\n      $(\"#team_driver\").val(null);\n    }\n  }\n\n  setPDFSrc(val) {\n    let pieces = val.split(/[\\s.]+/);\n    let ext = pieces[pieces.length - 1];\n    this.pdfSrc = \"\";\n\n    if (ext == \"doc\" || ext == \"docx\" || ext == \"xlsx\") {\n      this.pdfSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(\"https://docs.google.com/viewer?url=\" + val + \"&embedded=true\");\n    } else {\n      this.pdfSrc = this.domSanitizer.bypassSecurityTrustResourceUrl(val);\n    }\n  }\n\n  deleteDocument(value, name, index) {\n    this.apiService.deleteData(`vehicles/uploadDelete/${this.vehicleID}/${value}/${name}`).subscribe(result => {\n      if (value == \"doc\") {\n        this.documentSlides = [];\n        this.uploadedDocs = result.Attributes.uploadedDocs;\n        this.existingDocs = result.Attributes.uploadedDocs;\n        result.Attributes.uploadedDocs.map(x => {\n          let obj = {\n            name: x,\n            path: `${this.Asseturl}/${result.carrierID}/${x}`\n          };\n          this.documentSlides.push(obj);\n        });\n      } else if (value == \"loan\") {\n        this.lDocs = [];\n        this.uploadedDocs = result.Attributes.loanDocs;\n        this.existingDocs = result.Attributes.loanDocs;\n        result.Attributes.loanDocs.map(x => {\n          let obj = {\n            name: x,\n            path: `${this.Asseturl}/${result.carrierID}/${x}`\n          };\n          this.lDocs.push(obj);\n        });\n      } else {\n        this.pDocs = [];\n        this.uploadedDocs = result.Attributes.purchaseDocs;\n        this.existingDocs = result.Attributes.purchaseDocs;\n        result.Attributes.purchaseDocs.map(x => {\n          let obj = {\n            name: x,\n            path: `${this.Asseturl}/${result.carrierID}/${x}`\n          };\n          this.pDocs.push(obj);\n        });\n      }\n    });\n  }\n\n  clearGroup() {\n    this.groupData = {\n      groupType: \"vehicles\",\n      groupName: \"\",\n      groupMembers: [],\n      description: \"\"\n    };\n  }\n\n  refreshDriverData() {\n    this.listService.fetchDrivers();\n  }\n\n  refreshProgramData() {\n    this.listService.fetchServicePrograms();\n  }\n\n  openModal(unit) {\n    this.listService.triggerModal(unit);\n    localStorage.setItem(\"isOpen\", \"true\");\n    this.listService.changeButton(false);\n  }\n\n  refreshVendorData() {\n    this.listService.fetchVendors();\n  }\n\n  refreshOpData() {\n    this.listService.fetchOwnerOperators();\n  }\n\n  fetchGroupsList() {\n    this.apiService.getData('groups/get/list/type?type=vehicles').subscribe(result => {\n      this.groupsData = result;\n    });\n  }\n\n};\n\nAddVehicleComponent.ctorParameters = () => [{\n  type: ApiService\n}, {\n  type: ActivatedRoute\n}, {\n  type: Location\n}, {\n  type: ToastrService\n}, {\n  type: Router\n}, {\n  type: HttpClient\n}, {\n  type: ListService\n}, {\n  type: DomSanitizer\n}, {\n  type: CountryStateCityService\n}, {\n  type: DashboardUtilityService\n}, {\n  type: RouteManagementServiceService\n}];\n\nAddVehicleComponent.propDecorators = {\n  vehicleF: [{\n    type: ViewChild,\n    args: [\"vehicleF\"]\n  }]\n};\nAddVehicleComponent = __decorate([Component({\n  selector: \"app-add-vehicle\",\n  template: __NG_CLI_RESOURCE__0,\n  exportAs: \"vehicleF\",\n  styles: [__NG_CLI_RESOURCE__1]\n})], AddVehicleComponent);\nexport { AddVehicleComponent };","map":null,"metadata":{},"sourceType":"module"}